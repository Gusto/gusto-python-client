"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .versionheader import VersionHeader
from datetime import datetime
from enum import Enum
from gusto_app_integration.types import BaseModel
from gusto_app_integration.utils import (
    FieldMetadata,
    HeaderMetadata,
    PathParamMetadata,
    RequestMetadata,
)
import pydantic
from typing import Dict, List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class PostCompaniesCompanyUUIDTimeTrackingTimeSheetsPayClassification(str, Enum):
    r"""Pay classification for the entry."""

    REGULAR = "Regular"
    OVERTIME = "Overtime"
    DOUBLE_OVERTIME = "Double overtime"


class PostCompaniesCompanyUUIDTimeTrackingTimeSheetsEntriesTypedDict(TypedDict):
    hours_worked: NotRequired[float]
    r"""Hours worked for this pay classification. Should be passed as number with up to 3 decimal places."""
    pay_classification: NotRequired[
        PostCompaniesCompanyUUIDTimeTrackingTimeSheetsPayClassification
    ]
    r"""Pay classification for the entry."""


class PostCompaniesCompanyUUIDTimeTrackingTimeSheetsEntries(BaseModel):
    hours_worked: Optional[float] = None
    r"""Hours worked for this pay classification. Should be passed as number with up to 3 decimal places."""

    pay_classification: Optional[
        PostCompaniesCompanyUUIDTimeTrackingTimeSheetsPayClassification
    ] = None
    r"""Pay classification for the entry."""


class PostCompaniesCompanyUUIDTimeTrackingTimeSheetsRequestBodyTypedDict(TypedDict):
    entity_uuid: str
    r"""Unique identifier of the entity associated with the time sheet."""
    entity_type: str
    r"""Type of entity associated with the time sheet."""
    time_zone: str
    r"""Time zone of where the time is tracked."""
    shift_started_at: datetime
    r"""ISO 8601 timestamp of when the shift was started."""
    job_uuid: NotRequired[str]
    r"""Unique identifier of the job for which time is tracked."""
    shift_ended_at: NotRequired[datetime]
    r"""ISO 8601 timestamp of when the shift was ended. If the shift is still ongoing you can omit this field."""
    metadata: NotRequired[Dict[str, str]]
    r"""Metadata associated with the time sheet. Key-value pairs of arbitrary data. Both keys and values must be strings."""
    entries: NotRequired[
        List[PostCompaniesCompanyUUIDTimeTrackingTimeSheetsEntriesTypedDict]
    ]
    r"""Entries associated with the time sheet."""


class PostCompaniesCompanyUUIDTimeTrackingTimeSheetsRequestBody(BaseModel):
    entity_uuid: str
    r"""Unique identifier of the entity associated with the time sheet."""

    entity_type: str
    r"""Type of entity associated with the time sheet."""

    time_zone: str
    r"""Time zone of where the time is tracked."""

    shift_started_at: datetime
    r"""ISO 8601 timestamp of when the shift was started."""

    job_uuid: Optional[str] = None
    r"""Unique identifier of the job for which time is tracked."""

    shift_ended_at: Optional[datetime] = None
    r"""ISO 8601 timestamp of when the shift was ended. If the shift is still ongoing you can omit this field."""

    metadata: Optional[Dict[str, str]] = None
    r"""Metadata associated with the time sheet. Key-value pairs of arbitrary data. Both keys and values must be strings."""

    entries: Optional[List[PostCompaniesCompanyUUIDTimeTrackingTimeSheetsEntries]] = (
        None
    )
    r"""Entries associated with the time sheet."""


class PostCompaniesCompanyUUIDTimeTrackingTimeSheetsRequestTypedDict(TypedDict):
    company_uuid: str
    r"""The UUID of the company"""
    x_gusto_api_version: NotRequired[VersionHeader]
    r"""Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used."""
    request_body: NotRequired[
        PostCompaniesCompanyUUIDTimeTrackingTimeSheetsRequestBodyTypedDict
    ]


class PostCompaniesCompanyUUIDTimeTrackingTimeSheetsRequest(BaseModel):
    company_uuid: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""The UUID of the company"""

    x_gusto_api_version: Annotated[
        Optional[VersionHeader],
        pydantic.Field(alias="X-Gusto-API-Version"),
        FieldMetadata(header=HeaderMetadata(style="simple", explode=False)),
    ] = VersionHeader.TWO_THOUSAND_AND_TWENTY_FOUR_MINUS_04_MINUS_01
    r"""Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used."""

    request_body: Annotated[
        Optional[PostCompaniesCompanyUUIDTimeTrackingTimeSheetsRequestBody],
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ] = None
