"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .versionheader import VersionHeader
from datetime import datetime
from enum import Enum
from gusto_app_integration.types import BaseModel
from gusto_app_integration.utils import (
    FieldMetadata,
    HeaderMetadata,
    PathParamMetadata,
    RequestMetadata,
)
import pydantic
from typing import Dict, List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class PutTimeTrackingTimeSheetsTimeSheetUUIDPayClassification(str, Enum):
    r"""Pay classification for the entry."""

    REGULAR = "Regular"
    OVERTIME = "Overtime"
    DOUBLE_OVERTIME = "Double overtime"


class PutTimeTrackingTimeSheetsTimeSheetUUIDEntriesTypedDict(TypedDict):
    uuid: NotRequired[str]
    r"""Unique identifier of the entry."""
    hours_worked: NotRequired[float]
    r"""Hours worked for this pay classification. Should be passed as number with up to 3 decimal places."""
    pay_classification: NotRequired[
        PutTimeTrackingTimeSheetsTimeSheetUUIDPayClassification
    ]
    r"""Pay classification for the entry."""


class PutTimeTrackingTimeSheetsTimeSheetUUIDEntries(BaseModel):
    uuid: Optional[str] = None
    r"""Unique identifier of the entry."""

    hours_worked: Optional[float] = None
    r"""Hours worked for this pay classification. Should be passed as number with up to 3 decimal places."""

    pay_classification: Optional[
        PutTimeTrackingTimeSheetsTimeSheetUUIDPayClassification
    ] = None
    r"""Pay classification for the entry."""


class PutTimeTrackingTimeSheetsTimeSheetUUIDRequestBodyTypedDict(TypedDict):
    version: str
    r"""The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/idempotency) for information on how to use this field."""
    entity_uuid: NotRequired[str]
    r"""Unique identifier of the entity associated with the time sheet."""
    entity_type: NotRequired[str]
    r"""Type of entity associated with the time sheet."""
    job_uuid: NotRequired[str]
    r"""Unique identifier of the job for which time was tracked. Currently is only supported for employees."""
    time_zone: NotRequired[str]
    r"""Time zone of where the time was tracked."""
    shift_started_at: NotRequired[datetime]
    r"""The start time of the shift. Timestamp should be in ISO8601"""
    shift_ended_at: NotRequired[datetime]
    r"""The end time of the shift. If the shift is still ongoing this will be null."""
    metadata: NotRequired[Dict[str, str]]
    r"""Metadata associated with the time sheet. Key-value pairs of arbitrary data. Both keys and values must be strings."""
    entries: NotRequired[List[PutTimeTrackingTimeSheetsTimeSheetUUIDEntriesTypedDict]]
    r"""Entries associated with the time sheet."""


class PutTimeTrackingTimeSheetsTimeSheetUUIDRequestBody(BaseModel):
    version: str
    r"""The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/idempotency) for information on how to use this field."""

    entity_uuid: Optional[str] = None
    r"""Unique identifier of the entity associated with the time sheet."""

    entity_type: Optional[str] = None
    r"""Type of entity associated with the time sheet."""

    job_uuid: Optional[str] = None
    r"""Unique identifier of the job for which time was tracked. Currently is only supported for employees."""

    time_zone: Optional[str] = None
    r"""Time zone of where the time was tracked."""

    shift_started_at: Optional[datetime] = None
    r"""The start time of the shift. Timestamp should be in ISO8601"""

    shift_ended_at: Optional[datetime] = None
    r"""The end time of the shift. If the shift is still ongoing this will be null."""

    metadata: Optional[Dict[str, str]] = None
    r"""Metadata associated with the time sheet. Key-value pairs of arbitrary data. Both keys and values must be strings."""

    entries: Optional[List[PutTimeTrackingTimeSheetsTimeSheetUUIDEntries]] = None
    r"""Entries associated with the time sheet."""


class PutTimeTrackingTimeSheetsTimeSheetUUIDRequestTypedDict(TypedDict):
    time_sheet_uuid: str
    r"""UUID of the time sheet"""
    x_gusto_api_version: NotRequired[VersionHeader]
    r"""Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used."""
    request_body: NotRequired[
        PutTimeTrackingTimeSheetsTimeSheetUUIDRequestBodyTypedDict
    ]


class PutTimeTrackingTimeSheetsTimeSheetUUIDRequest(BaseModel):
    time_sheet_uuid: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""UUID of the time sheet"""

    x_gusto_api_version: Annotated[
        Optional[VersionHeader],
        pydantic.Field(alias="X-Gusto-API-Version"),
        FieldMetadata(header=HeaderMetadata(style="simple", explode=False)),
    ] = VersionHeader.TWO_THOUSAND_AND_TWENTY_FOUR_MINUS_04_MINUS_01
    r"""Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used."""

    request_body: Annotated[
        Optional[PutTimeTrackingTimeSheetsTimeSheetUUIDRequestBody],
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ] = None
