lockVersion: 2.0.0
id: 307f4640-0d05-4c9e-b275-cb7fc716aa23
management:
  docChecksum: 4254fee38dd02e52277223b07630867f
  docVersion: "2024-04-01"
  speakeasyVersion: 1.551.0
  generationVersion: 2.610.0
  releaseVersion: 0.4.0
  configChecksum: 6d35ca0ebac1bb8e35b0533ef740e8d6
  repoURL: https://github.com/Gusto/gusto-python-client.git
  repoSubDirectory: gusto_app_int
  installationURL: https://github.com/Gusto/gusto-python-client.git#subdirectory=gusto_app_int
  published: true
features:
  python:
    additionalDependencies: 1.0.0
    additionalProperties: 1.0.1
    constsAndDefaults: 1.0.5
    core: 5.19.0
    defaultEnabledRetries: 0.2.0
    deprecations: 3.0.2
    enumUnions: 0.1.0
    envVarSecurityUsage: 0.3.2
    flatRequests: 1.0.1
    flattening: 3.1.1
    globalSecurity: 3.0.3
    globalSecurityCallbacks: 1.0.0
    globalSecurityFlattening: 1.0.0
    globalServerURLs: 3.1.1
    groups: 3.0.0
    inputOutputModels: 3.0.0
    methodArguments: 1.0.2
    methodSecurity: 3.0.1
    nameOverrides: 3.0.1
    nullables: 1.0.1
    responseFormat: 1.0.1
    retries: 3.0.2
    sdkHooks: 1.0.1
    serverIDs: 3.0.0
    unions: 3.0.4
generatedFiles:
  - .gitattributes
  - .python-version
  - .vscode/settings.json
  - USAGE.md
  - docs/models/accruingtimeoffhour.md
  - docs/models/accruingtimeoffhourobject.md
  - docs/models/address.md
  - docs/models/addresses.md
  - docs/models/admin.md
  - docs/models/agencies.md
  - docs/models/authentication.md
  - docs/models/base.md
  - docs/models/benefits.md
  - docs/models/benefitsummary.md
  - docs/models/benefitsummaryemployees.md
  - docs/models/benefitsummarypayperiod.md
  - docs/models/benefittyperequirements.md
  - docs/models/benefittyperequirementscatchupdefaultvalue.md
  - docs/models/benefittyperequirementscompanycontributionannualmaximumdefaultvalue.md
  - docs/models/benefittyperequirementscontribution.md
  - docs/models/benefittyperequirementscoverageamountdefaultvalue.md
  - docs/models/benefittyperequirementscoveragesalarymultiplierdefaultvalue.md
  - docs/models/benefittyperequirementsdeductaspercentagedefaultvalue.md
  - docs/models/benefittyperequirementsdefaultvalue.md
  - docs/models/benefittyperequirementslimitoptiondefaultvalue.md
  - docs/models/catchup.md
  - docs/models/childsupportdata.md
  - docs/models/company.md
  - docs/models/companyaddress.md
  - docs/models/companybenefit.md
  - docs/models/companybenefitwithemployeebenefits.md
  - docs/models/companybenefitwithemployeebenefitscontribution.md
  - docs/models/companybenefitwithemployeebenefitssource.md
  - docs/models/companybenefitwithemployeebenefitsvalue.md
  - docs/models/companybenefitwithemployeebenefitsvalue2.md
  - docs/models/companybenefitwithemployeebenefitsvaluetiers.md
  - docs/models/companycontributionannualmaximum.md
  - docs/models/companycustomfield.md
  - docs/models/companycustomfieldlist.md
  - docs/models/companyentitytype.md
  - docs/models/companypaidtimeoff.md
  - docs/models/companystatus.md
  - docs/models/compensation.md
  - docs/models/compensations.md
  - docs/models/contractor.md
  - docs/models/contractoronboardingstatus.md
  - docs/models/contractorpayment.md
  - docs/models/contractorpaymentforgroup.md
  - docs/models/contractorpaymentforgrouppaymentmethod.md
  - docs/models/contractorpaymentforgroupstatus.md
  - docs/models/contractorpaymentforgroupwagetype.md
  - docs/models/contractorpaymentgroup.md
  - docs/models/contractorpaymentgroupminimal.md
  - docs/models/contractorpaymentgroupminimalstatus.md
  - docs/models/contractorpaymentgroupstatus.md
  - docs/models/contractorpaymentgrouptotals.md
  - docs/models/contractorpaymentmethod.md
  - docs/models/contractorpaymentpaymentmethod.md
  - docs/models/contractorpaymentsmodel.md
  - docs/models/contractorpaymentstatus.md
  - docs/models/contractorpaymentsummary.md
  - docs/models/contractorpaymentsummarybydates.md
  - docs/models/contractorpaymentsummarybydatescontractorpayments.md
  - docs/models/contractorpaymentsummarybydatestotal.md
  - docs/models/contractorpaymentwagetype.md
  - docs/models/contractorsmodel.md
  - docs/models/contractortype.md
  - docs/models/contribution.md
  - docs/models/coverageamount.md
  - docs/models/coveragesalarymultiplier.md
  - docs/models/currentemploymentstatus.md
  - docs/models/customfieldtype.md
  - docs/models/deductaspercentage.md
  - docs/models/deductionreducestaxableincome.md
  - docs/models/deductions.md
  - docs/models/defaultvalue.md
  - docs/models/deletedepartmentrequest.md
  - docs/models/deletetimetrackingtimesheetstimesheetuuidrequest.md
  - docs/models/deletev1companiescompanyidearningtypesearningtypeuuidrequest.md
  - docs/models/deletev1companybenefitscompanybenefitidrequest.md
  - docs/models/deletev1companybenefitscompanybenefitidresponsebody.md
  - docs/models/deletev1compensationscompensationidrequest.md
  - docs/models/deletev1employeebenefitsemployeebenefitidrequest.md
  - docs/models/deletev1employeeheaderxgustoapiversion.md
  - docs/models/deletev1employeerequest.md
  - docs/models/deletev1employeesemployeeidrehirerequest.md
  - docs/models/deletev1employeesemployeeidterminationsrequest.md
  - docs/models/deletev1homeaddresseshomeaddressuuidrequest.md
  - docs/models/deletev1jobsjobidrequest.md
  - docs/models/deletev1webhooksubscriptionuuidrequest.md
  - docs/models/deletev1webhooksubscriptionuuidsecurity.md
  - docs/models/deletev1workaddressesworkaddressuuidheaderxgustoapiversion.md
  - docs/models/deletev1workaddressesworkaddressuuidrequest.md
  - docs/models/department.md
  - docs/models/earningtype.md
  - docs/models/earningtypelist.md
  - docs/models/employee.md
  - docs/models/employeeaddress.md
  - docs/models/employeebenefit.md
  - docs/models/employeebenefitforcompanybenefit.md
  - docs/models/employeebenefitforcompanybenefitcontribution.md
  - docs/models/employeebenefitforcompanybenefitdeductionreducestaxableincome.md
  - docs/models/employeebenefitforcompanybenefitvalue.md
  - docs/models/employeebenefitsmodel.md
  - docs/models/employeecompensations.md
  - docs/models/employeecustomfield.md
  - docs/models/employeededuction.md
  - docs/models/employeesmodel.md
  - docs/models/employeeworkaddress.md
  - docs/models/employmenthistorylist.md
  - docs/models/employmenthistorylistemploymentstatus.md
  - docs/models/employmentstatus.md
  - docs/models/entityerrorobject.md
  - docs/models/entitytype.md
  - docs/models/entries.md
  - docs/models/errors.md
  - docs/models/event.md
  - docs/models/fipscodes.md
  - docs/models/fixed.md
  - docs/models/fixedcompensations.md
  - docs/models/flsastatustype.md
  - docs/models/fundingtype.md
  - docs/models/garnishment.md
  - docs/models/garnishmentchildsupport.md
  - docs/models/garnishmenttype.md
  - docs/models/getcompaniescompanyuuidtimetrackingtimesheetsrequest.md
  - docs/models/getcompaniesdepartmentsrequest.md
  - docs/models/getdepartmentrequest.md
  - docs/models/getemployeeytdbenefitamountsfromdifferentcompanyrequest.md
  - docs/models/geteventsrequest.md
  - docs/models/geteventssecurity.md
  - docs/models/gettimetrackingtimesheetstimesheetuuidrequest.md
  - docs/models/getv1benefitsbenefitidrequest.md
  - docs/models/getv1benefitsbenefitsidrequirementsrequest.md
  - docs/models/getv1benefitscompanybenefitidsummaryrequest.md
  - docs/models/getv1benefitsrequest.md
  - docs/models/getv1companiescompanyidadminsrequest.md
  - docs/models/getv1companiescompanyidcompanybenefitsrequest.md
  - docs/models/getv1companiescompanyidcontractorpaymentcontractorpaymentrequest.md
  - docs/models/getv1companiescompanyidcontractorpaymentgroupsrequest.md
  - docs/models/getv1companiescompanyidcontractorpaymentsrequest.md
  - docs/models/getv1companiescompanyidcontractorpaymentsresponsebody.md
  - docs/models/getv1companiescompanyidcustomfieldsrequest.md
  - docs/models/getv1companiescompanyidearningtypesrequest.md
  - docs/models/getv1companiescompanyidemployeesheaderxgustoapiversion.md
  - docs/models/getv1companiescompanyidemployeesrequest.md
  - docs/models/getv1companiescompanyidlocationsrequest.md
  - docs/models/getv1companiescompanyidpayperiodsrequest.md
  - docs/models/getv1companiescompanyidpayrollspayrollidqueryparaminclude.md
  - docs/models/getv1companiescompanyidpayrollspayrollidrequest.md
  - docs/models/getv1companiescompanyidpayrollsqueryparaminclude.md
  - docs/models/getv1companiescompanyidpayrollsrequest.md
  - docs/models/getv1companiescompanyidpayschedulesassignmentsrequest.md
  - docs/models/getv1companiescompanyidpayschedulespayscheduleidrequest.md
  - docs/models/getv1companiescompanyidpayschedulesrequest.md
  - docs/models/getv1companiescompanyidunprocessedterminationpayperiodsrequest.md
  - docs/models/getv1companiescompanyuuidcontractorsrequest.md
  - docs/models/getv1companiesrequest.md
  - docs/models/getv1companybenefitscompanybenefitidemployeebenefitsrequest.md
  - docs/models/getv1companybenefitscompanybenefitidrequest.md
  - docs/models/getv1compensationscompensationidrequest.md
  - docs/models/getv1contractorpaymentgroupscontractorpaymentgroupidrequest.md
  - docs/models/getv1contractorscontractoruuidrequest.md
  - docs/models/getv1employeebenefitsemployeebenefitidrequest.md
  - docs/models/getv1employeesemployeeidcustomfieldsrequest.md
  - docs/models/getv1employeesemployeeidcustomfieldsresponsebody.md
  - docs/models/getv1employeesemployeeidemployeebenefitsrequest.md
  - docs/models/getv1employeesemployeeidemploymenthistoryheaderxgustoapiversion.md
  - docs/models/getv1employeesemployeeidemploymenthistoryrequest.md
  - docs/models/getv1employeesemployeeidgarnishmentsrequest.md
  - docs/models/getv1employeesemployeeidhomeaddressesrequest.md
  - docs/models/getv1employeesemployeeidjobsqueryparaminclude.md
  - docs/models/getv1employeesemployeeidjobsrequest.md
  - docs/models/getv1employeesemployeeidrehirerequest.md
  - docs/models/getv1employeesemployeeidterminationsrequest.md
  - docs/models/getv1employeesemployeeidworkaddressesheaderxgustoapiversion.md
  - docs/models/getv1employeesemployeeidworkaddressesrequest.md
  - docs/models/getv1employeesheaderxgustoapiversion.md
  - docs/models/getv1employeesrequest.md
  - docs/models/getv1garnishmentschildsupportrequest.md
  - docs/models/getv1garnishmentsgarnishmentidrequest.md
  - docs/models/getv1homeaddresseshomeaddressuuidrequest.md
  - docs/models/getv1jobsjobidcompensationsqueryparaminclude.md
  - docs/models/getv1jobsjobidcompensationsrequest.md
  - docs/models/getv1jobsjobidqueryparaminclude.md
  - docs/models/getv1jobsjobidrequest.md
  - docs/models/getv1locationslocationidrequest.md
  - docs/models/getv1locationslocationuuidminimumwagesheaderxgustoapiversion.md
  - docs/models/getv1locationslocationuuidminimumwagesrequest.md
  - docs/models/getv1tokeninforequest.md
  - docs/models/getv1tokeninforesponsebody.md
  - docs/models/getv1tokeninfotype.md
  - docs/models/getv1webhooksubscriptionsrequest.md
  - docs/models/getv1webhooksubscriptionssecurity.md
  - docs/models/getv1webhooksubscriptionuuidrequest.md
  - docs/models/getv1webhooksubscriptionuuidsecurity.md
  - docs/models/getv1webhooksubscriptionverificationtokenuuidrequest.md
  - docs/models/getv1webhooksubscriptionverificationtokenuuidsecurity.md
  - docs/models/getv1workaddressesworkaddressuuidheaderxgustoapiversion.md
  - docs/models/getv1workaddressesworkaddressuuidrequest.md
  - docs/models/getversionemployeestimeoffactivitiesrequest.md
  - docs/models/headerxgustoapiversion.md
  - docs/models/homeaddress.md
  - docs/models/hourly.md
  - docs/models/hourlycompensations.md
  - docs/models/include.md
  - docs/models/job.md
  - docs/models/key.md
  - docs/models/limitoption.md
  - docs/models/location.md
  - docs/models/metadata.md
  - docs/models/metadatawithmultipleentities.md
  - docs/models/metadatawithoneentity.md
  - docs/models/minimumwage.md
  - docs/models/minimumwages.md
  - docs/models/name.md
  - docs/models/offcyclereasontype.md
  - docs/models/onboardingdocumentsconfig.md
  - docs/models/onboardingstatus.md
  - docs/models/paidtimeoff.md
  - docs/models/payclassification.md
  - docs/models/paymentmethod.md
  - docs/models/paymentperiod.md
  - docs/models/paymentunit.md
  - docs/models/payperiod.md
  - docs/models/payperiodpayroll.md
  - docs/models/payroll.md
  - docs/models/payrollbenefits.md
  - docs/models/payrollcompanytaxestype.md
  - docs/models/payrollcreditblockerstype.md
  - docs/models/payrollcreditblockerstypemetadata.md
  - docs/models/payrollcreditblockerstypestatus.md
  - docs/models/payrollcreditblockerstypeunblockoptions.md
  - docs/models/payrollemployeecompensationstype.md
  - docs/models/payrollemployeecompensationstypepaidtimeoff.md
  - docs/models/payrollemployeecompensationstypepaymentmethod.md
  - docs/models/payrollfixedcompensationtypestype.md
  - docs/models/payrollminimal.md
  - docs/models/payrollpaymentspeedchangedtype.md
  - docs/models/payrollpayperiodtype.md
  - docs/models/payrollpayrollstatusmetatype.md
  - docs/models/payrollprepared.md
  - docs/models/payrollprocessingrequest.md
  - docs/models/payrollprocessingrequeststatus.md
  - docs/models/payrollsubmissionblockerstype.md
  - docs/models/payrollsubmissionblockerstypemetadata.md
  - docs/models/payrollsubmissionblockerstypestatus.md
  - docs/models/payrolltotalstype.md
  - docs/models/payrolltype.md
  - docs/models/payrolltypes.md
  - docs/models/payrollwithholdingpayperiodtype.md
  - docs/models/payscheduleassignment.md
  - docs/models/payscheduleassignmentdepartment.md
  - docs/models/payscheduleassignmentemployee.md
  - docs/models/payschedulefrequency.md
  - docs/models/payschedulelist.md
  - docs/models/payscheduleobject.md
  - docs/models/payscheduletype.md
  - docs/models/postcompaniescompanyuuidtimetrackingtimesheetsentries.md
  - docs/models/postcompaniescompanyuuidtimetrackingtimesheetspayclassification.md
  - docs/models/postcompaniescompanyuuidtimetrackingtimesheetsrequest.md
  - docs/models/postcompaniescompanyuuidtimetrackingtimesheetsrequestbody.md
  - docs/models/postdepartmentsrequest.md
  - docs/models/postdepartmentsrequestbody.md
  - docs/models/postemployeeytdbenefitamountsfromdifferentcompany.md
  - docs/models/postemployeeytdbenefitamountsfromdifferentcompanyrequest.md
  - docs/models/postv1companiescompanyidcompanybenefitsrequest.md
  - docs/models/postv1companiescompanyidcompanybenefitsrequestbody.md
  - docs/models/postv1companiescompanyidcontractorpaymentgroupspreviewcontractorpayments.md
  - docs/models/postv1companiescompanyidcontractorpaymentgroupspreviewpaymentmethod.md
  - docs/models/postv1companiescompanyidcontractorpaymentgroupspreviewrequest.md
  - docs/models/postv1companiescompanyidcontractorpaymentgroupspreviewrequestbody.md
  - docs/models/postv1companiescompanyidearningtypesrequest.md
  - docs/models/postv1companiescompanyidearningtypesrequestbody.md
  - docs/models/postv1companiescompanyidlocationsrequest.md
  - docs/models/postv1companiescompanyidlocationsrequestbody.md
  - docs/models/postv1companiescompanyuuidcontractorsrequest.md
  - docs/models/postv1companiescompanyuuidcontractorsrequestbody.md
  - docs/models/postv1companiescompanyuuidcontractorstype.md
  - docs/models/postv1companiescompanyuuidcontractorswagetype.md
  - docs/models/postv1compensationscompensationidminimumwages.md
  - docs/models/postv1compensationscompensationidpaymentunit.md
  - docs/models/postv1compensationscompensationidrequest.md
  - docs/models/postv1compensationscompensationidrequestbody.md
  - docs/models/postv1disconnectappintegrationrequest.md
  - docs/models/postv1disconnectappintegrationsecurity.md
  - docs/models/postv1employeesemployeeidemployeebenefitscontribution.md
  - docs/models/postv1employeesemployeeidemployeebenefitsdeductionreducestaxableincome.md
  - docs/models/postv1employeesemployeeidemployeebenefitslimitoption.md
  - docs/models/postv1employeesemployeeidemployeebenefitsrequest.md
  - docs/models/postv1employeesemployeeidemployeebenefitsrequestbody.md
  - docs/models/postv1employeesemployeeidemployeebenefitstype.md
  - docs/models/postv1employeesemployeeidemployeebenefitsvalue.md
  - docs/models/postv1employeesemployeeidemployeebenefitsvalue2.md
  - docs/models/postv1employeesemployeeidgarnishmentsgarnishmenttype.md
  - docs/models/postv1employeesemployeeidgarnishmentsrequest.md
  - docs/models/postv1employeesemployeeidgarnishmentsrequestbody.md
  - docs/models/postv1employeesemployeeidhomeaddressesrequest.md
  - docs/models/postv1employeesemployeeidhomeaddressesrequestbody.md
  - docs/models/postv1employeesemployeeidrehirerequest.md
  - docs/models/postv1employeesemployeeidterminationsrequest.md
  - docs/models/postv1employeesemployeeidterminationsrequestbody.md
  - docs/models/postv1employeesemployeeidworkaddressesheaderxgustoapiversion.md
  - docs/models/postv1employeesemployeeidworkaddressesrequest.md
  - docs/models/postv1employeesemployeeidworkaddressesrequestbody.md
  - docs/models/postv1employeesheaderxgustoapiversion.md
  - docs/models/postv1employeesrequest.md
  - docs/models/postv1employeesrequestbody.md
  - docs/models/postv1jobsjobidrequest.md
  - docs/models/postv1jobsjobidrequestbody.md
  - docs/models/postv1payrollspayrollidcalculateaccruingtimeoffhoursrequest.md
  - docs/models/postv1payrollspayrollidcalculateaccruingtimeoffhoursrequestbody.md
  - docs/models/postv1provisioncompany.md
  - docs/models/postv1provisionrequest.md
  - docs/models/postv1provisionrequestbody.md
  - docs/models/postv1provisionresponsebody.md
  - docs/models/postv1provisionsecurity.md
  - docs/models/postv1webhooksubscriptionrequest.md
  - docs/models/postv1webhooksubscriptionrequestbody.md
  - docs/models/postv1webhooksubscriptionsecurity.md
  - docs/models/postv1webhooksubscriptionsubscriptiontypes.md
  - docs/models/primarypayrolladmin.md
  - docs/models/primarysignatory.md
  - docs/models/processingstatuses.md
  - docs/models/putaddpeopletodepartmentcontractors.md
  - docs/models/putaddpeopletodepartmentemployees.md
  - docs/models/putaddpeopletodepartmentrequest.md
  - docs/models/putaddpeopletodepartmentrequestbody.md
  - docs/models/putdepartmentsrequest.md
  - docs/models/putdepartmentsrequestbody.md
  - docs/models/putremovepeoplefromdepartmentcontractors.md
  - docs/models/putremovepeoplefromdepartmentemployees.md
  - docs/models/putremovepeoplefromdepartmentrequest.md
  - docs/models/putremovepeoplefromdepartmentrequestbody.md
  - docs/models/puttimetrackingtimesheetstimesheetuuidentries.md
  - docs/models/puttimetrackingtimesheetstimesheetuuidpayclassification.md
  - docs/models/puttimetrackingtimesheetstimesheetuuidrequest.md
  - docs/models/puttimetrackingtimesheetstimesheetuuidrequestbody.md
  - docs/models/putv1companiescompanyidearningtypesearningtypeuuidrequest.md
  - docs/models/putv1companiescompanyidearningtypesearningtypeuuidrequestbody.md
  - docs/models/putv1companiescompanyidpayrollsfixedcompensations.md
  - docs/models/putv1companiescompanyidpayrollshourlycompensations.md
  - docs/models/putv1companiescompanyidpayrollspaidtimeoff.md
  - docs/models/putv1companiescompanyidpayrollspaymentmethod.md
  - docs/models/putv1companiescompanyidpayrollspayrollidpreparerequest.md
  - docs/models/putv1companiescompanyidpayrollsrequest.md
  - docs/models/putv1companiescompanyidpayrollsrequestbody.md
  - docs/models/putv1companiesrequest.md
  - docs/models/putv1companiesrequestbody.md
  - docs/models/putv1companybenefitscompanybenefitidemployeebenefitsrequest.md
  - docs/models/putv1companybenefitscompanybenefitidemployeebenefitsrequestbody.md
  - docs/models/putv1companybenefitscompanybenefitidrequest.md
  - docs/models/putv1companybenefitscompanybenefitidrequestbody.md
  - docs/models/putv1compensationscompensationidminimumwages.md
  - docs/models/putv1compensationscompensationidpaymentunit.md
  - docs/models/putv1compensationscompensationidrequest.md
  - docs/models/putv1compensationscompensationidrequestbody.md
  - docs/models/putv1contractorscontractoruuidrequest.md
  - docs/models/putv1contractorscontractoruuidrequestbody.md
  - docs/models/putv1contractorscontractoruuidtype.md
  - docs/models/putv1contractorscontractoruuidwagetype.md
  - docs/models/putv1employeebenefitsemployeebenefitidcontribution.md
  - docs/models/putv1employeebenefitsemployeebenefitiddeductionreducestaxableincome.md
  - docs/models/putv1employeebenefitsemployeebenefitidlimitoption.md
  - docs/models/putv1employeebenefitsemployeebenefitidrequest.md
  - docs/models/putv1employeebenefitsemployeebenefitidrequestbody.md
  - docs/models/putv1employeebenefitsemployeebenefitidtype.md
  - docs/models/putv1employeebenefitsemployeebenefitidvalue.md
  - docs/models/putv1employeebenefitsemployeebenefitidvalue2.md
  - docs/models/putv1employeesemployeeidrehireemploymentstatus.md
  - docs/models/putv1employeesemployeeidrehirerequest.md
  - docs/models/putv1employeesemployeeidrehirerequestbody.md
  - docs/models/putv1employeesrequest.md
  - docs/models/putv1employeesrequestbody.md
  - docs/models/putv1garnishmentsgarnishmentidrequest.md
  - docs/models/putv1garnishmentsgarnishmentidrequestbody.md
  - docs/models/putv1homeaddresseshomeaddressuuidrequest.md
  - docs/models/putv1homeaddresseshomeaddressuuidrequestbody.md
  - docs/models/putv1jobsjobidrequest.md
  - docs/models/putv1jobsjobidrequestbody.md
  - docs/models/putv1locationslocationidrequest.md
  - docs/models/putv1locationslocationidrequestbody.md
  - docs/models/putv1terminationsemployeeidrequest.md
  - docs/models/putv1terminationsemployeeidrequestbody.md
  - docs/models/putv1verifywebhooksubscriptionuuidrequest.md
  - docs/models/putv1verifywebhooksubscriptionuuidrequestbody.md
  - docs/models/putv1verifywebhooksubscriptionuuidsecurity.md
  - docs/models/putv1webhooksubscriptionuuidrequest.md
  - docs/models/putv1webhooksubscriptionuuidrequestbody.md
  - docs/models/putv1webhooksubscriptionuuidsecurity.md
  - docs/models/putv1webhooksubscriptionuuidsubscriptiontypes.md
  - docs/models/putv1workaddressesworkaddressuuidheaderxgustoapiversion.md
  - docs/models/putv1workaddressesworkaddressuuidrequest.md
  - docs/models/putv1workaddressesworkaddressuuidrequestbody.md
  - docs/models/queryparaminclude.md
  - docs/models/refreshaccesstokenrequest.md
  - docs/models/refreshaccesstokenrequestbody.md
  - docs/models/rehire.md
  - docs/models/rehirebody.md
  - docs/models/rehireemploymentstatus.md
  - docs/models/requiredattributes.md
  - docs/models/resource.md
  - docs/models/resourceowner.md
  - docs/models/resourcetype.md
  - docs/models/revokeaccesstokenrequest.md
  - docs/models/revokeaccesstokenrequestbody.md
  - docs/models/security.md
  - docs/models/sortorder.md
  - docs/models/source.md
  - docs/models/status.md
  - docs/models/subscriptiontypes.md
  - docs/models/supportedbenefit.md
  - docs/models/taxes.md
  - docs/models/termination.md
  - docs/models/tier.md
  - docs/models/tiers.md
  - docs/models/timeoffactivity.md
  - docs/models/timeofftype.md
  - docs/models/timesheet.md
  - docs/models/timesheetentitytype.md
  - docs/models/timesheetsortby.md
  - docs/models/timesheetsortorder.md
  - docs/models/timesheetstatus.md
  - docs/models/total.md
  - docs/models/totals.md
  - docs/models/two.md
  - docs/models/type.md
  - docs/models/unblockoptions.md
  - docs/models/unprocessableentityerrorobject.md
  - docs/models/unprocessedterminationpayperiod.md
  - docs/models/user.md
  - docs/models/utils/retryconfig.md
  - docs/models/value.md
  - docs/models/value2.md
  - docs/models/valuetiers.md
  - docs/models/versionheader.md
  - docs/models/wagetype.md
  - docs/models/webhooksubscription.md
  - docs/models/webhooksubscriptionstatus.md
  - docs/models/withholdingpayperiod.md
  - docs/models/xgustoapiversion.md
  - docs/models/ytdbenefitamountsfromdifferentcompany.md
  - docs/sdks/companies/README.md
  - docs/sdks/companybenefits/README.md
  - docs/sdks/companylocations/README.md
  - docs/sdks/contractorpaymentgroups/README.md
  - docs/sdks/contractorpayments/README.md
  - docs/sdks/contractors/README.md
  - docs/sdks/departments/README.md
  - docs/sdks/earningtypes/README.md
  - docs/sdks/employeeaddresses/README.md
  - docs/sdks/employeebenefits/README.md
  - docs/sdks/employeeemployments/README.md
  - docs/sdks/employees/README.md
  - docs/sdks/events/README.md
  - docs/sdks/garnishments/README.md
  - docs/sdks/gustoappintegration/README.md
  - docs/sdks/introspection/README.md
  - docs/sdks/jobs/README.md
  - docs/sdks/jobsandcompensations/README.md
  - docs/sdks/locations/README.md
  - docs/sdks/payrolls/README.md
  - docs/sdks/payschedules/README.md
  - docs/sdks/timeoffpolicies/README.md
  - docs/sdks/timetracking/README.md
  - docs/sdks/webhooks/README.md
  - poetry.toml
  - py.typed
  - pylintrc
  - pyproject.toml
  - scripts/prepare_readme.py
  - scripts/publish.sh
  - src/gusto_app_integration/__init__.py
  - src/gusto_app_integration/_hooks/__init__.py
  - src/gusto_app_integration/_hooks/sdkhooks.py
  - src/gusto_app_integration/_hooks/types.py
  - src/gusto_app_integration/_version.py
  - src/gusto_app_integration/basesdk.py
  - src/gusto_app_integration/companies.py
  - src/gusto_app_integration/companybenefits.py
  - src/gusto_app_integration/companylocations.py
  - src/gusto_app_integration/contractorpaymentgroups.py
  - src/gusto_app_integration/contractorpayments.py
  - src/gusto_app_integration/contractors.py
  - src/gusto_app_integration/departments.py
  - src/gusto_app_integration/earningtypes.py
  - src/gusto_app_integration/employeeaddresses.py
  - src/gusto_app_integration/employeebenefits.py
  - src/gusto_app_integration/employeeemployments.py
  - src/gusto_app_integration/employees.py
  - src/gusto_app_integration/events.py
  - src/gusto_app_integration/garnishments.py
  - src/gusto_app_integration/httpclient.py
  - src/gusto_app_integration/introspection.py
  - src/gusto_app_integration/jobs.py
  - src/gusto_app_integration/jobsandcompensations.py
  - src/gusto_app_integration/locations.py
  - src/gusto_app_integration/models/__init__.py
  - src/gusto_app_integration/models/accruing_time_off_hour.py
  - src/gusto_app_integration/models/accruing_time_off_hour_object.py
  - src/gusto_app_integration/models/admin.py
  - src/gusto_app_integration/models/apierror.py
  - src/gusto_app_integration/models/authentication.py
  - src/gusto_app_integration/models/benefit_summary.py
  - src/gusto_app_integration/models/benefit_type_requirements.py
  - src/gusto_app_integration/models/child_support_data.py
  - src/gusto_app_integration/models/company.py
  - src/gusto_app_integration/models/company_address.py
  - src/gusto_app_integration/models/company_benefit.py
  - src/gusto_app_integration/models/company_benefit_with_employee_benefits.py
  - src/gusto_app_integration/models/company_custom_field.py
  - src/gusto_app_integration/models/company_custom_field_list.py
  - src/gusto_app_integration/models/compensation.py
  - src/gusto_app_integration/models/contractor.py
  - src/gusto_app_integration/models/contractor_payment.py
  - src/gusto_app_integration/models/contractor_payment_for_group.py
  - src/gusto_app_integration/models/contractor_payment_group.py
  - src/gusto_app_integration/models/contractor_payment_group_minimal.py
  - src/gusto_app_integration/models/contractor_payment_summary.py
  - src/gusto_app_integration/models/contractor_payment_summary_by_dates.py
  - src/gusto_app_integration/models/custom_field_type.py
  - src/gusto_app_integration/models/delete_departmentop.py
  - src/gusto_app_integration/models/delete_time_tracking_time_sheets_time_sheet_uuidop.py
  - src/gusto_app_integration/models/delete_v1_companies_company_id_earning_types_earning_type_uuidop.py
  - src/gusto_app_integration/models/delete_v1_company_benefits_company_benefit_idop.py
  - src/gusto_app_integration/models/delete_v1_compensations_compensation_idop.py
  - src/gusto_app_integration/models/delete_v1_employee_benefits_employee_benefit_idop.py
  - src/gusto_app_integration/models/delete_v1_employeeop.py
  - src/gusto_app_integration/models/delete_v1_employees_employee_id_rehireop.py
  - src/gusto_app_integration/models/delete_v1_employees_employee_id_terminationsop.py
  - src/gusto_app_integration/models/delete_v1_home_addresses_home_address_uuidop.py
  - src/gusto_app_integration/models/delete_v1_jobs_job_idop.py
  - src/gusto_app_integration/models/delete_v1_webhook_subscription_uuidop.py
  - src/gusto_app_integration/models/delete_v1_work_addresses_work_address_uuidop.py
  - src/gusto_app_integration/models/department.py
  - src/gusto_app_integration/models/earning_type.py
  - src/gusto_app_integration/models/earning_type_list.py
  - src/gusto_app_integration/models/employee.py
  - src/gusto_app_integration/models/employee_address.py
  - src/gusto_app_integration/models/employee_benefit.py
  - src/gusto_app_integration/models/employee_benefit_for_company_benefit.py
  - src/gusto_app_integration/models/employee_custom_field.py
  - src/gusto_app_integration/models/employee_work_address.py
  - src/gusto_app_integration/models/employment_history_list.py
  - src/gusto_app_integration/models/entity_error_object.py
  - src/gusto_app_integration/models/entity_type.py
  - src/gusto_app_integration/models/event.py
  - src/gusto_app_integration/models/flsa_status_type.py
  - src/gusto_app_integration/models/garnishment.py
  - src/gusto_app_integration/models/garnishment_child_support.py
  - src/gusto_app_integration/models/get_companies_company_uuid_time_tracking_time_sheetsop.py
  - src/gusto_app_integration/models/get_companies_departmentsop.py
  - src/gusto_app_integration/models/get_departmentop.py
  - src/gusto_app_integration/models/get_employee_ytd_benefit_amounts_from_different_companyop.py
  - src/gusto_app_integration/models/get_eventsop.py
  - src/gusto_app_integration/models/get_time_tracking_time_sheets_time_sheet_uuidop.py
  - src/gusto_app_integration/models/get_v1_benefits_benefit_idop.py
  - src/gusto_app_integration/models/get_v1_benefits_benefits_id_requirementsop.py
  - src/gusto_app_integration/models/get_v1_benefits_company_benefit_id_summaryop.py
  - src/gusto_app_integration/models/get_v1_benefitsop.py
  - src/gusto_app_integration/models/get_v1_companies_company_id_adminsop.py
  - src/gusto_app_integration/models/get_v1_companies_company_id_company_benefitsop.py
  - src/gusto_app_integration/models/get_v1_companies_company_id_contractor_payment_contractor_paymentop.py
  - src/gusto_app_integration/models/get_v1_companies_company_id_contractor_payment_groupsop.py
  - src/gusto_app_integration/models/get_v1_companies_company_id_contractor_paymentsop.py
  - src/gusto_app_integration/models/get_v1_companies_company_id_custom_fieldsop.py
  - src/gusto_app_integration/models/get_v1_companies_company_id_earning_typesop.py
  - src/gusto_app_integration/models/get_v1_companies_company_id_employeesop.py
  - src/gusto_app_integration/models/get_v1_companies_company_id_locationsop.py
  - src/gusto_app_integration/models/get_v1_companies_company_id_pay_periodsop.py
  - src/gusto_app_integration/models/get_v1_companies_company_id_pay_schedules_assignmentsop.py
  - src/gusto_app_integration/models/get_v1_companies_company_id_pay_schedules_pay_schedule_idop.py
  - src/gusto_app_integration/models/get_v1_companies_company_id_pay_schedulesop.py
  - src/gusto_app_integration/models/get_v1_companies_company_id_payrolls_payroll_idop.py
  - src/gusto_app_integration/models/get_v1_companies_company_id_payrollsop.py
  - src/gusto_app_integration/models/get_v1_companies_company_id_unprocessed_termination_pay_periodsop.py
  - src/gusto_app_integration/models/get_v1_companies_company_uuid_contractorsop.py
  - src/gusto_app_integration/models/get_v1_companiesop.py
  - src/gusto_app_integration/models/get_v1_company_benefits_company_benefit_id_employee_benefitsop.py
  - src/gusto_app_integration/models/get_v1_company_benefits_company_benefit_idop.py
  - src/gusto_app_integration/models/get_v1_compensations_compensation_idop.py
  - src/gusto_app_integration/models/get_v1_contractor_payment_groups_contractor_payment_group_idop.py
  - src/gusto_app_integration/models/get_v1_contractors_contractor_uuidop.py
  - src/gusto_app_integration/models/get_v1_employee_benefits_employee_benefit_idop.py
  - src/gusto_app_integration/models/get_v1_employees_employee_id_custom_fieldsop.py
  - src/gusto_app_integration/models/get_v1_employees_employee_id_employee_benefitsop.py
  - src/gusto_app_integration/models/get_v1_employees_employee_id_employment_historyop.py
  - src/gusto_app_integration/models/get_v1_employees_employee_id_garnishmentsop.py
  - src/gusto_app_integration/models/get_v1_employees_employee_id_home_addressesop.py
  - src/gusto_app_integration/models/get_v1_employees_employee_id_jobsop.py
  - src/gusto_app_integration/models/get_v1_employees_employee_id_rehireop.py
  - src/gusto_app_integration/models/get_v1_employees_employee_id_terminationsop.py
  - src/gusto_app_integration/models/get_v1_employees_employee_id_work_addressesop.py
  - src/gusto_app_integration/models/get_v1_employeesop.py
  - src/gusto_app_integration/models/get_v1_garnishments_child_supportop.py
  - src/gusto_app_integration/models/get_v1_garnishments_garnishment_idop.py
  - src/gusto_app_integration/models/get_v1_home_addresses_home_address_uuidop.py
  - src/gusto_app_integration/models/get_v1_jobs_job_id_compensationsop.py
  - src/gusto_app_integration/models/get_v1_jobs_job_idop.py
  - src/gusto_app_integration/models/get_v1_locations_location_idop.py
  - src/gusto_app_integration/models/get_v1_locations_location_uuid_minimum_wagesop.py
  - src/gusto_app_integration/models/get_v1_token_infoop.py
  - src/gusto_app_integration/models/get_v1_webhook_subscription_uuidop.py
  - src/gusto_app_integration/models/get_v1_webhook_subscription_verification_token_uuidop.py
  - src/gusto_app_integration/models/get_v1_webhook_subscriptionsop.py
  - src/gusto_app_integration/models/get_v1_work_addresses_work_address_uuidop.py
  - src/gusto_app_integration/models/get_version_employees_time_off_activitiesop.py
  - src/gusto_app_integration/models/job.py
  - src/gusto_app_integration/models/location.py
  - src/gusto_app_integration/models/metadata_with_multiple_entities.py
  - src/gusto_app_integration/models/metadata_with_one_entity.py
  - src/gusto_app_integration/models/minimum_wage.py
  - src/gusto_app_integration/models/off_cycle_reason_type.py
  - src/gusto_app_integration/models/paid_time_off.py
  - src/gusto_app_integration/models/pay_period.py
  - src/gusto_app_integration/models/pay_schedule_assignment.py
  - src/gusto_app_integration/models/pay_schedule_assignment_department.py
  - src/gusto_app_integration/models/pay_schedule_assignment_employee.py
  - src/gusto_app_integration/models/pay_schedule_frequency.py
  - src/gusto_app_integration/models/pay_schedule_list.py
  - src/gusto_app_integration/models/pay_schedule_object.py
  - src/gusto_app_integration/models/payroll.py
  - src/gusto_app_integration/models/payroll_company_taxes_type.py
  - src/gusto_app_integration/models/payroll_credit_blockers_type.py
  - src/gusto_app_integration/models/payroll_employee_compensations_type.py
  - src/gusto_app_integration/models/payroll_fixed_compensation_types_type.py
  - src/gusto_app_integration/models/payroll_minimal.py
  - src/gusto_app_integration/models/payroll_pay_period_type.py
  - src/gusto_app_integration/models/payroll_payment_speed_changed_type.py
  - src/gusto_app_integration/models/payroll_payroll_status_meta_type.py
  - src/gusto_app_integration/models/payroll_prepared.py
  - src/gusto_app_integration/models/payroll_processing_request.py
  - src/gusto_app_integration/models/payroll_submission_blockers_type.py
  - src/gusto_app_integration/models/payroll_totals_type.py
  - src/gusto_app_integration/models/payroll_withholding_pay_period_type.py
  - src/gusto_app_integration/models/post_companies_company_uuid_time_tracking_time_sheetsop.py
  - src/gusto_app_integration/models/post_departmentsop.py
  - src/gusto_app_integration/models/post_employee_ytd_benefit_amounts_from_different_company.py
  - src/gusto_app_integration/models/post_employee_ytd_benefit_amounts_from_different_companyop.py
  - src/gusto_app_integration/models/post_v1_companies_company_id_company_benefitsop.py
  - src/gusto_app_integration/models/post_v1_companies_company_id_contractor_payment_groups_previewop.py
  - src/gusto_app_integration/models/post_v1_companies_company_id_earning_typesop.py
  - src/gusto_app_integration/models/post_v1_companies_company_id_locationsop.py
  - src/gusto_app_integration/models/post_v1_companies_company_uuid_contractorsop.py
  - src/gusto_app_integration/models/post_v1_compensations_compensation_idop.py
  - src/gusto_app_integration/models/post_v1_disconnect_app_integrationop.py
  - src/gusto_app_integration/models/post_v1_employees_employee_id_employee_benefitsop.py
  - src/gusto_app_integration/models/post_v1_employees_employee_id_garnishmentsop.py
  - src/gusto_app_integration/models/post_v1_employees_employee_id_home_addressesop.py
  - src/gusto_app_integration/models/post_v1_employees_employee_id_rehireop.py
  - src/gusto_app_integration/models/post_v1_employees_employee_id_terminationsop.py
  - src/gusto_app_integration/models/post_v1_employees_employee_id_work_addressesop.py
  - src/gusto_app_integration/models/post_v1_employeesop.py
  - src/gusto_app_integration/models/post_v1_jobs_job_idop.py
  - src/gusto_app_integration/models/post_v1_payrolls_payroll_id_calculate_accruing_time_off_hoursop.py
  - src/gusto_app_integration/models/post_v1_provisionop.py
  - src/gusto_app_integration/models/post_v1_webhook_subscriptionop.py
  - src/gusto_app_integration/models/put_add_people_to_departmentop.py
  - src/gusto_app_integration/models/put_departmentsop.py
  - src/gusto_app_integration/models/put_remove_people_from_departmentop.py
  - src/gusto_app_integration/models/put_time_tracking_time_sheets_time_sheet_uuidop.py
  - src/gusto_app_integration/models/put_v1_companies_company_id_earning_types_earning_type_uuidop.py
  - src/gusto_app_integration/models/put_v1_companies_company_id_payrolls_payroll_id_prepareop.py
  - src/gusto_app_integration/models/put_v1_companies_company_id_payrollsop.py
  - src/gusto_app_integration/models/put_v1_companiesop.py
  - src/gusto_app_integration/models/put_v1_company_benefits_company_benefit_id_employee_benefitsop.py
  - src/gusto_app_integration/models/put_v1_company_benefits_company_benefit_idop.py
  - src/gusto_app_integration/models/put_v1_compensations_compensation_idop.py
  - src/gusto_app_integration/models/put_v1_contractors_contractor_uuidop.py
  - src/gusto_app_integration/models/put_v1_employee_benefits_employee_benefit_idop.py
  - src/gusto_app_integration/models/put_v1_employees_employee_id_rehireop.py
  - src/gusto_app_integration/models/put_v1_employeesop.py
  - src/gusto_app_integration/models/put_v1_garnishments_garnishment_idop.py
  - src/gusto_app_integration/models/put_v1_home_addresses_home_address_uuidop.py
  - src/gusto_app_integration/models/put_v1_jobs_job_idop.py
  - src/gusto_app_integration/models/put_v1_locations_location_idop.py
  - src/gusto_app_integration/models/put_v1_terminations_employee_idop.py
  - src/gusto_app_integration/models/put_v1_verify_webhook_subscription_uuidop.py
  - src/gusto_app_integration/models/put_v1_webhook_subscription_uuidop.py
  - src/gusto_app_integration/models/put_v1_work_addresses_work_address_uuidop.py
  - src/gusto_app_integration/models/refresh_access_tokenop.py
  - src/gusto_app_integration/models/rehire.py
  - src/gusto_app_integration/models/rehire_body.py
  - src/gusto_app_integration/models/revoke_access_tokenop.py
  - src/gusto_app_integration/models/security.py
  - src/gusto_app_integration/models/sort_order.py
  - src/gusto_app_integration/models/status.py
  - src/gusto_app_integration/models/supported_benefit.py
  - src/gusto_app_integration/models/termination.py
  - src/gusto_app_integration/models/time_off_activity.py
  - src/gusto_app_integration/models/time_sheet.py
  - src/gusto_app_integration/models/time_sheet_sort_by.py
  - src/gusto_app_integration/models/time_sheet_sort_order.py
  - src/gusto_app_integration/models/unprocessable_entity_error_object.py
  - src/gusto_app_integration/models/unprocessed_termination_pay_period.py
  - src/gusto_app_integration/models/versionheader.py
  - src/gusto_app_integration/models/webhook_subscription.py
  - src/gusto_app_integration/models/ytd_benefit_amounts_from_different_company.py
  - src/gusto_app_integration/payrolls.py
  - src/gusto_app_integration/payschedules.py
  - src/gusto_app_integration/py.typed
  - src/gusto_app_integration/sdk.py
  - src/gusto_app_integration/sdkconfiguration.py
  - src/gusto_app_integration/time_tracking.py
  - src/gusto_app_integration/timeoffpolicies.py
  - src/gusto_app_integration/types/__init__.py
  - src/gusto_app_integration/types/basemodel.py
  - src/gusto_app_integration/utils/__init__.py
  - src/gusto_app_integration/utils/annotations.py
  - src/gusto_app_integration/utils/datetimes.py
  - src/gusto_app_integration/utils/enums.py
  - src/gusto_app_integration/utils/eventstreaming.py
  - src/gusto_app_integration/utils/forms.py
  - src/gusto_app_integration/utils/headers.py
  - src/gusto_app_integration/utils/logger.py
  - src/gusto_app_integration/utils/metadata.py
  - src/gusto_app_integration/utils/queryparams.py
  - src/gusto_app_integration/utils/requestbodies.py
  - src/gusto_app_integration/utils/retries.py
  - src/gusto_app_integration/utils/security.py
  - src/gusto_app_integration/utils/serializers.py
  - src/gusto_app_integration/utils/url.py
  - src/gusto_app_integration/utils/values.py
  - src/gusto_app_integration/webhooks.py
examples:
  get-v1-token-info:
    Example:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"scope": "companies:read companies:write employees:read", "resource": {"type": "Company", "uuid": "5eca5127-6048-43ad-91ee-b56a0c34bc85"}, "resource_owner": {"type": "CompanyAdmin", "uuid": "367871c2-3f70-4874-adc9-f1736647e8e1"}}
  revoke-access-token:
    speakeasy-default-revoke-access-token:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"client_id": "<id>", "client_secret": "<value>", "token": "<value>"}
  refresh-access-token:
    Example:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"client_id": "<id>", "client_secret": "<value>", "refresh_token": "<value>", "grant_type": "<value>"}
      responses:
        "200":
          application/json: {"access_token": "737HdeXfIqgx-NfaUFRuhV7JDe6ns6ptanJSMuQzjlc", "token_type": "bearer", "expires_in": 7200, "refresh_token": "iEjL96L9Pndwmi-xVX3Q-xbrvvhnjHYGX87sopgGJ8E", "created_at": "1732033824", "scope": "ach_transactions:read benefits:read companies:read"}
  post-v1-disconnect-app-integration:
    speakeasy-default-post-v1-disconnect-app-integration:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
  post-v1-provision:
    Example:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"user": {"first_name": "Frank", "last_name": "Ocean", "email": "frank@example.com", "phone": "2345558899"}, "company": {"name": "Frank's Ocean, LLC", "trade_name": "Frank’s Ocean", "ein": "123456789", "states": ["CO", "CA"], "number_employees": 8, "addresses": [{"street_1": "1201 16th Street Mall", "street_2": "Suite 350", "city": "Denver", "zip": "80202", "state": "CO", "phone": "2345678900", "is_primary": "true"}, {"street_1": "525 20th Street", "city": "San Francisco", "zip": "94107", "state": "CA", "phone": "2345678901"}]}}
      responses:
        "201":
          application/json: {"account_claim_url": "https://app.gusto.com/claim_account/3456789"}
    Basic:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"user": {"first_name": "Julianne", "last_name": "Bailey", "email": "Fred_Durgan@yahoo.com"}, "company": {"name": "<value>"}}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"user": {"first_name": "Julianne", "last_name": "Bailey", "email": "Fred_Durgan@yahoo.com"}, "company": {"name": "<value>"}}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"user": {"first_name": "Julianne", "last_name": "Bailey", "email": "Fred_Durgan@yahoo.com"}, "company": {"name": "<value>"}}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}, "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}, "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-companies:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"ein": "00-0000001", "entity_type": "C-Corporation", "contractor_only": false, "tier": "core", "is_suspended": false, "company_status": "Approved", "uuid": "c7a07c73-a703-4462-9343-1b181182b6e0", "name": "Shoppe Studios LLC", "slug": "record-shoppe", "trade_name": "Record Shoppe", "is_partner_managed": false, "pay_schedule_type": "by_department", "join_date": "2023-03-01", "funding_type": "ach", "locations": [{"street_1": "412 Kiera Stravenue", "street_2": "Suite 391", "city": "San Francisco", "state": "CA", "zip": "94107", "country": "USA"}, {"street_1": "644 Fay Vista", "street_2": "Suite 842", "city": "Richmond", "state": "VA", "zip": "23218", "country": "USA"}], "compensations": {"hourly": [{"name": "Overtime", "multiple": 1.5}, {"name": "Double overtime", "multiple": 2}, {"name": "Regular", "multiple": 1}, {"name": "Outstanding vacation", "multiple": 1}, {"name": "Holiday", "multiple": 1}, {"name": "Emergency sick - self care", "multiple": 1}, {"name": "Emergency sick - caring for others", "multiple": 1}, {"name": "FMLA Public Health Emergency Leave", "multiple": 1}, {"name": "Regular Hours", "multiple": 1}], "fixed": [{"name": "Bonus"}, {"name": "Commission"}, {"name": "Paycheck Tips"}, {"name": "Cash Tips"}, {"name": "Correction Payment"}, {"name": "Severance"}, {"name": "Minimum Wage Adjustment"}, {"name": "Reimbursement"}], "paid_time_off": [{"name": "Vacation Hours"}, {"name": "Sick Hours"}, {"name": "Holiday Hours"}]}, "primary_signatory": {"uuid": "8a2ed9c2-9d1e-443a-8e56-a490d8bf73bb", "first_name": "Alda", "middle_initial": "", "last_name": "Carter", "phone": "1-565-710-7558", "email": "louie.hessel7757869450111547@zemlak.biz", "home_address": {"street_1": "524 Roob Divide", "street_2": "Suite 565", "city": "San Francisco", "state": "CA", "zip": "94107", "country": "USA"}}, "primary_payroll_admin": {"first_name": "Ian", "last_name": "Labadie", "phone": "1-565-710-7559", "email": "louie.hessel7757869450111547@zemlak.biz"}}
  put-v1-companies:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"contractor_only": false}
      responses:
        "200":
          application/json: {"ein": "00-0000001", "entity_type": "C-Corporation", "contractor_only": false, "tier": "core", "is_suspended": false, "company_status": "Approved", "uuid": "c7a07c73-a703-4462-9343-1b181182b6e0", "name": "Shoppe Studios LLC", "slug": "record-shoppe", "trade_name": "Record Shoppe", "is_partner_managed": false, "pay_schedule_type": "by_department", "join_date": "2023-03-01", "funding_type": "ach", "locations": [{"street_1": "412 Kiera Stravenue", "street_2": "Suite 391", "city": "San Francisco", "state": "CA", "zip": "94107", "country": "USA"}, {"street_1": "644 Fay Vista", "street_2": "Suite 842", "city": "Richmond", "state": "VA", "zip": "23218", "country": "USA"}], "compensations": {"hourly": [{"name": "Overtime", "multiple": 1.5}, {"name": "Double overtime", "multiple": 2}, {"name": "Regular", "multiple": 1}, {"name": "Outstanding vacation", "multiple": 1}, {"name": "Holiday", "multiple": 1}, {"name": "Emergency sick - self care", "multiple": 1}, {"name": "Emergency sick - caring for others", "multiple": 1}, {"name": "FMLA Public Health Emergency Leave", "multiple": 1}, {"name": "Regular Hours", "multiple": 1}], "fixed": [{"name": "Bonus"}, {"name": "Commission"}, {"name": "Paycheck Tips"}, {"name": "Cash Tips"}, {"name": "Correction Payment"}, {"name": "Severance"}, {"name": "Minimum Wage Adjustment"}, {"name": "Reimbursement"}], "paid_time_off": [{"name": "Vacation Hours"}, {"name": "Sick Hours"}, {"name": "Holiday Hours"}]}, "primary_signatory": {"uuid": "8a2ed9c2-9d1e-443a-8e56-a490d8bf73bb", "first_name": "Alda", "middle_initial": "", "last_name": "Carter", "phone": "1-565-710-7558", "email": "louie.hessel7757869450111547@zemlak.biz", "home_address": {"street_1": "524 Roob Divide", "street_2": "Suite 565", "city": "San Francisco", "state": "CA", "zip": "94107", "country": "USA"}}, "primary_payroll_admin": {"first_name": "Ian", "last_name": "Labadie", "phone": "1-565-710-7559", "email": "louie.hessel7757869450111547@zemlak.biz"}}
    Basic:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"contractor_only": true}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"contractor_only": true}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"contractor_only": true}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}, "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}, "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-companies-company_id-admins:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "987058cc-23ee-46e9-81ef-5cee086cceca", "email": "Katherine@acmecorp.com", "first_name": "Katherine", "last_name": "Johnson"}, {"uuid": "5de11791-98fd-4587-9ed0-d5d804b8e647", "email": "Anita@acmecorp.com", "first_name": "Anita", "last_name": "Borg"}]
  get-v1-companies-company_id-custom_fields:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"custom_fields": [{"uuid": "ea7e5d57-6abb-47d7-b654-347c142886c0", "name": "employee_level", "type": "text", "description": "Employee Level", "selection_options": null}, {"uuid": "299650e4-e970-4acf-9bf0-6f05585d20ba", "name": "t-shirt size", "type": "text", "description": "What is your t-shirt size?", "selection_options": null}, {"uuid": "024ec137-6c92-43a3-b061-14a9720531d6", "name": "favorite fruit", "type": "radio", "description": "Which is your favorite fruit?", "selection_options": ["apple", "banana", "orange"]}]}
  post-v1-companies-company_id-locations:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"phone_number": "8009360383", "street_1": "425 2nd Street", "street_2": "Suite 602", "city": "San Francisco", "state": "CA", "zip": "94107"}
      responses:
        "201":
          application/json: {"uuid": "04552eb9-7829-4b18-ae96-6983552948df", "version": "7d9753112507b9dda4fb97910f39b06e", "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb", "phone_number": "5825710808", "street_1": "412 Kiera Stravenue", "street_2": "Suite 391", "city": "San Francisco", "state": "CA", "zip": "94107", "country": "USA", "mailing_address": false, "filing_address": false, "created_at": "2023-09-12T16:42:25.000-07:00", "updated_at": "2023-09-12T16:42:25.000-07:00", "active": true}
    Basic:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"phone_number": "841-814-9427 x9355", "street_1": "<value>", "city": "Chynastad", "state": "Wisconsin", "zip": "88336"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"phone_number": "841-814-9427 x9355", "street_1": "<value>", "city": "Chynastad", "state": "Wisconsin", "zip": "88336"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"phone_number": "841-814-9427 x9355", "street_1": "<value>", "city": "Chynastad", "state": "Wisconsin", "zip": "88336"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}, "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}, "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-locations-location_id:
    test_example:
      parameters:
        path:
          location_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "d79baec2-1bfd-41ad-bd7f-fefc9f4cdb29", "version": "ddcd087920c1f969e25153a9e3fe9d13", "company_uuid": "a0f11a60-0ec0-4f1b-9694-8c6fa7ffedce", "phone_number": "4721978147", "street_1": "58092 Mosciski Spring", "street_2": "Suite 680", "city": "Archie", "state": "LA", "zip": "71343", "country": "USA", "mailing_address": true, "filing_address": false, "created_at": "2025-05-16T09:41:49.000-07:00", "updated_at": "2025-05-16T09:41:49.000-07:00", "active": true}
        "404":
          application/json: {"errors": [{"error_key": "request", "category": "not_found", "message": "The requested resource was not found."}]}
  put-v1-locations-location_id:
    request_example_1:
      parameters:
        path:
          location_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "14302448d61342a1a25072fcb59df0b3", "phone_number": "8009360383", "street_1": "300 3rd Street", "street_2": "Apartment 318", "city": "San Francisco", "zip": "94107", "filing_address": true}
      responses:
        "200":
          application/json: {"uuid": "ced517c9-1c22-4468-88f7-bea752987d03", "country": "USA"}
        "404":
          application/json: {"errors": [{"error_key": "<value>", "category": "<value>"}, {"error_key": "<value>", "category": "<value>"}, {"error_key": "<value>", "category": "<value>"}]}
    test_example:
      parameters:
        path:
          location_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "200":
          application/json: {"uuid": "6982ef7e-a318-4a40-b0b6-1d95c52c8263", "version": "226dc9377faecceeb3ec7f6cef066f40", "company_uuid": "07c1ab76-8e02-40a9-9cec-cfe3b8b20b6b", "phone_number": "8009360383", "street_1": "300 3rd Street", "street_2": "Apartment 318", "city": "San Francisco", "state": "MD", "zip": "94107", "country": "USA", "mailing_address": true, "filing_address": true, "created_at": "2025-05-16T09:41:51.000-07:00", "updated_at": "2025-05-16T09:41:51.000-07:00", "active": true}
        "404":
          application/json: {"errors": [{"error_key": "state", "category": "invalid_attribute_value", "message": "State is in the wrong format"}]}
  get-v1-locations-location_uuid-minimum_wages:
    "":
      parameters:
        path:
          location_uuid: "<id>"
        query:
          effective_date: "2020-01-31"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "e403e899-737a-46e0-824d-908117023559", "wage": "<value>", "wage_type": "<value>", "effective_date": "2024-07-01", "authority": "<value>"}]
        "404":
          application/json: {"errors": []}
    test_example:
      parameters:
        path:
          location_uuid: "<id>"
        query:
          effective_date: "2020-01-31"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "ae7ee6b1-1c17-4d4f-a9c5-c5d588d8882d", "wage": "15.0", "wage_type": "Regular", "effective_date": "2017-01-01", "authority": "City", "notes": "large companies"}, {"uuid": "4f9e53f1-89ba-43e1-a5af-d5ada47c814f", "wage": "10.5", "wage_type": "Regular", "effective_date": "2017-01-01", "authority": "City", "notes": "large companies"}, {"uuid": "4633fce7-f1df-4938-bd67-642ee10174c7", "wage": "10.5", "wage_type": "Regular", "effective_date": "2017-01-01", "authority": "State", "notes": "large companies"}, {"uuid": "4db78a28-1561-4fe7-8daf-627abd7e437d", "wage": "10.5", "wage_type": "Regular", "effective_date": "2017-01-01", "authority": "Federal", "notes": "large companies"}]
        "404":
          application/json: {"errors": [{"error_key": "request", "category": "not_found", "message": "The requested resource was not found."}]}
  get-v1-companies-company_id-locations:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "04552eb9-7829-4b18-ae96-6983552948df", "version": "7d9753112507b9dda4fb97910f39b06e", "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb", "phone_number": "5825710808", "street_1": "412 Kiera Stravenue", "street_2": "Suite 391", "city": "San Francisco", "state": "CA", "zip": "94107", "country": "USA", "mailing_address": false, "filing_address": false, "created_at": "2023-09-12T16:42:25.000-07:00", "updated_at": "2023-09-12T16:42:25.000-07:00", "active": true}, {"uuid": "fa94a2fd-11a8-4024-87ff-85c587d9d2b4", "version": "15e6b9680e00f3122729e64e3cef3224", "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb", "phone_number": "2866070827", "street_1": "644 Fay Vista", "street_2": "Suite 842", "city": "Richmond", "state": "VA", "zip": "23218", "country": "USA", "mailing_address": false, "filing_address": false, "created_at": "2023-09-12T16:42:25.000-07:00", "updated_at": "2023-09-12T16:42:25.000-07:00", "active": true}]
  get-v1-companies-company_id-pay_schedules:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "2097fe08-407a-46d7-b35c-a32402a2355e", "frequency": "Twice per month", "anchor_pay_date": "2020-05-15", "anchor_end_of_pay_period": "2020-05-08", "day_1": 15, "day_2": 31, "name": "Engineering", "custom_name": "Engineering department pay schedule", "auto_pilot": false, "active": true, "version": "68934a3e9455fa72420237eb05902327"}, {"uuid": "8fc9f556-74fa-4271-97f6-4bfbfc5a5352", "frequency": "Monthly", "anchor_pay_date": "2020-05-31", "day_1": 31, "day_2": null, "name": "Sales", "custom_name": "Sales department monthly schedule", "auto_pilot": false, "active": false, "version": "68934a3e9455fa72420237eb05902320"}, {"uuid": "0e07d35a-af11-4123-bfcb-4dd5f2f12ee1", "frequency": "Monthly", "anchor_pay_date": "2020-05-31", "day_1": 31, "day_2": null, "name": "Staff", "custom_name": "Staff department pay schedule", "auto_pilot": true, "active": false, "version": "68934a3e9455fa72420237eb05902323"}]
  get-v1-companies-company_id-pay_schedules-pay_schedule_id:
    Example:
      parameters:
        path:
          company_id: "<id>"
          pay_schedule_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "f2a69c38-e2f9-4e31-b5c5-4754fc60a052", "frequency": "Twice per month", "anchor_pay_date": "2020-05-15", "anchor_end_of_pay_period": "2020-05-08", "day_1": 15, "day_2": 31, "name": "Engineering", "custom_name": "A new monthly pay schedule", "auto_pilot": false, "active": true, "version": "68934a3e9455fa72420237eb05902327"}
  get-v1-companies-company_id-pay_periods:
    Example:
      parameters:
        path:
          company_id: "<id>"
        query:
          start_date: "2020-01-01"
          end_date: "2020-01-31"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"start_date": "2020-01-11", "end_date": "2020-01-24", "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501", "payroll": {"payroll_uuid": "bfd8aad4-9c3f-4ca3-b072-a1b2b3ea689f", "check_date": "2020-01-30", "processed": true, "payroll_deadline": "2020-01-28", "payroll_type": "regular"}}, {"start_date": "2020-12-12", "end_date": "2020-12-25", "pay_schedule_uuid": "cb53db72-612f-4eb1-9b85-389e79cfa510", "payroll": {"payroll_uuid": "7ed29b45-4bb1-4d38-bd94-4d607d49fd21", "check_date": "2020-12-30", "processed": true, "payroll_deadline": "2020-12-28", "payroll_type": "regular"}}]
  get-v1-companies-company_id-unprocessed_termination_pay_periods:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"start_date": "2023-01-11", "end_date": "2023-01-24", "check_date": "2023-01-28", "debit_date": "2023-01-26", "employee_name": "Mary Warner", "employee_uuid": "094f6ded-a790-4651-87e6-4a7f15dec7c6", "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501"}, {"start_date": "2023-01-25", "end_date": "2023-02-07", "check_date": "2023-02-10", "debit_date": "2023-02-08", "employee_name": "Mary Warner", "employee_uuid": "094f6ded-a790-4651-87e6-4a7f15dec7c6", "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501"}]
  get-v1-companies-company_id-pay_schedules-assignments:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"type": "by_employee", "employees": [{"employee_uuid": "f0238368-f2cf-43e2-9a07-b0265f2cec69", "pay_schedule_uuid": "c277ac52-9871-4a96-a1e6-0c449684602a"}]}
  get-v1-companies-company_id-employees:
    test_example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "de2e7947-7ecc-44a5-bec0-1a5510c59c6e", "first_name": "Boaty", "middle_initial": null, "last_name": "Stracke", "email": "kenisha_kozey@marks.info", "company_uuid": "0bf81e9e-d92b-49f2-ac0a-2c4a5b870a58", "manager_uuid": null, "version": "88eee0db8ad79bda9eb546418ca98e90", "department": null, "terminated": false, "two_percent_shareholder": false, "onboarded": true, "onboarding_status": "onboarding_completed", "onboarding_documents_config": {"uuid": null, "i9_document": false}, "jobs": [{"uuid": "b5bee54d-2fe8-4552-bb99-fd1584e39622", "version": "e9e474cc8e549f1799c0a88fe1e08948", "employee_uuid": "de2e7947-7ecc-44a5-bec0-1a5510c59c6e", "hire_date": "2024-05-16", "title": "", "primary": true, "rate": "80000.00", "payment_unit": "Year", "current_compensation_uuid": "5bf6f514-cb90-4a18-a9ab-a2175d97eea5", "two_percent_shareholder": false, "state_wc_covered": null, "state_wc_class_code": null, "compensations": [{"uuid": "5bf6f514-cb90-4a18-a9ab-a2175d97eea5", "version": "901df6d3e289216ac2e9aac8ea8f0973", "job_uuid": "b5bee54d-2fe8-4552-bb99-fd1584e39622", "employee_uuid": "de2e7947-7ecc-44a5-bec0-1a5510c59c6e", "rate": "80000.00", "payment_unit": "Year", "flsa_status": "Exempt", "effective_date": "2025-05-16", "adjust_for_minimum_wage": false, "minimum_wages": []}]}], "eligible_paid_time_off": [], "terminations": [], "garnishments": [], "date_of_birth": "2005-05-16", "has_ssn": true, "ssn": "", "phone": null, "preferred_first_name": null, "payment_method": "Direct Deposit", "work_email": null, "current_employment_status": "full_time", "historical": false, "employee_code": "76ee96", "department_uuid": null}, {"uuid": "33b06016-1ed9-4c64-8fc4-5863e1a8c18f", "first_name": "Kari", "middle_initial": null, "last_name": "Ward", "email": "thelma_rath@schuster.co.uk", "company_uuid": "0bf81e9e-d92b-49f2-ac0a-2c4a5b870a58", "manager_uuid": null, "version": "62a52bbf56d4619ac2f45755bb832e5d", "department": null, "terminated": false, "two_percent_shareholder": false, "onboarded": true, "onboarding_status": "onboarding_completed", "onboarding_documents_config": {"uuid": null, "i9_document": false}, "jobs": [{"uuid": "5465f758-21aa-4748-8c39-437d21a02295", "version": "e9e474cc8e549f1799c0a88fe1e08948", "employee_uuid": "33b06016-1ed9-4c64-8fc4-5863e1a8c18f", "hire_date": "2024-05-16", "title": "", "primary": true, "rate": "80000.00", "payment_unit": "Year", "current_compensation_uuid": "e1f91158-9f89-4824-8103-9303faa2316e", "two_percent_shareholder": false, "state_wc_covered": null, "state_wc_class_code": null, "compensations": [{"uuid": "e1f91158-9f89-4824-8103-9303faa2316e", "version": "901df6d3e289216ac2e9aac8ea8f0973", "job_uuid": "5465f758-21aa-4748-8c39-437d21a02295", "employee_uuid": "33b06016-1ed9-4c64-8fc4-5863e1a8c18f", "rate": "80000.00", "payment_unit": "Year", "flsa_status": "Exempt", "effective_date": "2025-05-16", "adjust_for_minimum_wage": false, "minimum_wages": []}]}], "eligible_paid_time_off": [], "terminations": [], "garnishments": [], "date_of_birth": "2005-05-16", "has_ssn": true, "ssn": "", "phone": null, "preferred_first_name": null, "payment_method": "Direct Deposit", "work_email": null, "current_employment_status": "full_time", "historical": false, "employee_code": "19f85c", "department_uuid": null}]
        "404":
          application/json: {"errors": [{"error_key": "request", "category": "not_found", "message": "The requested resource was not found."}]}
  post-v1-employees:
    request_example_1:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"first_name": "Karl", "last_name": "The Fog"}
      responses:
        "201":
          application/json: {"uuid": "9f634ba6-53c8-4290-8751-3ec38c369860", "first_name": "Lela", "last_name": "Graham", "eligible_paid_time_off": [{"accrual_unit": "Hour", "accrual_method": "unlimited", "accrual_period": "Year"}, {"accrual_unit": "Hour", "accrual_method": "unlimited", "accrual_period": "Year"}], "payment_method": "Check"}
        "404":
          application/json: {"errors": []}
    test_example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "201":
          application/json: {"uuid": "461ec6e0-9e5b-4582-a13f-5498479bdc0f", "first_name": "Karl", "middle_initial": null, "last_name": "The Fog", "email": null, "company_uuid": "1b5bc024-aac4-4bcc-8aa7-36a935750c32", "manager_uuid": null, "version": "5211ee9bb08e51634431a18eff0afc64", "department": null, "terminated": false, "two_percent_shareholder": null, "onboarded": false, "onboarding_status": "admin_onboarding_incomplete", "onboarding_documents_config": {"uuid": null, "i9_document": false}, "jobs": [], "eligible_paid_time_off": [], "terminations": [], "garnishments": [], "date_of_birth": null, "has_ssn": false, "ssn": "", "phone": null, "preferred_first_name": null, "payment_method": "Check", "work_email": null, "current_employment_status": null, "historical": false, "employee_code": "b93a2f", "department_uuid": null}
        "404":
          application/json: {"errors": [{"error_key": "request", "category": "not_found", "message": "The requested resource was not found."}]}
  get-v1-employees:
    test_example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "d59f0776-107e-4c43-a148-564a14c8cdbf", "first_name": "Kurtis", "middle_initial": null, "last_name": "McKenzie", "email": "jonie@oconner.com", "company_uuid": "cc82c11f-d4ba-4f55-aace-2fb7b1fefa1f", "version": "2929199b9321e6eb9e84c673667971bd", "department": "Renaissance 1", "onboarding_status": "onboarding_completed", "onboarding_documents_config": {"uuid": null, "i9_document": false}, "jobs": [{"uuid": "ea980264-f301-4ac2-bbed-169be7b96457", "employee_uuid": "d59f0776-107e-4c43-a148-564a14c8cdbf", "hire_date": "2024-05-16", "title": "Engineer", "primary": true, "two_percent_shareholder": false, "location_uuid": "3ee20a56-8931-47f4-94c7-e637dda8cf74", "location": {"uuid": "3ee20a56-8931-47f4-94c7-e637dda8cf74", "street_1": "3121 Milky Way", "street_2": "", "city": "San Francisco", "state": "CA", "zip": "94107", "country": "USA", "inactive": false}}], "date_of_birth": "2005-05-16", "has_ssn": true, "preferred_first_name": null, "payment_method": "Check", "employee_code": "ca217a", "department_uuid": "a52c025f-acb3-43ac-b342-31cfdcac636f", "title": "Engineer", "hired_at": "2024-05-16", "hidden_ssn": "", "flsa_status": "Exempt", "applicable_tax_ids": [3, 7, 6, 2, 1, 4, 5, 109, 107, 108, 106]}
  put-v1-employees:
    request_example_1:
      parameters:
        path:
          employee_id: "<id>"
      requestBody:
        application/json: {"version": "9294130ed6ff0c1735ef7b4148c1f320", "first_name": "Weezy", "middle_initial": "F", "last_name": "Baby", "email": "tunechi@cashmoneyrecords.com", "date_of_birth": "1991-01-31", "ssn": "824920233"}
      responses:
        "200":
          application/json: {"uuid": "2953c680-3178-4466-8441-8947dce42145", "first_name": "Pearl", "last_name": "Volkman", "eligible_paid_time_off": [{"accrual_unit": "Hour", "accrual_method": "unlimited", "accrual_period": "Year"}], "payment_method": "Check"}
        "404":
          application/json: {"errors": []}
    test_example:
      parameters:
        path:
          employee_id: "<id>"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "200":
          application/json: {"uuid": "5612ac40-0609-4138-a77a-d320a8bdb619", "first_name": "Weezy", "middle_initial": "F", "last_name": "Baby", "email": "tunechi@cashmoneyrecords.com", "company_uuid": "7ef5be90-60c9-4a3c-817c-2d96bbf2dc42", "version": "4eff5441d8f8ecc08f53a88ded36f13e", "department": null, "onboarding_status": "onboarding_completed", "onboarding_documents_config": {"uuid": null, "i9_document": false}, "jobs": [{"uuid": "62a9d759-aba8-4107-b170-f29ecf10a9b5", "employee_uuid": "5612ac40-0609-4138-a77a-d320a8bdb619", "hire_date": "2024-05-16", "title": "", "primary": true, "two_percent_shareholder": false, "location_uuid": "368609b9-cab0-440c-ae3d-690b3d7fbaba", "location": {"uuid": "368609b9-cab0-440c-ae3d-690b3d7fbaba", "street_1": "3121 Milky Way", "street_2": "", "city": "San Francisco", "state": "CA", "zip": "94107", "country": "USA", "inactive": false}}], "date_of_birth": "1991-01-31", "has_ssn": true, "preferred_first_name": null, "payment_method": "Check", "employee_code": "f62dc1", "department_uuid": null, "title": "", "hired_at": "2024-05-16", "hidden_ssn": "", "flsa_status": "Exempt", "applicable_tax_ids": [3, 7, 6, 2, 1, 4, 5, 109, 107, 108, 106]}
        "404":
          application/json: {"errors": [{"error_key": "base", "category": "invalid_resource_version", "message": "You are attempting to update a resource using an out-of-date version."}]}
  delete-v1-employee:
    speakeasy-default-delete-v1-employee:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
  get-v1-employees-employee_id-custom_fields:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"custom_fields": [{"id": "ee515986-f3ca-49da-b576-2691b95262f9", "company_custom_field_id": "ea7e5d57-6abb-47d7-b654-347c142886c0", "name": "employee_level", "type": "text", "description": "Employee Level", "value": "2", "selection_options": null}, {"id": "3796e08d-c2e3-434c-b4de-4ce1893e7b59", "company_custom_field_id": "299650e4-e970-4acf-9bf0-6f05585d20ba", "name": "t-shirt size", "type": "text", "description": "What is your t-shirt size?", "value": "md", "selection_options": null}, {"id": "3796e08d-c2e3-434c-b4de-4ce1893e7b59", "company_custom_field_id": "024ec137-6c92-43a3-b061-14a9720531d6", "name": "favorite fruit", "type": "radio", "description": "Which is your favorite fruit?", "value": "apple", "selection_options": ["apple", "banana", "orange"]}]}
  get-version-employees-time_off_activities:
    example:
      parameters:
        path:
          employee_uuid: "<id>"
        query:
          time_off_type: "<value>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {}
  get-v1-employees-employee_id-terminations:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "da441196-43a9-4d23-ad5d-f37ce6bb99c0", "version": "d487dd0b55dfcacdd920ccbdaeafa351", "employee_uuid": "da441196-43a9-4d23-ad5d-f37ce6bb99c0", "active": true, "cancelable": true, "effective_date": "2020-03-10", "run_termination_payroll": false}]
  post-departments:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"title": "Stage Hand"}
      responses:
        "201":
          application/json: {"version": "d90440dd464601d1c8f4e9e240dfb7a6", "uuid": "56260b3d-c375-415c-b77a-75d99f717193", "company_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e", "title": "Stage Hand", "employees": [{"uuid": "41199375-a999-4414-9f40-d9bf596b134d"}], "contractors": [{"uuid": "3488549f-60e4-494f-a34a-9d8aad3aabf5"}]}
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}, "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}, "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-companies-departments:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"version": "d90440dd464601d1c8f4e9e240dfb7a6", "uuid": "56260b3d-c375-415c-b77a-75d99f717193", "company_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e", "title": "Stage Hand", "employees": [{"uuid": "41199375-a999-4414-9f40-d9bf596b134d"}], "contractors": []}, {"version": "34f39a30b45d077cb83aed2df4810d74", "uuid": "ec5c8a85-3233-4f39-a9f5-fb1ab7b5f5f3", "company_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e", "title": "Actors", "employees": [{"uuid": "7ee4aca1-814b-4034-b0f8-07f93cc679d1"}], "contractors": []}, {"version": "1fe3076d35ef7c97d0ae68c5f4df0acd", "uuid": "1802465d-4f68-4865-920c-1307ab095f12", "company_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e", "title": "Band", "employees": [{"uuid": "a73955be-c009-44dc-915e-6246e2bdedbb"}], "contractors": [{"uuid": "3488549f-60e4-494f-a34a-9d8aad3aabf5"}]}]
  get-department:
    Example:
      parameters:
        path:
          department_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"version": "d90440dd464601d1c8f4e9e240dfb7a6", "uuid": "56260b3d-c375-415c-b77a-75d99f717193", "company_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e", "title": "Stage Hand", "employees": [{"uuid": "41199375-a999-4414-9f40-d9bf596b134d"}], "contractors": [{"uuid": "3488549f-60e4-494f-a34a-9d8aad3aabf5"}]}
  put-departments:
    Example:
      parameters:
        path:
          department_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "db0edd04aaac4506f7edab03ac855d56", "title": "Backup Dancer"}
      responses:
        "200":
          application/json: {"version": "d90440dd464601d1c8f4e9e240dfb7a6", "uuid": "56260b3d-c375-415c-b77a-75d99f717193", "company_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e", "title": "Stage Hand", "employees": [{"uuid": "41199375-a999-4414-9f40-d9bf596b134d"}], "contractors": [{"uuid": "3488549f-60e4-494f-a34a-9d8aad3aabf5"}]}
    Basic:
      parameters:
        path:
          department_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          department_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          department_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}, "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}, "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  delete-department:
    Basic:
      parameters:
        path:
          department_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          department_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          department_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}, "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}, "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  put-add-people-to-department:
    Example:
      parameters:
        path:
          department_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "200":
          application/json: {"version": "d90440dd464601d1c8f4e9e240dfb7a6", "uuid": "56260b3d-c375-415c-b77a-75d99f717193", "company_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e", "title": "Stage Hand", "employees": [{"uuid": "41199375-a999-4414-9f40-d9bf596b134d"}], "contractors": [{"uuid": "3488549f-60e4-494f-a34a-9d8aad3aabf5"}]}
  put-remove-people-from-department:
    Example:
      parameters:
        path:
          department_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "200":
          application/json: {"version": "d90440dd464601d1c8f4e9e240dfb7a6", "uuid": "56260b3d-c375-415c-b77a-75d99f717193", "company_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e", "title": "Stage Hand", "employees": [{"uuid": "41199375-a999-4414-9f40-d9bf596b134d"}], "contractors": [{"uuid": "3488549f-60e4-494f-a34a-9d8aad3aabf5"}]}
  post-v1-employees-employee_id-terminations:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"effective_date": "2020-06-30", "run_termination_payroll": true}
      responses:
        "201":
          application/json: {"uuid": "da441196-43a9-4d23-ad5d-f37ce6bb99c0", "version": "d487dd0b55dfcacdd920ccbdaeafa351", "employee_uuid": "da441196-43a9-4d23-ad5d-f37ce6bb99c0", "active": true, "cancelable": true, "effective_date": "2020-03-10", "run_termination_payroll": false}
    Basic:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"effective_date": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"effective_date": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"effective_date": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}, "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}, "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  delete-v1-employees-employee_id-terminations:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "404":
          application/json: {"errors": [{"error_key": "employment", "category": "incorrect_state", "message": "The employee's employment is not in the right state."}]}
  put-v1-terminations-employee_id:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "1928d0c378e519e9c03fb959bc959a6b", "effective_date": "2020-06-30", "run_termination_payroll": true}
      responses:
        "200":
          application/json: {"uuid": "da441196-43a9-4d23-ad5d-f37ce6bb99c0", "version": "d487dd0b55dfcacdd920ccbdaeafa351", "employee_uuid": "da441196-43a9-4d23-ad5d-f37ce6bb99c0", "active": true, "cancelable": true, "effective_date": "2020-03-10", "run_termination_payroll": false}
    Basic:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "effective_date": "<value>"}
      responses:
        "404":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "effective_date": "<value>"}
      responses:
        "404":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "effective_date": "<value>"}
      responses:
        "404":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}, "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}, "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  post-v1-employees-employee_id-rehire:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"effective_date": "2023-06-30", "file_new_hire_report": true, "work_location_uuid": "b6ae9d93-d4b8-4119-8c96-dba595dd8c30"}
      responses:
        "201":
          application/json: {"version": "2e930d43acbdb241f8f14a2d531fa417", "effective_date": "2024-01-01", "file_new_hire_report": false, "work_location_uuid": "d2c80d44-857b-4d4d-bce4-23ae52cc863b,", "employment_status": "full_time", "two_percent_shareholder": false, "employee_uuid": "da441196-43a9-4d23-ad5d-f37ce6bb99c0", "active": false}
    Basic:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"effective_date": "<value>", "file_new_hire_report": false, "work_location_uuid": "<id>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"effective_date": "<value>", "file_new_hire_report": false, "work_location_uuid": "<id>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"effective_date": "<value>", "file_new_hire_report": false, "work_location_uuid": "<id>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}, "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}, "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  put-v1-employees-employee_id-rehire:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "1928d0c378e519e9c03fb959bc959a6b", "effective_date": "2023-06-30", "file_new_hire_report": true, "work_location_uuid": "b6ae9d93-d4b8-4119-8c96-dba595dd8c30"}
      responses:
        "200":
          application/json: {"version": "2e930d43acbdb241f8f14a2d531fa417", "effective_date": "2024-01-01", "file_new_hire_report": false, "work_location_uuid": "d2c80d44-857b-4d4d-bce4-23ae52cc863b,", "employment_status": "full_time", "two_percent_shareholder": false, "employee_uuid": "da441196-43a9-4d23-ad5d-f37ce6bb99c0", "active": false}
    Basic:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "effective_date": "<value>", "file_new_hire_report": true, "work_location_uuid": "<id>"}
      responses:
        "404":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "effective_date": "<value>", "file_new_hire_report": true, "work_location_uuid": "<id>"}
      responses:
        "404":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "effective_date": "<value>", "file_new_hire_report": true, "work_location_uuid": "<id>"}
      responses:
        "404":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}, "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}, "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-employees-employee_id-rehire:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"version": "2e930d43acbdb241f8f14a2d531fa417", "effective_date": "2024-01-01", "file_new_hire_report": false, "work_location_uuid": "d2c80d44-857b-4d4d-bce4-23ae52cc863b,", "employment_status": "full_time", "two_percent_shareholder": false, "employee_uuid": "da441196-43a9-4d23-ad5d-f37ce6bb99c0", "active": false}
        "404":
          application/json: {"errors": [{"error_key": "employment", "category": "incorrect_state", "message": "The employee's employment is not in the right state."}]}
  delete-v1-employees-employee_id-rehire:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "404":
          application/json: {"errors": [{"error_key": "employment", "category": "incorrect_state", "message": "The employee's employment is not in the right state."}]}
  get-v1-employees-employee_id-employment_history:
    test_example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"hire_date": "2015-05-16", "termination_date": "2025-04-16", "file_new_hire_report": false, "two_percent_shareholder": false, "employment_status": "full_time"}]
        "404":
          application/json: {"errors": [{"error_key": "request", "category": "not_found", "message": "The requested resource was not found."}]}
  get-v1-employees-employee_id-home_addresses:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"street_1": "644 Fay Vista", "street_2": "Suite 842", "city": "Richmond", "state": "VA", "zip": "23218", "country": "USA", "active": false, "uuid": "56260b3d-c375-415c-b77a-75d99f717193", "employee_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e", "effective_date": "2021-01-01", "courtesy_withholding": true}, {"street_1": "100 5th Ave", "street_2": "Suite 555", "city": "New York", "state": "NY", "zip": "10001", "country": "USA", "active": true, "uuid": "d9f74049-8769-4fba-8e0f-eceef2da4e6b", "employee_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e", "effective_date": "2022-03-03", "courtesy_withholding": true}]
  post-v1-employees-employee_id-home_addresses:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"street_1": "300 3rd Street", "street_2": null, "city": "San Francisco", "state": "CA", "zip": "94107", "effective_date": "2021-01-01", "courtesy_withholding": true}
      responses:
        "201":
          application/json: {"street_1": "644 Fay Vista", "street_2": "Suite 842", "city": "Richmond", "state": "VA", "zip": "23218", "country": "USA", "active": false, "uuid": "56260b3d-c375-415c-b77a-75d99f717193", "effective_date": "2021-01-01", "courtesy_withholding": true}
    Basic:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}, "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}, "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-home_addresses-home_address_uuid:
    Example:
      parameters:
        path:
          home_address_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"street_1": "644 Fay Vista", "street_2": "Suite 842", "city": "Richmond", "state": "VA", "zip": "23218", "country": "USA", "active": false, "uuid": "56260b3d-c375-415c-b77a-75d99f717193", "effective_date": "2021-01-01", "courtesy_withholding": true}
  put-v1-home_addresses-home_address_uuid:
    Example:
      parameters:
        path:
          home_address_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "fe75bd065ff48b91c35fe8ff842f986c", "street_1": "300 3rd Street", "street_2": null, "city": "San Francisco", "state": "CA", "zip": "94107", "effective_date": "2021-01-01", "courtesy_withholding": true}
      responses:
        "200":
          application/json: {"street_1": "644 Fay Vista", "street_2": "Suite 842", "city": "Richmond", "state": "VA", "zip": "23218", "country": "USA", "active": false, "uuid": "56260b3d-c375-415c-b77a-75d99f717193", "effective_date": "2021-01-01", "courtesy_withholding": true}
    Basic:
      parameters:
        path:
          home_address_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          home_address_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          home_address_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}, "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}, "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  delete-v1-home_addresses-home_address_uuid:
    Basic:
      parameters:
        path:
          home_address_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          home_address_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          home_address_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}, "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}, "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-employees-employee_id-work_addresses:
    test_example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "de083b69-1265-49d1-9148-0e45ad81584a", "effective_date": "2021-01-01", "active": false, "location_uuid": "ee498dcd-ad3f-421a-acaf-fccfba7a54b7", "employee_uuid": "db9bdb62-7a02-4dbf-9599-c68375f46117", "version": "2bf1afa0988905127810578fa8f7096f", "street_1": "91678 Farrell Meadow", "street_2": "Apt. 835", "city": "Phoenix", "state": "AZ", "zip": "85016", "country": "USA"}, {"uuid": "855b87c6-b049-4334-be6e-a5e8d53016fb", "effective_date": "2022-01-01", "active": false, "location_uuid": "69c0fcad-9d5a-4f21-ac59-d3a06c1566ed", "employee_uuid": "db9bdb62-7a02-4dbf-9599-c68375f46117", "version": "e4450ac4a8b4f362f315edc55c9ea784", "street_1": "800 Adolfo Gardens", "street_2": "Suite 419", "city": "Bremen", "state": "AL", "zip": "35033", "country": "USA"}, {"uuid": "ff95bce2-11e6-47a7-9635-fa0e3a768b31", "effective_date": "2023-01-01", "active": true, "location_uuid": "6294b652-92ca-474f-9e3e-7961205f728c", "employee_uuid": "db9bdb62-7a02-4dbf-9599-c68375f46117", "version": "dbb907f6fca92b01c14f3b367d4f0b25", "street_1": "2216 Icie Villages", "street_2": "Apt. 798", "city": "Big Delta", "state": "AK", "zip": "99737", "country": "USA"}]
        "404":
          application/json: {"errors": [{"error_key": "request", "category": "not_found", "message": "The requested resource was not found."}]}
  post-v1-employees-employee_id-work_addresses:
    request_example_1:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"location_uuid": "f3ce2f31-cba6-4f18-b66b-291de5d52ca2", "effective_date": "2020-01-31"}
      responses:
        "201":
          application/json: {"uuid": "e02ec014-1e6b-41a8-ba57-7e102baa2d06", "version": "<value>", "country": "USA"}
        "404":
          application/json: {"errors": [{"error_key": "<value>", "category": "<value>"}, {"error_key": "<value>", "category": "<value>"}, {"error_key": "<value>", "category": "<value>"}]}
    test_example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"location_uuid": "6a119be7-b4b0-4e27-aaa0-89d5f2524635", "effective_date": "2023-05-15"}
      responses:
        "201":
          application/json: {"uuid": "ec995b22-ef41-47eb-b601-fa7ec7b60a62", "effective_date": "2020-01-31", "active": true, "location_uuid": "f3ce2f31-cba6-4f18-b66b-291de5d52ca2", "employee_uuid": "ebdaa937-3574-472d-b383-a5c3c977496e", "version": "5a5318a71ec6f40cffa014e3ff504b8b", "street_1": "977 Marks Viaduct", "street_2": "Apt. 958", "city": "Pink Hill", "state": "NC", "zip": "28572", "country": "USA"}
        "404":
          application/json: {"errors": [{"error_key": "request", "category": "not_found", "message": "The requested resource was not found."}]}
  get-v1-work_addresses-work_address_uuid:
    test_example:
      parameters:
        path:
          work_address_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "a0de01ec-a4ce-46bc-8f4a-56b04d885c87", "effective_date": "2023-01-01", "active": true, "location_uuid": "e08560ad-bfbd-4d07-b6e9-43867e7adffa", "employee_uuid": "b5d23454-3e50-4902-8c3f-90c7a07dfb26", "version": "774485f09e6e1d6021426262af246fa1", "street_1": "229 Virgil Mission", "street_2": "Apt. 360", "city": "Yatesville", "state": "GA", "zip": "31097", "country": "USA"}
        "404":
          application/json: {"errors": [{"error_key": "request", "category": "not_found", "message": "The requested resource was not found."}]}
  put-v1-work_addresses-work_address_uuid:
    request_example_1:
      parameters:
        path:
          work_address_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "cd2e396aff8925367ff773e771e40488", "location_uuid": "333eb008-db81-4003-9e91-1ad257226518"}
      responses:
        "200":
          application/json: {"uuid": "27c58f85-7f90-4597-bc74-193b0a8d024d", "version": "<value>", "country": "USA"}
        "404":
          application/json: {"errors": [{"error_key": "<value>", "category": "<value>"}, {"error_key": "<value>", "category": "<value>"}, {"error_key": "<value>", "category": "<value>"}]}
    test_example:
      parameters:
        path:
          work_address_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "location_uuid": "6a119be7-b4b0-4e27-aaa0-89d5f2524635", "effective_date": "2023-05-15"}
      responses:
        "200":
          application/json: {"uuid": "7e40de75-4345-41dc-a187-d8960e853298", "effective_date": "2022-01-01", "active": false, "location_uuid": "333eb008-db81-4003-9e91-1ad257226518", "employee_uuid": "020cb03f-2301-40f5-9d21-bf4a9ca21dd7", "version": "68f2fd4efda1e5ef8072071e49af35e7", "street_1": "5467 Ward Radial", "street_2": "Suite 251", "city": "Holualoa", "state": "HI", "zip": "96725", "country": "USA"}
        "404":
          application/json: {"errors": [{"error_key": "request", "category": "not_found", "message": "The requested resource was not found."}]}
  delete-v1-work_addresses-work_address_uuid:
    test_example:
      parameters:
        path:
          work_address_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "404":
          application/json: {"errors": [{"error_key": "request", "category": "not_found", "message": "The requested resource was not found."}]}
  post-v1-jobs-job_id:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"title": "Regional Manager", "hire_date": "2020-12-21"}
      responses:
        "201":
          application/json: {"uuid": "d6d1035e-8a21-4e1d-89d5-fa894f9aff97", "version": "d0e719137f89ca3dd334dd4cc248ffbb", "employee_uuid": "948daac8-4355-4ece-9e2a-229898accb22", "hire_date": "2020-01-20", "title": "Account Director", "primary": true, "rate": "78000.00", "payment_unit": "Year", "current_compensation_uuid": "ea8b0b90-1112-4f9d-bb93-bf029bc8537a", "state_wc_covered": true, "state_wc_class_code": "null,", "compensations": [{"uuid": "ea8b0b90-1112-4f9d-bb93-bf029bc8537a", "version": "994b75511d1debac5d7e2ddeae13679f", "job_uuid": "d6d1035e-8a21-4e1d-89d5-fa894f9aff97", "rate": "78000.00", "payment_unit": "Year", "flsa_status": "Exempt", "effective_date": "2021-01-20", "adjust_for_minimum_wage": false, "minimum_wages": []}]}
    Basic:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"title": "<value>", "hire_date": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"title": "<value>", "hire_date": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"title": "<value>", "hire_date": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}, "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}, "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  post-v1-compensations-compensation_id:
    Exempt:
      parameters:
        path:
          job_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"rate": "60000.00", "payment_unit": "Year", "flsa_status": "Exempt"}
      responses:
        "201":
          application/json: {"uuid": "db57832c-d8bc-43a7-ae99-0a04480ff037", "version": "98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872", "job_uuid": "d8f8fbe7-496d-4b69-86f0-1e2d1b73a086", "rate": "60000.00", "payment_unit": "Year", "flsa_status": "Exempt", "effective_date": "2020-12-11", "adjust_for_minimum_wage": false, "minimum_wages": []}
    Minimum Wage Adjusted:
      parameters:
        path:
          job_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"rate": "7.00", "payment_unit": "Hour", "effective_date": "2023-01-01", "flsa_status": "Nonexempt", "adjust_for_minimum_wage": true, "minimum_wages": [{"uuid": "340832db-ab28-4112-9e10-28dd1711835f"}]}
      responses:
        "201":
          application/json: {"uuid": "a4d9ba9c-32cc-4cc1-a5bc-6ef4cd653e7a", "version": "cc59bd3879d655fb940a1f6b675f2ad9", "job_uuid": "d8f8fbe7-496d-4b69-86f0-1e2d1b73a086", "rate": "5.00", "payment_unit": "Hour", "flsa_status": "Nonexempt", "effective_date": "2018-12-11", "adjust_for_minimum_wage": true, "minimum_wages": [{"uuid": "edeea5af-ecd6-4b1c-b5de-5cff2d302738", "wage": "7.25", "effective_date": "2018-12-11"}]}
    Basic:
      parameters:
        path:
          job_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"payment_unit": "Week", "flsa_status": "Salaried Nonexempt"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          job_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"payment_unit": "Week", "flsa_status": "Salaried Nonexempt"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          job_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"payment_unit": "Week", "flsa_status": "Salaried Nonexempt"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}, "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}, "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-employees-employee_id-jobs:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "d6d1035e-8a21-4e1d-89d5-fa894f9aff97", "version": "6c0ed1521e8b86eb36bd4455a63a2dac", "employee_uuid": "948daac8-4355-4ece-9e2a-229898accb22", "hire_date": "2020-01-20", "title": "Client Support Director", "primary": true, "rate": "70000.00", "payment_unit": "Year", "current_compensation_uuid": "ea8b0b90-1112-4f9d-bb93-bf029bc8537a", "state_wc_covered": false, "state_wc_class_code": "null,", "compensations": [{"uuid": "ea8b0b90-1112-4f9d-bb93-bf029bc8537a", "version": "2cd4b18662395eb53bcf80d5b5447f36", "job_uuid": "d6d1035e-8a21-4e1d-89d5-fa894f9aff97", "rate": "70000.00", "payment_unit": "Year", "flsa_status": "Exempt", "effective_date": "2021-01-20", "adjust_for_minimum_wage": false, "minimum_wages": []}]}]
  get-v1-jobs-job_id:
    Example:
      parameters:
        path:
          job_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "d6d1035e-8a21-4e1d-89d5-fa894f9aff97", "version": "d0e719137f89ca3dd334dd4cc248ffbb", "employee_uuid": "948daac8-4355-4ece-9e2a-229898accb22", "hire_date": "2020-01-20", "title": "Account Director", "primary": true, "rate": "78000.00", "payment_unit": "Year", "current_compensation_uuid": "ea8b0b90-1112-4f9d-bb93-bf029bc8537a", "state_wc_covered": false, "state_wc_class_code": "null,", "compensations": [{"uuid": "ea8b0b90-1112-4f9d-bb93-bf029bc8537a", "version": "994b75511d1debac5d7e2ddeae13679f", "job_uuid": "d6d1035e-8a21-4e1d-89d5-fa894f9aff97", "rate": "78000.00", "payment_unit": "Year", "flsa_status": "Exempt", "effective_date": "2021-01-20", "adjust_for_minimum_wage": false, "minimum_wages": []}]}
  put-v1-jobs-job_id:
    Example:
      parameters:
        path:
          job_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "gr78930htutrz444kuytr3s5hgxykuveb523fwl8sir", "title": "Regional Manager", "hire_date": "2020-12-21"}
      responses:
        "200":
          application/json: {"uuid": "d6d1035e-8a21-4e1d-89d5-fa894f9aff97", "version": "d0e719137f89ca3dd334dd4cc248ffbb", "employee_uuid": "948daac8-4355-4ece-9e2a-229898accb22", "hire_date": "2020-01-20", "title": "Account Director", "primary": true, "rate": "78000.00", "payment_unit": "Year", "current_compensation_uuid": "ea8b0b90-1112-4f9d-bb93-bf029bc8537a", "state_wc_covered": false, "state_wc_class_code": "null,", "compensations": [{"uuid": "ea8b0b90-1112-4f9d-bb93-bf029bc8537a", "version": "994b75511d1debac5d7e2ddeae13679f", "job_uuid": "d6d1035e-8a21-4e1d-89d5-fa894f9aff97", "rate": "78000.00", "payment_unit": "Year", "flsa_status": "Exempt", "effective_date": "2021-01-20", "adjust_for_minimum_wage": false, "minimum_wages": []}]}
    Basic:
      parameters:
        path:
          job_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          job_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          job_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}, "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}, "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  delete-v1-jobs-job_id:
    speakeasy-default-delete-v1-jobs-job-id:
      parameters:
        path:
          job_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
  get-v1-jobs-job_id-compensations:
    Example:
      parameters:
        path:
          job_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "db57832c-d8bc-43a7-ae99-0a04480ff037", "version": "98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872", "job_uuid": "d8f8fbe7-496d-4b69-86f0-1e2d1b73a086", "rate": "70.00", "payment_unit": "Hour", "flsa_status": "Nonexempt", "effective_date": "2020-12-11", "adjust_for_minimum_wage": false, "minimum_wages": []}, {"uuid": "a4d9ba9c-32cc-4cc1-a5bc-6ef4cd653e7a", "version": "cc59bd3879d655fb940a1f6b675f2ad9", "job_uuid": "d8f8fbe7-496d-4b69-86f0-1e2d1b73a086", "rate": "5.00", "payment_unit": "Hour", "flsa_status": "Nonexempt", "effective_date": "2018-12-11", "adjust_for_minimum_wage": true, "minimum_wages": [{"uuid": "edeea5af-ecd6-4b1c-b5de-5cff2d302738", "wage": "7.25", "effective_date": "2018-12-11"}]}]
  get-v1-compensations-compensation_id:
    Exempt:
      parameters:
        path:
          compensation_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "db57832c-d8bc-43a7-ae99-0a04480ff037", "version": "98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872", "job_uuid": "d8f8fbe7-496d-4b69-86f0-1e2d1b73a086", "rate": "60000.00", "payment_unit": "Year", "flsa_status": "Exempt", "effective_date": "2020-12-11", "adjust_for_minimum_wage": false, "minimum_wages": []}
    Minimum Wage Adjusted:
      parameters:
        path:
          compensation_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "a4d9ba9c-32cc-4cc1-a5bc-6ef4cd653e7a", "version": "cc59bd3879d655fb940a1f6b675f2ad9", "job_uuid": "d8f8fbe7-496d-4b69-86f0-1e2d1b73a086", "rate": "5.00", "payment_unit": "Hour", "flsa_status": "Nonexempt", "effective_date": "2018-12-11", "adjust_for_minimum_wage": true, "minimum_wages": [{"uuid": "edeea5af-ecd6-4b1c-b5de-5cff2d302738", "wage": "7.25", "effective_date": "2018-12-11"}]}
  put-v1-compensations-compensation_id:
    Exempt:
      parameters:
        path:
          compensation_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872", "rate": "60000.00", "payment_unit": "Year", "flsa_status": "Exempt"}
      responses:
        "200":
          application/json: {"uuid": "db57832c-d8bc-43a7-ae99-0a04480ff037", "version": "98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872", "job_uuid": "d8f8fbe7-496d-4b69-86f0-1e2d1b73a086", "rate": "60000.00", "payment_unit": "Year", "flsa_status": "Exempt", "effective_date": "2020-12-11", "adjust_for_minimum_wage": false, "minimum_wages": []}
    Minimum Wage Adjusted:
      parameters:
        path:
          compensation_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872", "rate": "7.00", "payment_unit": "Hour", "flsa_status": "Nonexempt", "adjust_for_minimum_wage": true, "minimum_wages": [{"uuid": "340832db-ab28-4112-9e10-28dd1711835f"}]}
      responses:
        "200":
          application/json: {"uuid": "a4d9ba9c-32cc-4cc1-a5bc-6ef4cd653e7a", "version": "cc59bd3879d655fb940a1f6b675f2ad9", "job_uuid": "d8f8fbe7-496d-4b69-86f0-1e2d1b73a086", "rate": "5.00", "payment_unit": "Hour", "flsa_status": "Nonexempt", "effective_date": "2018-12-11", "adjust_for_minimum_wage": true, "minimum_wages": [{"uuid": "edeea5af-ecd6-4b1c-b5de-5cff2d302738", "wage": "7.25", "effective_date": "2018-12-11"}]}
    Basic:
      parameters:
        path:
          compensation_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          compensation_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          compensation_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}, "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}, "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  delete-v1-compensations-compensation_id:
    speakeasy-default-delete-v1-compensations-compensation-id:
      parameters:
        path:
          compensation_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
  post-v1-companies-company_id-earning_types:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "Gym Membership Stipend"}
      responses:
        "201":
          application/json: {"name": "Gym Membership Stipend", "uuid": "f4dc8972-8830-4c07-b623-349a04b040d7"}
    Basic:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}, "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}, "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-companies-company_id-earning_types:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"default": [{"name": "Bonus", "uuid": "b82e35c5-d7c6-4705-9e16-9f87499ade18"}, {"name": "Cash Tips", "uuid": "f5618c94-ed7d-4366-b2c4-ff05e430064f"}, {"name": "Commission", "uuid": "60191999-004a-49d9-b163-630574433653"}, {"name": "Correction Payment", "uuid": "368226e0-8e8c-48f0-bc91-aee46caafbc9"}, {"name": "Minimum Wage Adjustment", "uuid": "88a2e519-9ff5-4c19-9071-6a709f3c2939"}, {"name": "Paycheck Tips", "uuid": "a3eaf03d-e712-4144-8f9b-71a85528adcf"}, {"name": "Severance", "uuid": "a6a2eba7-6c7d-4ced-bbe8-43452fbc9f63"}], "custom": [{"name": "Gym Membership Stipend", "uuid": "6b4a8efb-db90-4c13-a75f-aae11b3f4ff9"}]}
  put-v1-companies-company_id-earning_types-earning_type_uuid:
    Example:
      parameters:
        path:
          company_id: "<id>"
          earning_type_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "Gym Membership Stipend"}
      responses:
        "200":
          application/json: {"name": "Gym Membership Stipend", "uuid": "f4dc8972-8830-4c07-b623-349a04b040d7"}
    Basic:
      parameters:
        path:
          company_id: "<id>"
          earning_type_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
          earning_type_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
          earning_type_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}, "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}, "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  delete-v1-companies-company_id-earning_types-earning_type_uuid:
    speakeasy-default-delete-v1-companies-company-id-earning-types-earning-type-uuid:
      parameters:
        path:
          company_id: "<id>"
          earning_type_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
  post-v1-companies-company_uuid-contractors:
    Create an Individual contractor:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"type": "Individual", "wage_type": "Fixed", "start_date": "2020-04-01", "self_onboarding": true, "email": "johnson@johnson.com", "first_name": "Johnson", "last_name": "Johnson", "file_new_hire_report": false, "work_state": "CA"}
      responses:
        "201":
          application/json: {"uuid": "dab2ac34-b5e4-4577-aaf6-ee525de18376", "is_active": true, "hourly_rate": "50.0", "file_new_hire_report": false}
        "422":
          application/json: {"errors": [{"error_key": "<value>", "category": "<value>"}, {"error_key": "<value>", "category": "<value>"}, {"error_key": "<value>", "category": "<value>"}]}
    Create a Business contractor:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"type": "Business", "wage_type": "Fixed", "start_date": "2020-04-01", "self_onboarding": false, "file_new_hire_report": false, "business_name": "Johnson-Johnson Contractors"}
      responses:
        "201":
          application/json: {"uuid": "dab2ac34-b5e4-4577-aaf6-ee525de18376", "is_active": true, "hourly_rate": "50.0", "file_new_hire_report": false}
        "422":
          application/json: {"errors": [{"error_key": "<value>", "category": "<value>"}, {"error_key": "<value>", "category": "<value>"}, {"error_key": "<value>", "category": "<value>"}]}
    Individual Contractor:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"type": "Individual", "wage_type": "Fixed", "start_date": "2020-01-11", "hourly_rate": "40.0", "self_onboarding": false, "file_new_hire_report": false}
      responses:
        "201":
          application/json: {"uuid": "c9fc1ad3-c107-4e7b-aa21-2dd4b00a7a07", "company_uuid": "b7457fec-3b76-43bb-9c6e-69cca4688942", "wage_type": "Hourly", "is_active": false, "version": "63859768485e218ccf8a449bb60f14ed", "type": "Individual", "first_name": "Kory", "last_name": "Gottlieb", "middle_initial": "P", "business_name": null, "ein": null, "has_ein": false, "email": "keira.west@mckenzie.org", "start_date": "2022-01-01", "address": null, "hourly_rate": "60.00", "file_new_hire_report": true, "work_state": "FL", "onboarded": true, "onboarding_status": "onboarding_completed", "payment_method": null, "has_ssn": true, "department_uuid": null}
    Business Contractor:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"type": "Individual", "wage_type": "Fixed", "start_date": "2020-01-11", "hourly_rate": "40.0", "self_onboarding": false, "file_new_hire_report": false}
      responses:
        "201":
          application/json: {"uuid": "c7c0659c-21a6-4b4e-b74c-9252576fc68c", "company_uuid": "0ec4ae6e-e436-460d-b63c-94a14503d16f", "wage_type": "Fixed", "is_active": true, "version": "8aab307f1e8ed788697f8986346af559", "type": "Business", "first_name": null, "last_name": null, "middle_initial": null, "business_name": "Labadie-Stroman", "ein": "XX-XXX0001", "has_ein": true, "email": "jonatan@kerluke.info", "start_date": "2022-01-01", "address": null, "hourly_rate": "0.00", "file_new_hire_report": false, "work_state": null, "onboarded": false, "onboarding_status": "admin_onboarding_incomplete", "payment_method": null, "has_ssn": false}
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"type": "Individual", "wage_type": "Fixed", "start_date": "2020-01-11", "hourly_rate": "40.0", "self_onboarding": false, "file_new_hire_report": false}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"type": "Individual", "wage_type": "Fixed", "start_date": "2020-01-11", "hourly_rate": "40.0", "self_onboarding": false, "file_new_hire_report": false}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"type": "Individual", "wage_type": "Fixed", "start_date": "2020-01-11", "hourly_rate": "40.0", "self_onboarding": false, "file_new_hire_report": false}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}, "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}, "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-companies-company_uuid-contractors:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "c9fc1ad3-c107-4e7b-aa21-2dd4b00a7a07", "company_uuid": "b7457fec-3b76-43bb-9c6e-69cca4688942", "wage_type": "Fixed", "is_active": false, "version": "63859768485e218ccf8a449bb60f14ed", "type": "Individual", "first_name": "Kory", "last_name": "Gottlieb", "middle_initial": "P", "business_name": null, "ein": null, "has_ein": false, "email": "keira.west@mckenzie.org", "start_date": "2022-01-01", "address": {"street_1": "621 Jast Row", "street_2": "Apt. 281", "city": "Coral Springs", "state": "FL", "zip": "33065", "country": "USA"}, "hourly_rate": "0.00", "file_new_hire_report": false, "work_state": null, "onboarded": true, "onboarding_status": "onboarding_completed", "has_ssn": true, "department_uuid": "1802465d-4f68-4865-920c-1307ab095f12"}, {"uuid": "183a86f4-a803-4b38-9357-cd9b78e2560c", "company_uuid": "afdd5d98-581b-4fc0-b988-706b7d23b2a5", "wage_type": "Fixed", "is_active": true, "version": "8aab307f1e8ed788697f8986346af559", "type": "Business", "first_name": null, "last_name": null, "middle_initial": null, "business_name": "Labadie-Stroman", "ein": "XX-XXX0001", "has_ein": true, "email": "jonatan@kerluke.info", "start_date": "2022-01-01", "address": {"street_1": "1625 Bednar Center", "street_2": "Apt. 480", "city": "Port Charlotte", "state": "FL", "zip": "33954", "country": "USA"}, "hourly_rate": "0.00", "file_new_hire_report": false, "work_state": null, "onboarded": true, "onboarding_status": "onboarding_completed", "has_ssn": false}, {"uuid": "ea1c2d65-b622-4899-bcb7-5cd0fe0232aa", "company_uuid": "281c763d-a2ba-4f51-b9e8-b1ed61576d62", "wage_type": "Fixed", "is_active": true, "version": "b48c46abfed1487b873b442334b3c4ff", "type": "Individual", "first_name": "Chanel", "last_name": "Boyle", "middle_initial": "X", "business_name": null, "ein": null, "has_ein": false, "email": "loyal@hettinger.biz", "address": {"street_1": "35913 Darrick Run", "street_2": "Apt. 913", "city": "Cypress", "state": "TX", "zip": "77433", "country": "USA"}, "hourly_rate": "0.00", "file_new_hire_report": true, "work_state": "TX", "onboarded": true, "onboarding_status": "onboarding_completed", "has_ssn": true}]
  get-v1-contractors-contractor_uuid:
    Individual Contractor:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "c9fc1ad3-c107-4e7b-aa21-2dd4b00a7a07", "company_uuid": "b7457fec-3b76-43bb-9c6e-69cca4688942", "wage_type": "Hourly", "is_active": false, "version": "63859768485e218ccf8a449bb60f14ed", "type": "Individual", "first_name": "Kory", "last_name": "Gottlieb", "middle_initial": "P", "business_name": null, "ein": null, "has_ein": false, "email": "keira.west@mckenzie.org", "start_date": "2022-01-01", "address": {"street_1": "621 Jast Row", "street_2": "Apt. 281", "city": "Coral Springs", "state": "FL", "zip": "33065", "country": "USA"}, "hourly_rate": "60.00", "file_new_hire_report": true, "work_state": "FL", "onboarded": true, "onboarding_status": "onboarding_completed", "payment_method": "Direct Deposit", "has_ssn": true, "department_uuid": "56260b3d-c375-415c-b77a-75d99f717193"}
    Business Contractor:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "c7c0659c-21a6-4b4e-b74c-9252576fc68c", "company_uuid": "0ec4ae6e-e436-460d-b63c-94a14503d16f", "wage_type": "Fixed", "is_active": true, "version": "8aab307f1e8ed788697f8986346af559", "type": "Business", "first_name": null, "last_name": null, "middle_initial": null, "business_name": "Labadie-Stroman", "ein": "XX-XXX0001", "has_ein": true, "email": "jonatan@kerluke.info", "start_date": "2022-01-01", "address": null, "hourly_rate": "0.00", "file_new_hire_report": false, "work_state": null, "onboarded": false, "onboarding_status": "admin_onboarding_incomplete", "payment_method": "Direct Deposit", "has_ssn": false}
  put-v1-contractors-contractor_uuid:
    Update an Individual Contractor:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "b48c46abfed1487b873b442334b3c4ff", "type": "Individual", "wage_type": "Hourly", "start_date": "2021-01-01", "hourly_rate": "20.00", "self_onboarding": false, "first_name": "Chanel", "last_name": "Boyle", "middle_initial": "X", "file_new_hire_report": false, "is_active": true}
      responses:
        "200":
          application/json: {"uuid": "1c0f975f-b446-4219-b9c7-27da3fb56262", "is_active": true, "hourly_rate": "50.0", "file_new_hire_report": false}
        "422":
          application/json: {"errors": [{"error_key": "<value>", "category": "<value>"}]}
    Update a Business Contractor:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "b48c46abfed1487b873b442334b3c4ff", "type": "Individual", "wage_type": "Fixed", "start_date": "2020-01-11", "self_onboarding": false, "file_new_hire_report": false, "business_name": "Contracting Solutions", "ein": "991113334", "is_active": false}
      responses:
        "200":
          application/json: {"uuid": "1c0f975f-b446-4219-b9c7-27da3fb56262", "is_active": true, "hourly_rate": "50.0", "file_new_hire_report": false}
        "422":
          application/json: {"errors": [{"error_key": "<value>", "category": "<value>"}]}
    Individual Contractor:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "type": "Individual", "start_date": "2020-01-11", "hourly_rate": "40.0", "self_onboarding": false, "file_new_hire_report": false}
      responses:
        "200":
          application/json: {"uuid": "c9fc1ad3-c107-4e7b-aa21-2dd4b00a7a07", "company_uuid": "b7457fec-3b76-43bb-9c6e-69cca4688942", "wage_type": "Hourly", "is_active": false, "version": "63859768485e218ccf8a449bb60f14ed", "type": "Individual", "first_name": "Kory", "last_name": "Gottlieb", "middle_initial": "P", "business_name": null, "ein": null, "has_ein": false, "email": "keira.west@mckenzie.org", "start_date": "2022-01-01", "address": {"street_1": "621 Jast Row", "street_2": "Apt. 281", "city": "Coral Springs", "state": "FL", "zip": "33065", "country": "USA"}, "hourly_rate": "60.00", "file_new_hire_report": true, "work_state": "FL", "onboarded": true, "onboarding_status": "onboarding_completed", "payment_method": "Direct Deposit", "has_ssn": true, "department_uuid": "56260b3d-c375-415c-b77a-75d99f717193"}
    Business Contractor:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "type": "Individual", "start_date": "2020-01-11", "hourly_rate": "40.0", "self_onboarding": false, "file_new_hire_report": false}
      responses:
        "200":
          application/json: {"uuid": "c7c0659c-21a6-4b4e-b74c-9252576fc68c", "company_uuid": "0ec4ae6e-e436-460d-b63c-94a14503d16f", "wage_type": "Fixed", "is_active": true, "version": "8aab307f1e8ed788697f8986346af559", "type": "Business", "first_name": null, "last_name": null, "middle_initial": null, "business_name": "Labadie-Stroman", "ein": "XX-XXX0001", "has_ein": true, "email": "jonatan@kerluke.info", "start_date": "2022-01-01", "address": null, "hourly_rate": "0.00", "file_new_hire_report": false, "work_state": null, "onboarded": false, "onboarding_status": "admin_onboarding_incomplete", "payment_method": "Direct Deposit", "has_ssn": false}
    Basic:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "type": "Individual", "start_date": "2020-01-11", "hourly_rate": "40.0", "self_onboarding": false, "file_new_hire_report": false}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "type": "Individual", "start_date": "2020-01-11", "hourly_rate": "40.0", "self_onboarding": false, "file_new_hire_report": false}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "type": "Individual", "start_date": "2020-01-11", "hourly_rate": "40.0", "self_onboarding": false, "file_new_hire_report": false}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}, "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}, "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  post-v1-webhook-subscription:
    Example:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"url": "https://partner-app.com/subscriber", "subscription_types": ["Company", "Employee"]}
      responses:
        "201":
          application/json: {"uuid": "c5fdae57-5483-4529-9aae-f0edceed92d4", "url": "https://the-partner-app.com/subscriber", "status": "verified", "subscription_types": ["BankAccount", "Company", "CompanyBenefit", "Contractor", "ContractorPayment", "Employee", "EmployeeBenefit", "EmployeeJobCompensation", "ExternalPayroll", "Form", "Location", "Notification", "Payroll", "PaySchedule", "Signatory"]}
    Basic:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"url": "https://slow-median.com", "subscription_types": ["Location", "ContractorPayment"]}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"url": "https://slow-median.com", "subscription_types": ["Location", "ContractorPayment"]}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"url": "https://slow-median.com", "subscription_types": ["Location", "ContractorPayment"]}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}, "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}, "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-webhook-subscriptions:
    Example:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "dcceb38a-46be-4110-9d1d-1b3384c3b906", "url": "https://6116-2603-6000-8900-3d42-58e7-f1e3-b394-1f21.ngrok.io/subscriber", "status": "pending", "subscription_types": ["BankAccount", "Company", "CompanyBenefit", "Contractor", "ContractorPayment", "Employee", "EmployeeBenefit", "EmployeeJobCompensation", "ExternalPayroll", "Form", "Location", "Notification", "Payroll", "PaySchedule", "Signatory"]}]
  put-v1-webhook-subscription-uuid:
    Example:
      parameters:
        path:
          webhook_subscription_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"subscription_types": ["Company", "Employee"]}
      responses:
        "200":
          application/json: {"uuid": "c5fdae57-5483-4529-9aae-f0edceed92d4", "url": "https://the-partner-app.com/subscriber", "status": "verified", "subscription_types": ["BankAccount", "Company", "CompanyBenefit", "Contractor", "ContractorPayment", "Employee", "EmployeeBenefit", "EmployeeJobCompensation", "ExternalPayroll", "Form", "Location", "Notification", "Payroll", "PaySchedule", "Signatory"]}
    Basic:
      parameters:
        path:
          webhook_subscription_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"subscription_types": ["Payroll", "Payroll"]}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          webhook_subscription_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"subscription_types": ["Payroll", "Payroll"]}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          webhook_subscription_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"subscription_types": ["Payroll", "Payroll"]}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}, "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}, "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-webhook-subscription-uuid:
    Example:
      parameters:
        path:
          webhook_subscription_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "c5fdae57-5483-4529-9aae-f0edceed92d4", "url": "https://the-partner-app.com/subscriber", "status": "verified", "subscription_types": ["BankAccount", "Company", "CompanyBenefit", "Contractor", "ContractorPayment", "Employee", "EmployeeBenefit", "EmployeeJobCompensation", "ExternalPayroll", "Form", "Location", "Notification", "Payroll", "PaySchedule", "Signatory"]}
  delete-v1-webhook-subscription-uuid:
    speakeasy-default-delete-v1-webhook-subscription-uuid:
      parameters:
        path:
          webhook_subscription_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
  put-v1-verify-webhook-subscription-uuid:
    Example:
      parameters:
        path:
          webhook_subscription_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"verification_token": "asefasedfe23e234easd"}
      responses:
        "200":
          application/json: {"uuid": "c5fdae57-5483-4529-9aae-f0edceed92d4", "url": "https://the-partner-app.com/subscriber", "status": "verified", "subscription_types": ["BankAccount", "Company", "CompanyBenefit", "Contractor", "ContractorPayment", "Employee", "EmployeeBenefit", "EmployeeJobCompensation", "ExternalPayroll", "Form", "Location", "Notification", "Payroll", "PaySchedule", "Signatory"]}
    Basic:
      parameters:
        path:
          webhook_subscription_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"verification_token": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          webhook_subscription_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"verification_token": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          webhook_subscription_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"verification_token": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}, "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}, "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-webhook-subscription-verification-token-uuid:
    speakeasy-default-get-v1-webhook-subscription-verification-token-uuid:
      parameters:
        path:
          webhook_subscription_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
  get-v1-companies-company_id-payrolls:
    Example:
      parameters:
        path:
          company_id: "<id>"
        query:
          sort_order: "asc"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"payroll_deadline": "2021-02-18T22:00:00Z", "check_date": "2021-02-22", "processed": true, "processed_date": "2021-02-18", "calculated_at": "2021-02-18T12:00:00Z", "uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777", "payroll_uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777", "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb", "off_cycle": false, "external": false, "pay_period": {"start_date": "2021-02-01", "end_date": "2021-02-15", "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501"}, "totals": {"company_debit": "121747.71", "net_pay_debit": "79283.80", "tax_debit": "42463.91", "reimbursement_debit": "0.00", "child_support_debit": "0.00", "reimbursements": "0.00", "net_pay": "81752.94", "gross_pay": "130635.89", "employee_bonuses": "0.00", "employee_commissions": "18536.37", "employee_cash_tips": "0.00", "employee_paycheck_tips": "0.00", "additional_earnings": "0.00", "owners_draw": "0.00", "check_amount": "2469.14", "employer_taxes": "6917.19", "employee_taxes": "35546.72", "benefits": "0.00", "employee_benefits_deductions": "13336.23", "imputed_pay": "0.00", "deferred_payroll_taxes": "0.00", "other_deductions": "240.00"}, "created_at": "2021-02-01T22:00:00Z", "reversal_payroll_uuids": []}, {"payroll_deadline": "2021-02-28", "check_date": "2021-03-01", "processed": false, "processed_date": "nil", "calculated_at": "nil", "uuid": "98d7fb00-66f8-4940-b438-ca0447fd977e", "payroll_uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777", "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb", "off_cycle": false, "external": false, "pay_period": {"start_date": "2021-02-16", "end_date": "2021-03-01", "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501"}, "created_at": "2022-02-01T22:00:00Z"}]
  get-v1-companies-company_id-payrolls-payroll_id:
    Unprocessed:
      parameters:
        path:
          company_id: "<id>"
          payroll_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"payroll_deadline": "2021-02-18T22:00:00Z", "check_date": "2021-02-22", "processed": false, "processed_date": "<value>", "calculated_at": "<value>", "uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777", "payroll_uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777", "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb", "off_cycle": false, "auto_pilot": false, "external": false, "pay_period": {"start_date": "2021-02-01", "end_date": "2021-02-15", "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501"}, "payroll_status_meta": {"cancellable": false, "expected_check_date": "2021-02-22", "initial_check_date": "2021-02-22", "expected_debit_time": "2021-02-18T22:00:00Z", "payroll_late": false, "initial_debit_cutoff_time": "2021-02-18T22:00:00Z"}, "created_at": "2022-02-01T22:00:00Z", "submission_blockers": [{"blocker_type": "fast_ach_threshold_exceeded", "blocker_name": "Fast ACH Threshold Exceeded", "unblock_options": [{"unblock_type": "wire_in", "check_date": "2024-06-10T00:00:00Z", "metadata": {}}, {"unblock_type": "move_to_four_day", "check_date": "2024-06-12T00:00:00Z", "metadata": {}}], "selected_option": null, "status": "unresolved"}], "processing_request": null}
    Processed:
      parameters:
        path:
          company_id: "<id>"
          payroll_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"payroll_deadline": "2021-02-18T22:00:00Z", "check_date": "2021-02-22", "processed": true, "processed_date": "2021-02-18", "calculated_at": "2021-02-18T12:00:00Z", "payroll_uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777", "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb", "off_cycle": false, "auto_pilot": true, "external": false, "pay_period": {"start_date": "2021-02-01", "end_date": "2021-02-15", "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501"}, "payroll_status_meta": {"cancellable": false, "expected_check_date": "2021-02-22", "initial_check_date": "2021-02-22", "expected_debit_time": "2021-02-18T22:00:00Z", "payroll_late": false, "initial_debit_cutoff_time": "2021-02-18T22:00:00Z"}, "totals": {"company_debit": "121747.71", "net_pay_debit": "79283.80", "tax_debit": "42463.91", "reimbursement_debit": "0.00", "child_support_debit": "0.00", "reimbursements": "0.00", "net_pay": "81752.94", "gross_pay": "130635.89", "employee_bonuses": "0.00", "employee_commissions": "18536.37", "employee_cash_tips": "0.00", "employee_paycheck_tips": "0.00", "additional_earnings": "0.00", "owners_draw": "0.00", "check_amount": "2469.14", "employer_taxes": "6917.19", "employee_taxes": "35546.72", "benefits": "0.00", "employee_benefits_deductions": "13336.23", "imputed_pay": "0.00", "deferred_payroll_taxes": "0.00", "other_deductions": "240.00"}, "employee_compensations": [{"employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7067", "excluded": false, "gross_pay": 2791.25, "net_pay": 1953.31, "check_amount": 1953.31, "payment_method": "Direct Deposit", "fixed_compensations": [{"name": "Bonus", "amount": "100.00", "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242ba5"}, {"name": "Reimbursement", "amount": "100.00", "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e909ba"}], "hourly_compensations": [{"name": "Regular Hours", "hours": "40.000", "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3", "compensation_multiplier": 1, "flsa_status": "Nonexempt"}, {"name": "Overtime", "hours": "15.000", "job_uuid": "9d3760f0-d1f9-4700-8817-0fe2dce5cf23", "compensation_multiplier": 1.5, "flsa_status": "Nonexempt"}, {"name": "Double overtime", "hours": "0.000", "job_uuid": "b5eef9a9-4a87-4649-a80d-14878c05f44e", "compensation_multiplier": 2, "flsa_status": "Nonexempt"}, {"name": "Regular Hours", "hours": "40.000", "job_uuid": "332bd171-9efc-432b-abbb-a75c9dba706a", "compensation_multiplier": 1, "flsa_status": "Nonexempt"}, {"name": "Overtime", "hours": "5.000", "job_uuid": "ca9b3dc1-57ac-4736-901a-9b1c9634b9d5", "compensation_multiplier": 1.5, "flsa_status": "Nonexempt"}, {"name": "Double overtime", "hours": "0.000", "job_uuid": "1bad01e2-140c-49ed-9542-2388ce4a19b3", "compensation_multiplier": 2, "flsa_status": "Nonexempt"}], "paid_time_off": [{"name": "Vacation Hours", "hours": "20.000"}, {"name": "Sick Hours", "hours": "0.000"}, {"name": "Holiday Hours", "hours": "0.000"}], "benefits": [{"name": "Group Term Life", "employee_deduction": 100, "company_contribution": 50, "imputed": true}, {"name": "401K", "employee_deduction": 100, "company_contribution": 50, "imputed": false}], "deductions": [{"name": "Child Support", "amount": 80}], "taxes": [{"name": "Federal Income Tax", "employer": false, "amount": 646.69}, {"name": "Social Security", "employer": true, "amount": 191.25}]}, {"employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7012", "excluded": false, "gross_pay": 2791.25, "net_pay": 1953.31, "check_amount": 1953.31, "payment_method": "Direct Deposit", "fixed_compensations": [{"name": "Bonus", "amount": "100.00", "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242b34"}, {"name": "Reimbursement", "amount": "100.00", "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e90955"}], "hourly_compensations": [{"name": "Regular Hours", "hours": "40.000", "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3", "compensation_multiplier": 1, "flsa_status": "Commission Only Exempt"}], "paid_time_off": [{"name": "Vacation Hours", "hours": "20.000"}, {"name": "Sick Hours", "hours": "0.000"}, {"name": "Holiday Hours", "hours": "0.000"}], "benefits": [{"name": "Group Term Life", "employee_deduction": 100, "company_contribution": 50, "imputed": true}, {"name": "401K", "employee_deduction": 100, "company_contribution": 50, "imputed": false}], "deductions": [{"name": "Child Support", "amount": 80}], "taxes": [{"name": "Federal Income Tax", "employer": false, "amount": 646.69}, {"name": "Social Security", "employer": true, "amount": 191.25}]}, {"employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7781", "excluded": false, "gross_pay": 2791.25, "net_pay": 1953.31, "check_amount": 1953.31, "payment_method": "Direct Deposit", "fixed_compensations": [{"name": "Bonus", "amount": "100.00", "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242bab"}, {"name": "Reimbursement", "amount": "100.00", "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e909cd"}], "hourly_compensations": [{"name": "Regular Hours", "hours": "40.000", "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3", "compensation_multiplier": 1, "flsa_status": "Exempt"}], "paid_time_off": [{"name": "Vacation Hours", "hours": "20.000"}, {"name": "Sick Hours", "hours": "0.000"}, {"name": "Holiday Hours", "hours": "0.000"}], "benefits": [{"name": "Group Term Life", "employee_deduction": 100, "company_contribution": 50, "imputed": true}, {"name": "401K", "employee_deduction": 100, "company_contribution": 50, "imputed": false}], "deductions": [{"name": "Child Support", "amount": 80}], "taxes": [{"name": "Federal Income Tax", "employer": false, "amount": 646.69}, {"name": "Social Security", "employer": true, "amount": 191.25}]}], "company_taxes": [{"name": "MO Compensation Deduction", "employer": true, "amount": "-0.92"}, {"name": "NY MCTMT", "employer": true, "amount": "5.00"}], "created_at": "2022-02-01T22:00:00Z", "credit_blockers": [{"blocker_type": "waiting_for_wire_in", "blocker_name": "Waiting for Wire In", "unblock_options": [{"unblock_type": "submit_wire", "check_date": "2024-06-10T00:00:00Z", "metadata": {}}], "selected_option": "submit_wire", "status": "unresolved"}], "processing_request": {"status": "submit_success", "errors": []}}
  put-v1-companies-company_id-payrolls:
    Example:
      parameters:
        path:
          company_id: "<id>"
          payroll_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"employee_compensations": [{}, {}, {}]}
      responses:
        "200":
          application/json: {"payroll_deadline": "2022-02-18T22:00:00Z", "check_date": "2021-02-22", "processed": false, "processed_date": "<value>", "calculated_at": "<value>", "uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777", "payroll_uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777", "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb", "off_cycle": false, "off_cycle_reason": null, "auto_pilot": false, "external": false, "pay_period": {"start_date": "2021-02-01", "end_date": "2021-02-15", "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501"}, "payroll_status_meta": {"cancellable": false, "expected_check_date": "2022-02-22", "initial_check_date": "2022-02-22", "expected_debit_time": "2022-02-18T22:00:00Z", "payroll_late": false, "initial_debit_cutoff_time": "2022-02-18T22:00:00Z"}, "employee_compensations": [{"employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7067", "excluded": false, "version": "4ba36d23a78c7393b4900ef38019d8ff", "payment_method": "Direct Deposit", "fixed_compensations": [{"name": "Bonus", "amount": "100.00", "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242ba5"}, {"name": "Reimbursement", "amount": "100.00", "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e909ba"}], "hourly_compensations": [{"name": "Regular Hours", "hours": "40.000", "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3", "compensation_multiplier": 1, "flsa_status": "Nonexempt"}, {"name": "Overtime", "hours": "15.000", "job_uuid": "9d3760f0-d1f9-4700-8817-0fe2dce5cf23", "compensation_multiplier": 1.5, "flsa_status": "Nonexempt"}, {"name": "Double overtime", "hours": "0.000", "job_uuid": "b5eef9a9-4a87-4649-a80d-14878c05f44e", "compensation_multiplier": 2, "flsa_status": "Nonexempt"}, {"name": "Regular Hours", "hours": "40.000", "job_uuid": "332bd171-9efc-432b-abbb-a75c9dba706a", "compensation_multiplier": 1, "flsa_status": "Nonexempt"}, {"name": "Overtime", "hours": "5.000", "job_uuid": "ca9b3dc1-57ac-4736-901a-9b1c9634b9d5", "compensation_multiplier": 1.5, "flsa_status": "Nonexempt"}, {"name": "Double overtime", "hours": "0.000", "job_uuid": "1bad01e2-140c-49ed-9542-2388ce4a19b3", "compensation_multiplier": 2, "flsa_status": "Nonexempt"}], "paid_time_off": [{"name": "Vacation Hours", "hours": "20.000"}, {"name": "Sick Hours", "hours": "0.000"}, {"name": "Holiday Hours", "hours": "0.000"}]}, {"employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7012", "excluded": false, "version": "ff083257a5583291fb86656ad0df1b42", "payment_method": "Direct Deposit", "fixed_compensations": [{"name": "Bonus", "amount": "100.00", "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242b34"}, {"name": "Reimbursement", "amount": "100.00", "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e90955"}], "hourly_compensations": [{"name": "Regular Hours", "hours": "40.000", "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3", "compensation_multiplier": 1, "flsa_status": "Commission Only Exempt"}], "paid_time_off": [{"name": "Vacation Hours", "hours": "20.000"}, {"name": "Sick Hours", "hours": "0.000"}, {"name": "Holiday Hours", "hours": "0.000"}]}, {"employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7781", "excluded": false, "version": "259816479e3729bf855318af9b9adddf", "payment_method": "Direct Deposit", "fixed_compensations": [{"name": "Bonus", "amount": "100.00", "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242bab"}, {"name": "Reimbursement", "amount": "100.00", "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e909cd"}], "hourly_compensations": [{"name": "Regular Hours", "hours": "40.000", "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3", "compensation_multiplier": 1, "flsa_status": "Exempt"}], "paid_time_off": [{"name": "Vacation Hours", "hours": "20.000"}, {"name": "Sick Hours", "hours": "0.000"}, {"name": "Holiday Hours", "hours": "0.000"}]}], "created_at": "2022-02-01T22:00:00Z", "fixed_compensation_types": [{"name": "Bonus"}, {"name": "Commission"}, {"name": "Paycheck Tips"}, {"name": "Cash Tips"}, {"name": "Correction Payment"}, {"name": "Anniversary Bonus"}, {"name": "Internet Stipend"}, {"name": "Reimbursement"}], "processing_request": null}
    Basic:
      parameters:
        path:
          company_id: "<id>"
          payroll_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"employee_compensations": [{}, {}, {}]}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
          payroll_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"employee_compensations": [{}, {}, {}]}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
          payroll_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"employee_compensations": [{}, {}, {}]}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}, "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}, "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  put-v1-companies-company_id-payrolls-payroll_id-prepare:
    Example:
      parameters:
        path:
          company_id: "<id>"
          payroll_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"payroll_deadline": "2022-02-18T22:00:00Z", "check_date": "2021-02-22", "processed": false, "processed_date": "<value>", "calculated_at": "<value>", "uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777", "payroll_uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777", "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb", "off_cycle": false, "off_cycle_reason": null, "auto_pilot": false, "external": false, "pay_period": {"start_date": "2021-02-01", "end_date": "2021-02-15", "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501"}, "payroll_status_meta": {"cancellable": false, "expected_check_date": "2022-02-22", "initial_check_date": "2022-02-22", "expected_debit_time": "2022-02-18T22:00:00Z", "payroll_late": false, "initial_debit_cutoff_time": "2022-02-18T22:00:00Z"}, "employee_compensations": [{"employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7067", "excluded": false, "version": "4ba36d23a78c7393b4900ef38019d8ff", "payment_method": "Direct Deposit", "fixed_compensations": [{"name": "Bonus", "amount": "100.00", "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242ba5"}, {"name": "Reimbursement", "amount": "100.00", "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e909ba"}], "hourly_compensations": [{"name": "Regular Hours", "hours": "40.000", "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3", "compensation_multiplier": 1, "flsa_status": "Nonexempt"}, {"name": "Overtime", "hours": "15.000", "job_uuid": "9d3760f0-d1f9-4700-8817-0fe2dce5cf23", "compensation_multiplier": 1.5, "flsa_status": "Nonexempt"}, {"name": "Double overtime", "hours": "0.000", "job_uuid": "b5eef9a9-4a87-4649-a80d-14878c05f44e", "compensation_multiplier": 2, "flsa_status": "Nonexempt"}, {"name": "Regular Hours", "hours": "40.000", "job_uuid": "332bd171-9efc-432b-abbb-a75c9dba706a", "compensation_multiplier": 1, "flsa_status": "Nonexempt"}, {"name": "Overtime", "hours": "5.000", "job_uuid": "ca9b3dc1-57ac-4736-901a-9b1c9634b9d5", "compensation_multiplier": 1.5, "flsa_status": "Nonexempt"}, {"name": "Double overtime", "hours": "0.000", "job_uuid": "1bad01e2-140c-49ed-9542-2388ce4a19b3", "compensation_multiplier": 2, "flsa_status": "Nonexempt"}], "paid_time_off": [{"name": "Vacation Hours", "hours": "20.000"}, {"name": "Sick Hours", "hours": "0.000"}, {"name": "Holiday Hours", "hours": "0.000"}]}, {"employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7012", "excluded": false, "version": "ff083257a5583291fb86656ad0df1b42", "payment_method": "Direct Deposit", "fixed_compensations": [{"name": "Bonus", "amount": "100.00", "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242b34"}, {"name": "Reimbursement", "amount": "100.00", "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e90955"}], "hourly_compensations": [{"name": "Regular Hours", "hours": "40.000", "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3", "compensation_multiplier": 1, "flsa_status": "Commission Only Exempt"}], "paid_time_off": [{"name": "Vacation Hours", "hours": "20.000"}, {"name": "Sick Hours", "hours": "0.000"}, {"name": "Holiday Hours", "hours": "0.000"}]}, {"employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7781", "excluded": false, "version": "259816479e3729bf855318af9b9adddf", "payment_method": "Direct Deposit", "fixed_compensations": [{"name": "Bonus", "amount": "100.00", "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242bab"}, {"name": "Reimbursement", "amount": "100.00", "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e909cd"}], "hourly_compensations": [{"name": "Regular Hours", "hours": "40.000", "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3", "compensation_multiplier": 1, "flsa_status": "Exempt"}], "paid_time_off": [{"name": "Vacation Hours", "hours": "20.000"}, {"name": "Sick Hours", "hours": "0.000"}, {"name": "Holiday Hours", "hours": "0.000"}]}], "created_at": "2022-02-01T22:00:00Z", "fixed_compensation_types": [{"name": "Bonus"}, {"name": "Commission"}, {"name": "Paycheck Tips"}, {"name": "Cash Tips"}, {"name": "Correction Payment"}, {"name": "Anniversary Bonus"}, {"name": "Internet Stipend"}, {"name": "Reimbursement"}], "processing_request": null}
  post-v1-payrolls-payroll_id-calculate_accruing_time_off_hours:
    Example:
      parameters:
        path:
          payroll_id: "<id>"
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"regular_hours_worked": 30.25, "overtime_hours_worked": 10, "double_overtime_hours_worked": 0, "pto_hours_used": 5.5, "sick_hours_used": 0}
      responses:
        "200":
          application/json: {"hours_earned": [{}]}
    Basic:
      parameters:
        path:
          payroll_id: "<id>"
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          payroll_id: "<id>"
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          payroll_id: "<id>"
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}, "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}, "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-companies-company_id-contractor_payments:
    Example:
      parameters:
        path:
          company_id: "<id>"
        query:
          start_date: "2020-01-01"
          end_date: "2020-12-31"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {}
  get-v1-companies-company_id-contractor_payment-contractor-payment:
    Example:
      parameters:
        path:
          company_id: "<id>"
          contractor_payment_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "04552eb9-7829-4b18-ae96-6983552948df", "contractor_uuid": "bc57832c-d8bc-43a7-ae99-3a03380ff037", "bonus": "20.0", "date": "2020-10-19", "hours": "40.0", "payment_method": "Direct Deposit", "reimbursement": "100.0", "status": "Unfunded", "hourly_rate": "18.0", "may_cancel": true, "wage": "0.0", "wage_type": "Hourly", "wage_total": "740.00"}
  get-v1-companies-company_id-contractor_payment_groups:
    Example:
      parameters:
        path:
          company_id: "<id>"
        query:
          start_date: "2020-01-01"
          end_date: "2020-12-31"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "7f2337f9-9b78-44b9-aeed-be4777b833a8", "company_uuid": "c54046f7-1be4-4c54-8194-f4842c30c86d", "check_date": "2024-03-15T00:00:00Z", "debit_date": "2024-03-11T00:00:00Z", "status": "Funded", "creation_token": "a51a3500-3200-43af-a738-169d4b66a9db", "totals": {"debit_amount": "740.00", "wage_amount": "720.00", "reimbursement_amount": "20.00"}}, {"uuid": "56260b3d-c375-415c-b77a-75d99f717193", "company_uuid": "c54046f7-1be4-4c54-8194-f4842c30c86d", "check_date": "2024-05-02T00:00:00Z", "debit_date": "2024-04-26T00:00:00Z", "status": "Unfunded", "creation_token": "45ef81bb-ae24-4ad1-b2c6-6e563a4c30ed", "totals": {"debit_amount": "2365.00", "wage_amount": "2270.00", "reimbursement_amount": "95.00"}}]
  post-v1-companies-company_id-contractor_payment_groups-preview:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"check_date": "2020-01-01", "creation_token": "1d532d13-8f61-4a57-ad3c-b5fac1c6e05e", "contractor_payments": [{"payment_method": "Direct Deposit", "wage": 5000, "hours": 40, "bonus": 500, "reimbursement": 20}]}
      responses:
        "200":
          application/json: {"uuid": "nil", "company_uuid": "c54046f7-1be4-4c54-8194-f4842c30c86d", "check_date": "2024-05-07T00:00:00Z", "debit_date": "2024-05-01T00:00:00Z", "status": "Unfunded", "creation_token": "nil", "totals": {"amount": "2295.0", "debit_amount": "2295.0", "wage_amount": "2220.0", "reimbursement_amount": "75.0"}, "contractor_payments": [{"uuid": "nil", "contractor_uuid": "2e6d0970-31bf-47ce-bdb4-713e4207ecf4", "bonus": "0.0", "hours": "40.0", "payment_method": "Direct Deposit", "reimbursement": "75.0", "status": "Unfunded", "hourly_rate": "18.0", "may_cancel": false, "wage": "0.0", "wage_type": "Hourly", "wage_total": "720.0"}, {"uuid": "nil", "contractor_uuid": "a975fda0-fcf5-469a-a5fd-06e43d1cd99d", "bonus": "0.0", "hours": "0.0", "payment_method": "Check", "reimbursement": "0.0", "status": "Unfunded", "hourly_rate": "0.0", "may_cancel": false, "wage": "1500.0", "wage_type": "Fixed", "wage_total": "1500.0"}]}
    Basic:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"check_date": "2020-01-01", "creation_token": "1d532d13-8f61-4a57-ad3c-b5fac1c6e05e", "contractor_payments": [{"payment_method": "Direct Deposit", "wage": 5000, "hours": 40, "bonus": 500, "reimbursement": 20}]}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"check_date": "2020-01-01", "creation_token": "1d532d13-8f61-4a57-ad3c-b5fac1c6e05e", "contractor_payments": [{"payment_method": "Direct Deposit", "wage": 5000, "hours": 40, "bonus": 500, "reimbursement": 20}]}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"check_date": "2020-01-01", "creation_token": "1d532d13-8f61-4a57-ad3c-b5fac1c6e05e", "contractor_payments": [{"payment_method": "Direct Deposit", "wage": 5000, "hours": 40, "bonus": 500, "reimbursement": 20}]}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}, "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}, "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-contractor_payment_groups-contractor_payment_group_id:
    Example:
      parameters:
        path:
          contractor_payment_group_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "f693e034-d833-46e3-88d4-2c820c383c57", "company_uuid": "c54046f7-1be4-4c54-8194-f4842c30c86d", "check_date": "2024-05-07T00:00:00Z", "debit_date": "2024-05-01T00:00:00Z", "status": "Unfunded", "creation_token": "45ef81bb-ae24-4ad1-b2c6-6e563a4c30ed", "totals": {"amount": "2295.0", "debit_amount": "2295.0", "wage_amount": "2220.0", "reimbursement_amount": "75.0"}, "contractor_payments": [{"uuid": "630dc982-f498-4ebc-a6dc-4d76711027ce", "contractor_uuid": "2e6d0970-31bf-47ce-bdb4-713e4207ecf4", "bonus": "0.0", "hours": "40.0", "payment_method": "Direct Deposit", "reimbursement": "75.0", "status": "Unfunded", "hourly_rate": "18.0", "may_cancel": false, "wage": "0.0", "wage_type": "Hourly", "wage_total": "720.0"}, {"uuid": "12f51eba-d653-4357-8c05-1f1f8d0fd5e3", "contractor_uuid": "a975fda0-fcf5-469a-a5fd-06e43d1cd99d", "bonus": "0.0", "hours": "0.0", "payment_method": "Check", "reimbursement": "0.0", "status": "Unfunded", "hourly_rate": "0.0", "may_cancel": false, "wage": "1500.0", "wage_type": "Fixed", "wage_total": "1500.0"}]}
  post-v1-companies-company_id-company_benefits:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"active": true, "description": "hm pfft surge beyond"}
      responses:
        "201":
          application/json: {"version": "98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872", "company_uuid": "881ce3f2-e3e1-49c9-8ad4-0bcf515f5618", "uuid": "d2cec746-caee-464a-bcaf-00d93f7049c9", "benefit_type": 1, "active": true, "description": "Kaiser Permanente", "source": "external", "partner_name": "XYZ Corp", "deletable": true, "supports_percentage_amounts": true, "responsible_for_employer_taxes": false, "responsible_for_employee_w2": false}
    Basic:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"active": true, "description": "hm pfft surge beyond"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"active": true, "description": "hm pfft surge beyond"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"active": true, "description": "hm pfft surge beyond"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}, "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}, "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-companies-company_id-company_benefits:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"version": "98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872", "company_uuid": "528cc543-8a41-497e-b479-23a4c5ec77ac", "uuid": "d2cec746-caee-464a-bcaf-00d93f7049c9", "benefit_type": 1, "active": true, "description": "Kaiser Permanente", "source": "external", "partner_name": "XYZ Corp", "deletable": true, "supports_percentage_amounts": true, "responsible_for_employer_taxes": false, "responsible_for_employee_w2": false}]
  get-v1-company_benefits-company_benefit_id:
    Example:
      parameters:
        path:
          company_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"version": "98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872", "uuid": "d2cec746-caee-464a-bcaf-00d93f7049c9", "active": true, "description": "Kaiser Permanente", "source": "external", "partner_name": "XYZ Corp", "deletable": true, "supports_percentage_amounts": true, "responsible_for_employer_taxes": false, "responsible_for_employee_w2": false, "employee_benefits": [{"employee_uuid": "ae44a0b2-3c89-41e1-91c8-5f8224a779ca", "company_benefit_uuid": "d2cec746-caee-464a-bcaf-00d93f7049c9", "active": true, "deduct_as_percentage": false, "employee_deduction": "3", "company_contribution": "0", "uuid": "9988f241-9aee-4383-bfca-eac79cf58135", "contribution": {"type": "amount", "value": "<value>"}}]}
  put-v1-company_benefits-company_benefit_id:
    Example:
      parameters:
        path:
          company_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872", "active": false}
      responses:
        "200":
          application/json: {"version": "98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872", "company_uuid": "881ce3f2-e3e1-49c9-8ad4-0bcf515f5618", "uuid": "d2cec746-caee-464a-bcaf-00d93f7049c9", "benefit_type": 1, "active": true, "description": "Kaiser Permanente", "source": "external", "partner_name": "XYZ Corp", "deletable": true, "supports_percentage_amounts": true, "responsible_for_employer_taxes": false, "responsible_for_employee_w2": false}
    Basic:
      parameters:
        path:
          company_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}, "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}, "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  delete-v1-company_benefits-company_benefit_id:
    Example:
      parameters:
        path:
          company_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": {"base": [{"type": "error type", "message": "This is an error message", "full_message": "This is a more descriptive error message"}]}}
  get-v1-benefits:
    Supported Benefits:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"benefit_type": 1, "name": "Medical Insurance", "description": "Deductions and contributions for Medical Insurance", "pretax": true, "posttax": false, "imputed": false, "healthcare": true, "retirement": false, "yearly_limit": false, "category": "Health"}, {"benefit_type": 2, "name": "Dental Insurance", "description": "Deductions and contributions for Dental Insurance", "pretax": true, "posttax": false, "imputed": false, "healthcare": true, "retirement": false, "yearly_limit": false, "category": "Health"}, {"benefit_type": 3, "name": "Vision Insurance", "description": "Deductions and contributions for Vision Insurance", "pretax": true, "posttax": false, "imputed": false, "healthcare": true, "retirement": false, "yearly_limit": false, "category": "Health"}, {"benefit_type": 6, "name": "Health Savings Account", "description": "Health Savings Accounts (HSA) allow employees to be reimbursed for qualified medical expenses. Contributions are pre-tax and lower the total amount of tax paid by employees and the employer. Employers may also make tax-free contributions to employees' HSA. Remaining balances are carried over in next year.", "pretax": true, "posttax": false, "imputed": false, "healthcare": false, "retirement": false, "yearly_limit": true, "category": "Health"}, {"benefit_type": 7, "name": "Health FSA", "description": "Flexible Spending Accounts (FSA) allow employees to be reimbursed for qualified medical expenses. Contributions are pre-tax and lower the total amount of tax paid by employees and the employer. Employers may also make tax-free contributions to employees' FSA. Remaining balances are not carried over in next year.", "pretax": true, "posttax": false, "imputed": false, "healthcare": false, "retirement": false, "yearly_limit": true, "category": "Health"}, {"benefit_type": 11, "name": "Dependent Care FSA", "description": "Dependent Care FSA reimburses employees for expenses to care for dependents while the employee is at work (e.g. Daycares). Contributions are pre-tax and lower the total amount of tax paid by employees and the employer. Employers may also make tax-free contributions to employee FSA. Remaining balances are not carried over to the next year. Single parents or Married couples filing a joint return can elect up to $5000 per year. Married couples filing separate returns are limited to $2500 elections each.", "pretax": true, "posttax": false, "imputed": false, "healthcare": false, "retirement": false, "yearly_limit": true, "category": "Health"}, {"benefit_type": 8, "name": "SIMPLE IRA", "description": "The SIMPLE IRA is a tax-deferred retirement savings plan for employees. It is often used by small businesses as an alternative to 401(k) due to its relatively low operating cost. Employers are required to contribute a specific percentage to an employee's SIMPLE IRA.", "pretax": true, "posttax": false, "imputed": false, "healthcare": false, "retirement": true, "yearly_limit": true, "category": "Savings and Retirement"}, {"benefit_type": 105, "name": "Roth 401(k)", "description": "Roth 401(k) is an after-tax savings plan for employees. The standard maximum is $18,000, or $24,000 for employees over 50 years old.", "pretax": false, "posttax": true, "imputed": false, "healthcare": false, "retirement": true, "yearly_limit": true, "category": "Savings and Retirement"}, {"benefit_type": 110, "name": "Roth 403(b)", "description": "Roth 403(b) is an after-tax savings plan for certain clerics, employees of public schools, and employees of other types of tax-exempt organizations. Contributions made by employees are taxable for federal and state withholding. Often, employers contribute additional pre-tax dollars to the employee’s Roth account to encourage saving for retirement.", "pretax": false, "posttax": true, "imputed": false, "healthcare": false, "retirement": true, "yearly_limit": true, "category": "Savings and Retirement"}, {"benefit_type": 5, "name": "401(k)", "description": "401(k) is tax-deferred retirement savings plan for employees. The standard maximum is $18,000, or $24,000 for employees over 50 years old.", "pretax": true, "posttax": false, "imputed": false, "healthcare": false, "retirement": true, "yearly_limit": true, "category": "Savings and Retirement"}, {"benefit_type": 9, "name": "403(b)", "description": "403(b) is tax-deferred retirement savings plan for certain clerics, employees of public schools, and employees of other types of tax-exempt organizations.", "pretax": true, "posttax": false, "imputed": false, "healthcare": false, "retirement": true, "yearly_limit": true, "category": "Savings and Retirement"}, {"benefit_type": 108, "name": "SEP-IRA", "description": "A SEP-IRA is a pre-tax retirement savings plan where only the employer contributes. It is often used by small businesses as an alternative to 401(k) due to its relatively low operating cost. Employers are required to contribute the same percentage to all enrolled employees, with a maximum contribution of 25% of the employee’s compensation.", "pretax": true, "posttax": false, "imputed": false, "healthcare": false, "retirement": true, "yearly_limit": true, "category": "Savings and Retirement"}, {"benefit_type": 109, "name": "SARSEP", "description": "A SARSEP is a pre-tax retirement savings plan used by small businesses as an alternative to 401(k) due to its relatively low operating cost. While new SARSEP plans are not available, there are still some companies that are grandfathered into the plan. Employers are required to contribute the same percentage to all enrolled employees, with a maximum contribution of 25% of the employee’s compensation.", "pretax": true, "posttax": false, "imputed": false, "healthcare": false, "retirement": true, "yearly_limit": true, "category": "Savings and Retirement"}, {"benefit_type": 107, "name": "Group-Term Life Insurance", "description": "Group-Term Life Insurance for coverage in excess of $50,000 per employee is a taxable fringe benefit. See IRS Publication 15-B to determine the dollar value of the excess coverage.", "pretax": false, "posttax": true, "imputed": true, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Health"}, {"benefit_type": 10, "name": "Commuter Benefits (pre-tax)", "description": "Tax-free commuter benefits for transit, vanpooling, bicycling, and work-related parking costs. The annual maximum contribution for this pre-tax benefit is in the IRS publication 15-B.", "pretax": true, "posttax": false, "imputed": false, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Transportation"}, {"benefit_type": 106, "name": "Personal Use of Company Car", "description": "When an employee uses a company-owned car for personal matters, it is considered taxable benefit provided in-kind.", "pretax": false, "posttax": true, "imputed": true, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Transportation"}, {"benefit_type": 111, "name": "529 College Savings", "description": "529 College Savings is an after-tax savings plan for employees designed to encourage saving for future college costs. This benefit should be reported as a taxable benefit and will therefore be taxed.", "pretax": false, "posttax": true, "imputed": true, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Other"}, {"benefit_type": 112, "name": "Student Loan Repayment", "description": "Student Loan Repayment is an after-tax savings plan for employees to pay towards their outstanding student loans. An employee can choose to set aside after-tax dollars towards this benefit. These benefits should be reported as a taxable benefit and will therefore be taxed.", "pretax": false, "posttax": true, "imputed": true, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Other"}, {"benefit_type": 998, "name": "Short Term Disability (post-tax)", "description": "Third Party Disability or Third Party Leave are policies offered by employers that pay an employee for a specific life event (maternity leave, injury). All payments made to employees come from a third-party, such as an insurer. For more information on the taxation of these plans, please refer to publication 15-A for more details.", "pretax": false, "posttax": true, "imputed": false, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Health"}, {"benefit_type": 999, "name": "Long Term Disability (post-tax)", "description": "Third Party Disability or Third Party Leave are policies offered by employers that pay an employee for a specific life event (maternity leave, injury). All payments made to employees come from a third-party, such as an insurer. For more information on the taxation of these plans, please refer to publication 15-A for more details.", "pretax": false, "posttax": true, "imputed": false, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Health"}, {"benefit_type": 996, "name": "Short Term Disability (pre-tax)", "description": "Third Party Disability or Third Party Leave are policies offered by employers that pay an employee for a specific life event (maternity leave, injury). All payments made to employees come from a third-party, such as an insurer. For more information on the taxation of these plans, please refer to publication 15-A for more details.", "pretax": true, "posttax": false, "imputed": false, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Health"}, {"benefit_type": 997, "name": "Long Term Disability (pre-tax)", "description": "Third Party Disability or Third Party Leave are policies offered by employers that pay an employee for a specific life event (maternity leave, injury). All payments made to employees come from a third-party, such as an insurer. For more information on the taxation of these plans, please refer to publication 15-A for more details.", "pretax": true, "posttax": false, "imputed": false, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Health"}, {"benefit_type": 991, "name": "Voluntary Short Term Disability (post-tax)", "description": "Third Party Disability or Third Party Leave are policies offered by employers that pay an employee for a specific life event (maternity leave, injury). All payments made to employees come from a third-party, such as an insurer. For more information on the taxation of these plans, please refer to publication 15-A for more details.", "pretax": false, "posttax": true, "imputed": false, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Health"}, {"benefit_type": 992, "name": "Voluntary Long Term Disability (post-tax)", "description": "Third Party Disability or Third Party Leave are policies offered by employers that pay an employee for a specific life event (maternity leave, injury). All payments made to employees come from a third-party, such as an insurer. For more information on the taxation of these plans, please refer to publication 15-A for more details.", "pretax": false, "posttax": true, "imputed": false, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Health"}, {"benefit_type": 993, "name": "Voluntary Life (post-tax)", "description": "Third Party Disability or Third Party Leave are policies offered by employers that pay an employee for a specific life event (maternity leave, injury). All payments made to employees come from a third-party, such as an insurer. For more information on the taxation of these plans, please refer to publication 15-A for more details.", "pretax": false, "posttax": true, "imputed": false, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Health"}, {"benefit_type": 113, "name": "Commuter Parking", "description": "Tax-free commuter benefits allow employees to reduce their monthly commuting expenses for transit, carpooling, bicycling, and work-related parking costs. Please note that there is an annual maximum for this pre-tax benefit. The maximum dollar amount is found in IRS Publication 15-B.", "pretax": true, "posttax": false, "imputed": false, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Transportation"}, {"benefit_type": 114, "name": "Commuter Transit", "description": "Tax-free commuter benefits allow employees to reduce their monthly commuting expenses for transit, carpooling, bicycling, and work-related parking costs. Please note that there is an annual maximum for this pre-tax benefit. The maximum dollar amount is found in IRS Publication 15-B.", "pretax": true, "posttax": false, "imputed": false, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Transportation"}, {"benefit_type": 100, "name": "Other (taxable)", "description": "Other taxable benefit", "pretax": false, "posttax": true, "imputed": true, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Other"}, {"benefit_type": 201, "name": "Cell Phone (taxable)", "description": "Employer-sponsored benefits like this are called fringe benefits, and they don’t get special tax treatment—they’ll be reported as taxable wages on your employees’ paystubs.", "pretax": false, "posttax": true, "imputed": true, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Transportation"}, {"benefit_type": 202, "name": "Gym & Fitness (taxable)", "description": "Employer-sponsored benefits like this are called fringe benefits, and they don’t get special tax treatment—they’ll be reported as taxable wages on your employees’ paystubs.", "pretax": false, "posttax": true, "imputed": true, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Transportation"}, {"benefit_type": 203, "name": "Housing (taxable)", "description": "Employer-sponsored benefits like this are called fringe benefits, and they don’t get special tax treatment—they’ll be reported as taxable wages on your employees’ paystubs.", "pretax": false, "posttax": true, "imputed": true, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Transportation"}, {"benefit_type": 204, "name": "Wellness (taxable)", "description": "Employer-sponsored benefits like this are called fringe benefits, and they don’t get special tax treatment—they’ll be reported as taxable wages on your employees’ paystubs.", "pretax": false, "posttax": true, "imputed": true, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Transportation"}]
  get-v1-benefits-benefit_id:
    Example:
      parameters:
        path:
          benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"benefit_type": 1, "name": "Medical Insurance", "description": "Deductions and contributions for Medical Insurance", "pretax": true, "posttax": false, "imputed": false, "healthcare": true, "retirement": false, "yearly_limit": false}
  get-v1-benefits-company_benefit_id-summary:
    Example:
      parameters:
        path:
          company_benefit_id: "<id>"
        query:
          start_date: "2022-01-01"
          end_date: "2022-12-31"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"start_date": "2022-01-01", "end_date": "2022-12-31", "description": "Simple IRA", "company_benefit_deduction": "60.0", "company_benefit_contribution": "30.0", "employees": {}}
  get-v1-company_benefits-company_benefit_id-employee_benefits:
    Example:
      parameters:
        path:
          company_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"version": "09j3d29jqdpj92109j9j2d90dq", "active": true, "employee_deduction": "100.00", "deduct_as_percentage": false, "employee_deduction_annual_maximum": "200.00", "elective": false, "company_contribution_annual_maximum": "200.00", "limit_option": null, "catch_up": false, "coverage_amount": null, "deduction_reduces_taxable_income": null, "coverage_salary_multiplier": "0.00", "company_contribution": "100.00", "contribute_as_percentage": false, "employee_uuid": "8f9f3f68-8fd3-499d-ade7-4a052e56494e", "company_benefit_uuid": "54e37c27-43e6-4ae5-a5b2-e29895a133be", "uuid": "e91ca856-a915-4339-9b18-29f9cd66b031"}]
  put-v1-company_benefits-company_benefit_id-employee_benefits:
    Example:
      parameters:
        path:
          company_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"employee_benefits": [{"version": "09j3d29jqdpj92109j9j2d90dq", "active": true, "employee_deduction": "250.00", "deduct_as_percentage": false, "elective": false, "catch_up": false, "deduction_reduces_taxable_income": "unset", "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false, "employee_uuid": "8f9f3f68-8fd3-499d-ade7-4a052e56494e"}]}
      responses:
        "200":
          application/json: [{"version": "09j3d29jqdpj92109j9j2d90dq", "active": true, "employee_deduction": "100.00", "deduct_as_percentage": false, "employee_deduction_annual_maximum": "200.00", "elective": false, "company_contribution_annual_maximum": "200.00", "limit_option": null, "catch_up": false, "coverage_amount": null, "deduction_reduces_taxable_income": null, "coverage_salary_multiplier": "0.00", "company_contribution": "100.00", "contribute_as_percentage": false, "employee_uuid": "8f9f3f68-8fd3-499d-ade7-4a052e56494e", "company_benefit_uuid": "54e37c27-43e6-4ae5-a5b2-e29895a133be", "uuid": "e91ca856-a915-4339-9b18-29f9cd66b031"}]
    Basic:
      parameters:
        path:
          company_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"employee_benefits": [{"active": true, "employee_deduction": "0.00", "deduct_as_percentage": false, "elective": false, "catch_up": false, "deduction_reduces_taxable_income": "unset", "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false, "employee_uuid": "<id>"}, {"active": true, "employee_deduction": "0.00", "deduct_as_percentage": false, "elective": false, "catch_up": false, "deduction_reduces_taxable_income": "unset", "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false, "employee_uuid": "<id>"}]}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"employee_benefits": [{"active": true, "employee_deduction": "0.00", "deduct_as_percentage": false, "elective": false, "catch_up": false, "deduction_reduces_taxable_income": "unset", "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false, "employee_uuid": "<id>"}, {"active": true, "employee_deduction": "0.00", "deduct_as_percentage": false, "elective": false, "catch_up": false, "deduction_reduces_taxable_income": "unset", "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false, "employee_uuid": "<id>"}]}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"employee_benefits": [{"active": true, "employee_deduction": "0.00", "deduct_as_percentage": false, "elective": false, "catch_up": false, "deduction_reduces_taxable_income": "unset", "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false, "employee_uuid": "<id>"}, {"active": true, "employee_deduction": "0.00", "deduct_as_percentage": false, "elective": false, "catch_up": false, "deduction_reduces_taxable_income": "unset", "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false, "employee_uuid": "<id>"}]}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}, "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}, "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-benefits-benefits_id-requirements:
    Example:
      parameters:
        path:
          benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"employee_deduction": {"required": true, "editable": true, "default_value": {}, "choices": ["<value 1>", "<value 2>"]}, "contribution": {"required": true, "editable": true, "default_value": {"value": "2", "type": "percentage"}, "choices": ["percentage"]}, "deduct_as_percentage": {"required": true, "editable": true, "default_value": {}, "choices": ["<value 1>", "<value 2>"]}, "catch_up": {"required": true, "editable": true, "default_value": {}, "choices": ["<value 1>", "<value 2>"]}, "limit_option": {"required": false, "editable": false, "default_value": {}, "choices": ["<value 1>"]}, "company_contribution_annual_maximum": {"required": false, "editable": false, "default_value": {}, "choices": ["<value 1>"]}, "coverage_salary_multiplier": {"required": false, "editable": false, "default_value": {}, "choices": ["<value 1>", "<value 2>"]}, "coverage_amount": {"required": false, "editable": false, "default_value": {}, "choices": ["<value 1>", "<value 2>"]}}
  post-v1-employees-employee_id-employee_benefits:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"company_benefit_uuid": "f68abb42-431e-4392-bc3f-2795627e00f3", "active": true, "employee_deduction": "100.00", "deduct_as_percentage": false, "contribution": {"type": "amount", "value": "100.00"}, "elective": false, "catch_up": false, "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false}
      responses:
        "201":
          application/json: {"version": "09j3d29jqdpj92109j9j2d90dq", "active": true, "employee_deduction": "100.00", "deduct_as_percentage": false, "employee_deduction_annual_maximum": "200.00", "contribution": {"type": "amount", "value": "100.00"}, "elective": false, "company_contribution_annual_maximum": "200.00", "limit_option": null, "catch_up": false, "coverage_amount": null, "deduction_reduces_taxable_income": null, "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false, "employee_uuid": "908123091820398", "company_benefit_uuid": "54e37c27-43e6-4ae5-a5b2-e29895a133be", "uuid": "e91ca856-a915-4339-9b18-29f9cd66b031"}
    Tiered example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"company_benefit_uuid": "<id>", "active": true, "employee_deduction": "0.00", "deduct_as_percentage": false, "elective": false, "catch_up": false, "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false}
      responses:
        "201":
          application/json: {"version": "string", "active": true, "employee_deduction": "0.00", "deduct_as_percentage": false, "employee_deduction_annual_maximum": "string", "contribution": {"type": "tiered", "value": {"tiers": [{"rate": "5.0", "threshold": "2.0", "threshold_delta": "2.0"}, {"rate": "3.0", "threshold": "5.0", "threshold_delta": "3.0"}]}}, "elective": false, "company_contribution_annual_maximum": "string", "limit_option": "string", "catch_up": false, "coverage_amount": "string", "deduction_reduces_taxable_income": "unset", "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false, "employee_uuid": "8f9f3f68-8fd3-499d-ade7-4a052e56494e", "company_benefit_uuid": "54e37c27-43e6-4ae5-a5b2-e29895a133be", "uuid": "e91ca856-a915-4339-9b18-29f9cd66b031"}
    Basic:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"company_benefit_uuid": "<id>", "active": true, "employee_deduction": "0.00", "deduct_as_percentage": false, "elective": false, "catch_up": false, "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"company_benefit_uuid": "<id>", "active": true, "employee_deduction": "0.00", "deduct_as_percentage": false, "elective": false, "catch_up": false, "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"company_benefit_uuid": "<id>", "active": true, "employee_deduction": "0.00", "deduct_as_percentage": false, "elective": false, "catch_up": false, "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}, "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}, "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-employees-employee_id-employee_benefits:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"version": "09j3d29jqdpj92109j9j2d90dq", "active": true, "employee_deduction": "100.00", "deduct_as_percentage": false, "employee_deduction_annual_maximum": "200.00", "elective": false, "company_contribution_annual_maximum": "200.00", "limit_option": null, "catch_up": false, "coverage_amount": null, "deduction_reduces_taxable_income": null, "coverage_salary_multiplier": "0.00", "company_contribution": "100.00", "contribute_as_percentage": false, "employee_uuid": "8f9f3f68-8fd3-499d-ade7-4a052e56494e", "company_benefit_uuid": "54e37c27-43e6-4ae5-a5b2-e29895a133be", "uuid": "e91ca856-a915-4339-9b18-29f9cd66b031"}]
  get-v1-employee_benefits-employee_benefit_id:
    Example:
      parameters:
        path:
          employee_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"version": "09j3d29jqdpj92109j9j2d90dq", "active": true, "employee_deduction": "100.00", "deduct_as_percentage": false, "employee_deduction_annual_maximum": "200.00", "contribution": {"type": "amount", "value": "100.00"}, "elective": false, "company_contribution_annual_maximum": "200.00", "limit_option": null, "catch_up": false, "coverage_amount": null, "deduction_reduces_taxable_income": null, "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false, "employee_uuid": "908123091820398", "company_benefit_uuid": "54e37c27-43e6-4ae5-a5b2-e29895a133be", "uuid": "e91ca856-a915-4339-9b18-29f9cd66b031"}
    Tiered example:
      parameters:
        path:
          employee_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"version": "string", "active": true, "employee_deduction": "0.00", "deduct_as_percentage": false, "employee_deduction_annual_maximum": "string", "contribution": {"type": "tiered", "value": {"tiers": [{"rate": "5.0", "threshold": "2.0", "threshold_delta": "2.0"}, {"rate": "3.0", "threshold": "5.0", "threshold_delta": "3.0"}]}}, "elective": false, "company_contribution_annual_maximum": "string", "limit_option": "string", "catch_up": false, "coverage_amount": "string", "deduction_reduces_taxable_income": "unset", "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false, "employee_uuid": "8f9f3f68-8fd3-499d-ade7-4a052e56494e", "company_benefit_uuid": "54e37c27-43e6-4ae5-a5b2-e29895a133be", "uuid": "e91ca856-a915-4339-9b18-29f9cd66b031"}
  put-v1-employee_benefits-employee_benefit_id:
    Example:
      parameters:
        path:
          employee_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "09j3d29jqdpj92109j9j2d90dq", "employee_deduction": "250.00", "elective": false, "catch_up": false, "deduction_reduces_taxable_income": "unset", "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false}
      responses:
        "200":
          application/json: {"version": "09j3d29jqdpj92109j9j2d90dq", "active": true, "employee_deduction": "100.00", "deduct_as_percentage": false, "employee_deduction_annual_maximum": "200.00", "contribution": {"type": "amount", "value": "100.00"}, "elective": false, "company_contribution_annual_maximum": "200.00", "limit_option": null, "catch_up": false, "coverage_amount": null, "deduction_reduces_taxable_income": null, "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false, "employee_uuid": "908123091820398", "company_benefit_uuid": "54e37c27-43e6-4ae5-a5b2-e29895a133be", "uuid": "e91ca856-a915-4339-9b18-29f9cd66b031"}
    Tiered example:
      parameters:
        path:
          employee_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "employee_deduction": "0.00", "elective": false, "catch_up": false, "deduction_reduces_taxable_income": "unset", "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false}
      responses:
        "200":
          application/json: {"version": "string", "active": true, "employee_deduction": "0.00", "deduct_as_percentage": false, "employee_deduction_annual_maximum": "string", "contribution": {"type": "tiered", "value": {"tiers": [{"rate": "5.0", "threshold": "2.0", "threshold_delta": "2.0"}, {"rate": "3.0", "threshold": "5.0", "threshold_delta": "3.0"}]}}, "elective": false, "company_contribution_annual_maximum": "string", "limit_option": "string", "catch_up": false, "coverage_amount": "string", "deduction_reduces_taxable_income": "unset", "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false, "employee_uuid": "8f9f3f68-8fd3-499d-ade7-4a052e56494e", "company_benefit_uuid": "54e37c27-43e6-4ae5-a5b2-e29895a133be", "uuid": "e91ca856-a915-4339-9b18-29f9cd66b031"}
    Basic:
      parameters:
        path:
          employee_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "employee_deduction": "0.00", "elective": false, "catch_up": false, "deduction_reduces_taxable_income": "unset", "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          employee_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "employee_deduction": "0.00", "elective": false, "catch_up": false, "deduction_reduces_taxable_income": "unset", "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "employee_deduction": "0.00", "elective": false, "catch_up": false, "deduction_reduces_taxable_income": "unset", "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}, "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}, "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  delete-v1-employee_benefits-employee_benefit_id:
    speakeasy-default-delete-v1-employee-benefits-employee-benefit-id:
      parameters:
        path:
          employee_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
  get-employee-ytd-benefit-amounts-from-different-company:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        query:
          tax_year: 2024
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "c5fdae57-5483-4529-9aae-f0edceed92d3", "benefit_type": 1, "ytd_employee_deduction_amount": "5000.00", "ytd_company_contribution_amount": "2500.00"}, {"uuid": "1bfdb946-b2be-4909-ac46-9e7f73872d0a", "benefit_type": 5, "ytd_employee_deduction_amount": "2132.00", "ytd_company_contribution_amount": "3345.00"}]
  post-employee-ytd-benefit-amounts-from-different-company:
    Basic:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"tax_year": 1828.56, "ytd_employee_deduction_amount": "0.00", "ytd_company_contribution_amount": "0.00"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"tax_year": 1828.56, "ytd_employee_deduction_amount": "0.00", "ytd_company_contribution_amount": "0.00"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"tax_year": 1828.56, "ytd_employee_deduction_amount": "0.00", "ytd_company_contribution_amount": "0.00"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}, "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}, "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  post-v1-employees-employee_id-garnishments:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"active": true, "amount": "150.00", "description": "Back taxes", "court_ordered": true, "times": null, "recurring": true, "annual_maximum": null, "pay_period_maximum": null, "deduct_as_percentage": false}
      responses:
        "201":
          application/json: {"uuid": "4c7841a2-1363-497e-bc0f-664703c7484f", "version": "52b7c567242cb7452e89ba2bc02cb476", "employee_uuid": "a6b53294-f871-4db2-bbd4-8c3d1fe56440", "active": true, "amount": "8.00", "description": "Company loan to employee", "court_ordered": false, "times": 5, "recurring": false, "annual_maximum": null, "total_amount": null, "pay_period_maximum": "100.00", "deduct_as_percentage": true, "garnishment_type": null, "child_support": null}
    Child-Support-Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"active": true, "amount": "40", "court_ordered": true, "garnishment_type": "child_support", "times": null, "recurring": true, "annual_maximum": null, "pay_period_maximum": "500.00", "deduct_as_percentage": true, "child_support": {"state": "FL", "payment_period": "Monthly", "fips_code": "12011", "case_number": "CS1234"}}
      responses:
        "201":
          application/json: {"uuid": "4c7841a2-1363-497e-bc0f-664703c7481a", "version": "52b7c567242cb7452e89ba2bc02cb383", "employee_uuid": "a6b53294-f871-4db2-bbd4-8c3d1fe56440", "active": true, "amount": "40.00", "description": "Child support - AZ28319", "court_ordered": true, "times": null, "recurring": true, "annual_maximum": null, "total_amount": null, "pay_period_maximum": "400.00", "deduct_as_percentage": true, "garnishment_type": "child_support", "child_support": {"state": "AZ", "payment_period": "Monthly", "fips_code": "04000", "case_number": "AZ28319", "order_number": null, "remittance_number": null}}
    Basic:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"active": true, "amount": "<value>", "court_ordered": false, "times": null, "recurring": false, "annual_maximum": null, "pay_period_maximum": null, "deduct_as_percentage": false}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"active": true, "amount": "<value>", "court_ordered": false, "times": null, "recurring": false, "annual_maximum": null, "pay_period_maximum": null, "deduct_as_percentage": false}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"active": true, "amount": "<value>", "court_ordered": false, "times": null, "recurring": false, "annual_maximum": null, "pay_period_maximum": null, "deduct_as_percentage": false}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}, "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}, "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-employees-employee_id-garnishments:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "4c7841a2-1363-497e-bc0f-664703c7484f", "version": "52b7c567242cb7452e89ba2bc02cb476", "employee_uuid": "a6b53294-f871-4db2-bbd4-8c3d1fe56440", "active": true, "amount": "8.00", "description": "Company loan to employee", "court_ordered": false, "times": 5, "recurring": false, "annual_maximum": null, "total_amount": null, "pay_period_maximum": "100.00", "deduct_as_percentage": true, "garnishment_type": null, "child_support": null}, {"uuid": "4c7841a2-1363-497e-bc0f-664703c7481a", "version": "52b7c567242cb7452e89ba2bc02cb383", "employee_uuid": "a6b53294-f871-4db2-bbd4-8c3d1fe56440", "active": true, "amount": "40.00", "description": "Child support - AZ28319", "court_ordered": true, "times": null, "recurring": true, "annual_maximum": null, "total_amount": null, "pay_period_maximum": "400.00", "deduct_as_percentage": true, "garnishment_type": "child_support", "child_support": {"state": "AZ", "payment_period": "Monthly", "fips_code": "04000", "case_number": "AZ28319", "order_number": null, "remittance_number": null}}]
  get-v1-garnishments-garnishment_id:
    Example:
      parameters:
        path:
          garnishment_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "4c7841a2-1363-497e-bc0f-664703c7484f", "version": "52b7c567242cb7452e89ba2bc02cb476", "employee_uuid": "a6b53294-f871-4db2-bbd4-8c3d1fe56440", "active": true, "amount": "8.00", "description": "Company loan to employee", "court_ordered": false, "times": 5, "recurring": false, "annual_maximum": null, "total_amount": null, "pay_period_maximum": "100.00", "deduct_as_percentage": true, "garnishment_type": null, "child_support": null}
    Child-Support-Example:
      parameters:
        path:
          garnishment_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "4c7841a2-1363-497e-bc0f-664703c7481a", "version": "52b7c567242cb7452e89ba2bc02cb383", "employee_uuid": "a6b53294-f871-4db2-bbd4-8c3d1fe56440", "active": true, "amount": "40.00", "description": "Child support - AZ28319", "court_ordered": true, "times": null, "recurring": true, "annual_maximum": null, "total_amount": null, "pay_period_maximum": "400.00", "deduct_as_percentage": true, "garnishment_type": "child_support", "child_support": {"state": "AZ", "payment_period": "Monthly", "fips_code": "04000", "case_number": "AZ28319", "order_number": null, "remittance_number": null}}
  put-v1-garnishments-garnishment_id:
    Example:
      parameters:
        path:
          garnishment_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"active": false, "times": null, "recurring": false, "annual_maximum": null, "pay_period_maximum": null, "deduct_as_percentage": false, "version": "52b7c567242cb7452e89ba2bc02cb476"}
      responses:
        "200":
          application/json: {"uuid": "4c7841a2-1363-497e-bc0f-664703c7484f", "version": "52b7c567242cb7452e89ba2bc02cb476", "employee_uuid": "a6b53294-f871-4db2-bbd4-8c3d1fe56440", "active": true, "amount": "8.00", "description": "Company loan to employee", "court_ordered": false, "times": 5, "recurring": false, "annual_maximum": null, "total_amount": null, "pay_period_maximum": "100.00", "deduct_as_percentage": true, "garnishment_type": null, "child_support": null}
    Child-Support-Example:
      parameters:
        path:
          garnishment_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"active": true, "times": null, "recurring": false, "annual_maximum": null, "pay_period_maximum": null, "deduct_as_percentage": false, "version": "<value>"}
      responses:
        "200":
          application/json: {"uuid": "4c7841a2-1363-497e-bc0f-664703c7481a", "version": "52b7c567242cb7452e89ba2bc02cb383", "employee_uuid": "a6b53294-f871-4db2-bbd4-8c3d1fe56440", "active": true, "amount": "40.00", "description": "Child support - AZ28319", "court_ordered": true, "times": null, "recurring": true, "annual_maximum": null, "total_amount": null, "pay_period_maximum": "400.00", "deduct_as_percentage": true, "garnishment_type": "child_support", "child_support": {"state": "AZ", "payment_period": "Monthly", "fips_code": "04000", "case_number": "AZ28319", "order_number": null, "remittance_number": null}}
    Basic:
      parameters:
        path:
          garnishment_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"active": true, "times": null, "recurring": false, "annual_maximum": null, "pay_period_maximum": null, "deduct_as_percentage": false, "version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          garnishment_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"active": true, "times": null, "recurring": false, "annual_maximum": null, "pay_period_maximum": null, "deduct_as_percentage": false, "version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          garnishment_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"active": true, "times": null, "recurring": false, "annual_maximum": null, "pay_period_maximum": null, "deduct_as_percentage": false, "version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}, "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}, "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-garnishments-child_support:
    Example:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"agencies": [{"state": "AK", "name": "Alaska Child Support Services Division", "manual_payment_required": false, "fips_codes": [{"code": "0200000", "county": null}], "required_attributes": [{"key": "case_number", "label": "CSE Case Number"}]}, {"state": "OH", "name": "Ohio Office of Child Support Enforcement", "manual_payment_required": false, "fips_codes": [{"code": "39000", "county": null}], "required_attributes": [{"key": "case_number", "label": "CSE Case Number"}, {"key": "order_number", "label": "Order Identifier"}]}]}
  get-events:
    Example:
      parameters:
        query:
          sort_order: "asc"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "f7397a24-57ad-4fae-b011-d258e8232900", "event_type": "employee.bank_account.created", "resource_type": "Company", "resource_uuid": "92a20431-9489-4bde-ad27-6feb20b969d5", "entity_type": "BankAccount", "entity_uuid": "92a20431-9489-4bde-ad27-6feb20b969d5", "timestamp": 1686784995}]
  get-companies-company_uuid-time_tracking-time_sheets:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "123e4567-e89b-12d3-a456-426655440000", "status": "approved", "company_uuid": "123e4567-e89b-12d3-a456-426655440000", "time_zone": "America/Los_Angeles", "entity_type": "Employee", "entity_uuid": "123e4567-e89b-12d3-a456-426655440000", "version": "72deb67e16f7b92713c00d3582fa6c68", "job_uuid": "123e4567-e89b-12d3-a456-426655440000", "shift_started_at": "2025-03-04T13:07:10Z", "shift_ended_at": "2025-03-04T16:07:10Z", "created_at": "2025-04-29T16:08:53Z", "updated_at": "2025-04-29T16:08:53Z", "metadata": {}, "entries": [{"uuid": "123e4567-e89b-12d3-a456-426655440000", "hours_worked": "1.000", "pay_classification": "Regular"}, {"uuid": "123e4567-e89b-12d3-a456-426655440000", "hours_worked": "1.000", "pay_classification": "Overtime"}, {"uuid": "123e4567-e89b-12d3-a456-426655440000", "hours_worked": "1.000", "pay_classification": "Double overtime"}]}]
  post-companies-company_uuid-time_tracking-time_sheets:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"entity_uuid": "123e4567-e89b-12d3-a456-426614174000", "entity_type": "Employee", "job_uuid": "123e4567-e89b-12d3-a456-426614174000", "time_zone": "America/New_York", "shift_started_at": "2024-06-10T09:00:00Z", "shift_ended_at": "2024-06-10T17:00:00Z", "metadata": {"custom_field": "custom value"}, "entries": [{"hours_worked": 1.5, "pay_classification": "Regular"}]}
      responses:
        "201":
          application/json: {}
        "422":
          application/json: {"errors": [{"error_key": "<value>", "category": "<value>"}]}
    example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "201":
          application/json: {"uuid": "123e4567-e89b-12d3-a456-426655440000", "status": "approved", "company_uuid": "123e4567-e89b-12d3-a456-426655440000", "time_zone": "America/Los_Angeles", "entity_type": "Employee", "entity_uuid": "123e4567-e89b-12d3-a456-426655440000", "version": "72deb67e16f7b92713c00d3582fa6c68", "job_uuid": "123e4567-e89b-12d3-a456-426655440000", "shift_started_at": "2025-03-04T13:07:10Z", "shift_ended_at": "2025-03-04T16:07:10Z", "created_at": "2025-04-29T16:08:53Z", "updated_at": "2025-04-29T16:08:53Z", "metadata": {}, "entries": [{"uuid": "123e4567-e89b-12d3-a456-426655440000", "hours_worked": "1.000", "pay_classification": "Regular"}, {"uuid": "123e4567-e89b-12d3-a456-426655440000", "hours_worked": "1.000", "pay_classification": "Overtime"}, {"uuid": "123e4567-e89b-12d3-a456-426655440000", "hours_worked": "1.000", "pay_classification": "Double overtime"}]}
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}, "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}, "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-time_tracking-time_sheets-time_sheet_uuid:
    example:
      parameters:
        path:
          time_sheet_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "123e4567-e89b-12d3-a456-426655440000", "status": "approved", "company_uuid": "123e4567-e89b-12d3-a456-426655440000", "time_zone": "America/Los_Angeles", "entity_type": "Employee", "entity_uuid": "123e4567-e89b-12d3-a456-426655440000", "version": "72deb67e16f7b92713c00d3582fa6c68", "job_uuid": "123e4567-e89b-12d3-a456-426655440000", "shift_started_at": "2025-03-04T13:07:10Z", "shift_ended_at": "2025-03-04T16:07:10Z", "created_at": "2025-04-29T16:08:53Z", "updated_at": "2025-04-29T16:08:53Z", "metadata": {}, "entries": [{"uuid": "123e4567-e89b-12d3-a456-426655440000", "hours_worked": "1.000", "pay_classification": "Regular"}, {"uuid": "123e4567-e89b-12d3-a456-426655440000", "hours_worked": "1.000", "pay_classification": "Overtime"}, {"uuid": "123e4567-e89b-12d3-a456-426655440000", "hours_worked": "1.000", "pay_classification": "Double overtime"}]}
  put-time_tracking-time_sheets-time_sheet_uuid:
    Example:
      parameters:
        path:
          time_sheet_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "72deb67e16f7b92713c00d3582fa6c68", "entity_uuid": "123e4567-e89b-12d3-a456-426614174000", "entity_type": "Employee", "job_uuid": "123e4567-e89b-12d3-a456-426614174000", "time_zone": "America/New_York", "shift_started_at": "2024-06-10T09:00:00Z", "shift_ended_at": "2024-06-10T17:00:00Z", "metadata": {"custom_field": "custom value"}, "entries": [{"uuid": "123e4567-e89b-12d3-a456-426614174000", "hours_worked": 1.5}]}
      responses:
        "200":
          application/json: {}
        "422":
          application/json: {"errors": []}
    example:
      parameters:
        path:
          time_sheet_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "123e4567-e89b-12d3-a456-426655440000", "status": "approved", "company_uuid": "123e4567-e89b-12d3-a456-426655440000", "time_zone": "America/Los_Angeles", "entity_type": "Employee", "entity_uuid": "123e4567-e89b-12d3-a456-426655440000", "version": "72deb67e16f7b92713c00d3582fa6c68", "job_uuid": "123e4567-e89b-12d3-a456-426655440000", "shift_started_at": "2025-03-04T13:07:10Z", "shift_ended_at": "2025-03-04T16:07:10Z", "created_at": "2025-04-29T16:08:53Z", "updated_at": "2025-04-29T16:08:53Z", "metadata": {}, "entries": [{"uuid": "123e4567-e89b-12d3-a456-426655440000", "hours_worked": "1.000", "pay_classification": "Regular"}, {"uuid": "123e4567-e89b-12d3-a456-426655440000", "hours_worked": "1.000", "pay_classification": "Overtime"}, {"uuid": "123e4567-e89b-12d3-a456-426655440000", "hours_worked": "1.000", "pay_classification": "Double overtime"}]}
    Basic:
      parameters:
        path:
          time_sheet_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          time_sheet_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          time_sheet_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}, "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}, "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  delete-time_tracking-time_sheets-time_sheet_uuid:
    Basic:
      parameters:
        path:
          time_sheet_uuid: "<id>"
        query:
          version: "<value>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          time_sheet_uuid: "<id>"
        query:
          version: "<value>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          time_sheet_uuid: "<id>"
        query:
          version: "<value>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}, "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}, "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
examplesVersion: 1.0.2
generatedTests: {}
