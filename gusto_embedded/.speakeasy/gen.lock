lockVersion: 2.0.0
id: f70034eb-4870-4b8d-aeb4-4c71b6c1ec45
management:
  docChecksum: e02a9906cb4ee08ddb1243989526f60a
  docVersion: "2024-04-01"
  speakeasyVersion: 1.509.1
  generationVersion: 2.539.1
  releaseVersion: 0.1.2
  configChecksum: 546c50569a63df487b012e8958ba8df9
  repoURL: https://github.com/Gusto/gusto-python-client.git
  repoSubDirectory: gusto_embedded
  installationURL: https://github.com/Gusto/gusto-python-client.git#subdirectory=gusto_embedded
  published: true
features:
  python:
    additionalDependencies: 1.0.0
    constsAndDefaults: 1.0.5
    core: 5.12.2
    defaultEnabledRetries: 0.2.0
    deprecations: 3.0.2
    devContainers: 3.0.0
    enumUnions: 0.1.0
    envVarSecurityUsage: 0.3.2
    errorUnions: 1.0.2
    flatRequests: 1.0.1
    flattening: 3.1.1
    getRequestBodies: 3.0.0
    globalSecurity: 3.0.3
    globalSecurityCallbacks: 1.0.0
    globalSecurityFlattening: 1.0.0
    globalServerURLs: 3.1.0
    groups: 3.0.0
    inputOutputModels: 3.0.0
    methodArguments: 1.0.2
    methodSecurity: 3.0.1
    multipartFileContentType: 1.0.0
    nameOverrides: 3.0.1
    nullables: 1.0.1
    responseFormat: 1.0.1
    retries: 3.0.2
    sdkHooks: 1.0.1
    serverIDs: 3.0.0
    unions: 3.0.4
    uploadStreams: 1.0.0
generatedFiles:
  - .devcontainer/README.md
  - .devcontainer/devcontainer.json
  - .devcontainer/setup.sh
  - .gitattributes
  - .python-version
  - .vscode/settings.json
  - USAGE.md
  - docs/models/accounttype.md
  - docs/models/accrualmethod.md
  - docs/models/accruingtimeoffhour.md
  - docs/models/achtransaction.md
  - docs/models/achtransactionrecipienttype.md
  - docs/models/activecompanies.md
  - docs/models/address.md
  - docs/models/admin.md
  - docs/models/agencies.md
  - docs/models/answers.md
  - docs/models/applicablebenefits.md
  - docs/models/applicableearnings.md
  - docs/models/applicableif.md
  - docs/models/applicabletaxes.md
  - docs/models/authentication.md
  - docs/models/authorizationstatus.md
  - docs/models/base.md
  - docs/models/benefits.md
  - docs/models/benefitsummary.md
  - docs/models/benefitsummaryemployees.md
  - docs/models/benefitsummarypayperiod.md
  - docs/models/benefittyperequirements.md
  - docs/models/benefittyperequirementscatchupdefaultvalue.md
  - docs/models/benefittyperequirementscompanycontributionannualmaximumdefaultvalue.md
  - docs/models/benefittyperequirementscontribution.md
  - docs/models/benefittyperequirementscoverageamountdefaultvalue.md
  - docs/models/benefittyperequirementscoveragesalarymultiplierdefaultvalue.md
  - docs/models/benefittyperequirementsdeductaspercentagedefaultvalue.md
  - docs/models/benefittyperequirementsdefaultvalue.md
  - docs/models/benefittyperequirementslimitoptiondefaultvalue.md
  - docs/models/catchup.md
  - docs/models/category.md
  - docs/models/checkdate.md
  - docs/models/childsupportdata.md
  - docs/models/christmasday.md
  - docs/models/columbusday.md
  - docs/models/columns.md
  - docs/models/company.md
  - docs/models/companyaddress.md
  - docs/models/companyattachment.md
  - docs/models/companybankaccount.md
  - docs/models/companybenefit.md
  - docs/models/companybenefitwithemployeebenefits.md
  - docs/models/companybenefitwithemployeebenefitscontribution.md
  - docs/models/companybenefitwithemployeebenefitsvalue.md
  - docs/models/companybenefitwithemployeebenefitsvalue2.md
  - docs/models/companybenefitwithemployeebenefitsvaluetiers.md
  - docs/models/companycontributionannualmaximum.md
  - docs/models/companycustomfield.md
  - docs/models/companycustomfieldlist.md
  - docs/models/companyhomeaddress.md
  - docs/models/companyonboardingstatus.md
  - docs/models/companypaidtimeoff.md
  - docs/models/companystatus.md
  - docs/models/compensation.md
  - docs/models/compensations.md
  - docs/models/contractor.md
  - docs/models/contractoraddress.md
  - docs/models/contractorbankaccount.md
  - docs/models/contractorbankaccountaccounttype.md
  - docs/models/contractoronboardingstatus.md
  - docs/models/contractoronboardingstatus1.md
  - docs/models/contractoronboardingstatusonboardingstatus.md
  - docs/models/contractoronboardingstatusonboardingstep.md
  - docs/models/contractorpayment.md
  - docs/models/contractorpaymentforgroup.md
  - docs/models/contractorpaymentforgrouppaymentmethod.md
  - docs/models/contractorpaymentforgroupstatus.md
  - docs/models/contractorpaymentforgroupwagetype.md
  - docs/models/contractorpaymentgroup.md
  - docs/models/contractorpaymentgroupminimal.md
  - docs/models/contractorpaymentgroupminimalstatus.md
  - docs/models/contractorpaymentgroupminimaltotals.md
  - docs/models/contractorpaymentgroupstatus.md
  - docs/models/contractorpaymentgrouptotals.md
  - docs/models/contractorpaymentmethod.md
  - docs/models/contractorpaymentmethod1.md
  - docs/models/contractorpaymentmethodsplitby.md
  - docs/models/contractorpaymentmethodtype.md
  - docs/models/contractorpaymentpaymentmethod.md
  - docs/models/contractorpaymentreceipt.md
  - docs/models/contractorpaymentreceiptlicensee.md
  - docs/models/contractorpaymentreceipttotals.md
  - docs/models/contractorpaymentsmodel.md
  - docs/models/contractorpaymentstatus.md
  - docs/models/contractorpaymentsummary.md
  - docs/models/contractorpaymentsummarybydates.md
  - docs/models/contractorpaymentsummarybydatescontractorpayments.md
  - docs/models/contractorpaymentsummarybydatestotal.md
  - docs/models/contractorpaymentsummarycontractorpayments.md
  - docs/models/contractorpaymentwagetype.md
  - docs/models/contractorsmodel.md
  - docs/models/contractortype.md
  - docs/models/contribution.md
  - docs/models/coverageamount.md
  - docs/models/coveragesalarymultiplier.md
  - docs/models/createreport.md
  - docs/models/currentemploymentstatus.md
  - docs/models/customfieldtype.md
  - docs/models/deductaspercentage.md
  - docs/models/deductionreducestaxableincome.md
  - docs/models/deductions.md
  - docs/models/defaultvalue.md
  - docs/models/deletecompaniescompanyuuidholidaypaypolicyrequest.md
  - docs/models/deletedepartmentrequest.md
  - docs/models/deletev1companiescompanyidcontractorpaymentcontractorpaymentrequest.md
  - docs/models/deletev1companiescompanyidearningtypesearningtypeuuidrequest.md
  - docs/models/deletev1companiescompanyidpayrollsrequest.md
  - docs/models/deletev1companiescompanyuuidsignatoriessignatoryuuidrequest.md
  - docs/models/deletev1companybenefitscompanybenefitiderrors.md
  - docs/models/deletev1companybenefitscompanybenefitidrequest.md
  - docs/models/deletev1companybenefitscompanybenefitidresponsebody.md
  - docs/models/deletev1compensationscompensationidrequest.md
  - docs/models/deletev1contractorpaymentgroupscontractorpaymentgroupidrequest.md
  - docs/models/deletev1contractorscontractoruuidrequest.md
  - docs/models/deletev1employeebenefitsemployeebenefitidrequest.md
  - docs/models/deletev1employeerequest.md
  - docs/models/deletev1employeesemployeeidbankaccountsbankaccountidrequest.md
  - docs/models/deletev1employeesemployeeidi9authorizationdocumentsdocumentidrequest.md
  - docs/models/deletev1employeesemployeeidrehirerequest.md
  - docs/models/deletev1employeesemployeeidterminationsrequest.md
  - docs/models/deletev1externalpayrollrequest.md
  - docs/models/deletev1homeaddresseshomeaddressuuidrequest.md
  - docs/models/deletev1jobsjobidrequest.md
  - docs/models/deletev1webhooksubscriptionuuidrequest.md
  - docs/models/deletev1webhooksubscriptionuuidsecurity.md
  - docs/models/deletev1workaddressesworkaddressuuidrequest.md
  - docs/models/department.md
  - docs/models/departmentemployees.md
  - docs/models/departmentsmodel.md
  - docs/models/document.md
  - docs/models/documentpdf.md
  - docs/models/documents.md
  - docs/models/documentsigned.md
  - docs/models/documentsignedrecipienttype.md
  - docs/models/documenttype.md
  - docs/models/earnings.md
  - docs/models/earningtype.md
  - docs/models/earningtypelist.md
  - docs/models/employee.md
  - docs/models/employeeaddress.md
  - docs/models/employeebankaccount.md
  - docs/models/employeebankaccountaccounttype.md
  - docs/models/employeebenefit.md
  - docs/models/employeebenefitforcompanybenefit.md
  - docs/models/employeebenefitforcompanybenefitcontribution.md
  - docs/models/employeebenefitforcompanybenefitdeductionreducestaxableincome.md
  - docs/models/employeebenefitforcompanybenefitvalue.md
  - docs/models/employeebenefitsmodel.md
  - docs/models/employeebenefitvalue.md
  - docs/models/employeechecknumbermapping.md
  - docs/models/employeecompensations.md
  - docs/models/employeecustomfield.md
  - docs/models/employeededuction.md
  - docs/models/employeefederaltax.md
  - docs/models/employeeonboardingdocument.md
  - docs/models/employeeonboardingstatus.md
  - docs/models/employeeonboardingstatusonboardingstep.md
  - docs/models/employeepaymentmethod.md
  - docs/models/employeepaymentmethodtype.md
  - docs/models/employeepaystub.md
  - docs/models/employeesmodel.md
  - docs/models/employeestatetax.md
  - docs/models/employeestatetaxanswer.md
  - docs/models/employeestatetaxes.md
  - docs/models/employeestatetaxinputquestionformat.md
  - docs/models/employeestatetaxinputquestionformatvalue.md
  - docs/models/employeestatetaxquestion.md
  - docs/models/employeeworkaddress.md
  - docs/models/employmenthistorylist.md
  - docs/models/employmenthistorylistemploymentstatus.md
  - docs/models/employmentstatus.md
  - docs/models/employmenttype.md
  - docs/models/entityerrorobject.md
  - docs/models/entityerrorobjectmetadata.md
  - docs/models/entitytype.md
  - docs/models/errors.md
  - docs/models/event.md
  - docs/models/externalpayroll.md
  - docs/models/externalpayrollbasic.md
  - docs/models/externalpayrollbasicstatus.md
  - docs/models/externalpayrollbenefits.md
  - docs/models/externalpayrollitems.md
  - docs/models/externalpayrollmetadata.md
  - docs/models/externalpayrolltaxes.md
  - docs/models/externalpayrolltaxsuggestions.md
  - docs/models/fastpaymentlimitrequiredbody.md
  - docs/models/federalholidays.md
  - docs/models/federaltaxdetails.md
  - docs/models/fields.md
  - docs/models/filetype.md
  - docs/models/filingform.md
  - docs/models/fipscodes.md
  - docs/models/fixed.md
  - docs/models/fixedcompensations.md
  - docs/models/flow.md
  - docs/models/flsastatustype.md
  - docs/models/form.md
  - docs/models/form1099.md
  - docs/models/formpdf.md
  - docs/models/frequency.md
  - docs/models/fundingtype.md
  - docs/models/garnishment.md
  - docs/models/garnishmentchildsupport.md
  - docs/models/garnishmentchildsupportinput.md
  - docs/models/garnishmenttype.md
  - docs/models/generateddocument.md
  - docs/models/generateddocumentstatus.md
  - docs/models/getachtransactionsrequest.md
  - docs/models/getcompaniescompanyuuidcontractorpaymentspreviewbase.md
  - docs/models/getcompaniescompanyuuidcontractorpaymentspreviewcontractorpayments.md
  - docs/models/getcompaniescompanyuuidcontractorpaymentspreviewcontractorpaymentsresponsebody.md
  - docs/models/getcompaniescompanyuuidcontractorpaymentspreviewerrors.md
  - docs/models/getcompaniescompanyuuidcontractorpaymentspreviewrequest.md
  - docs/models/getcompaniescompanyuuidcontractorpaymentspreviewrequestbody.md
  - docs/models/getcompaniescompanyuuidcontractorpaymentspreviewresponsebody.md
  - docs/models/getcompaniescompanyuuidholidaypaypolicyrequest.md
  - docs/models/getcompaniescompanyuuidpaidholidaysrequest.md
  - docs/models/getcompaniescompanyuuidpaidholidaysrequestbody.md
  - docs/models/getcompaniescompanyuuidreporttemplatesreporttyperequest.md
  - docs/models/getcompaniescompanyuuidtimeoffpoliciesrequest.md
  - docs/models/getcompaniescompanyuuidwireinrequestuuidrequest.md
  - docs/models/getcompaniesdepartmentsrequest.md
  - docs/models/getdepartmentrequest.md
  - docs/models/getemployeeytdbenefitamountsfromdifferentcompanyrequest.md
  - docs/models/geteventsrequest.md
  - docs/models/geteventssecurity.md
  - docs/models/getinvoicesinvoiceperiodrequest.md
  - docs/models/getinvoicesinvoiceperiodsecurity.md
  - docs/models/getnotificationsnotificationuuidrequest.md
  - docs/models/getrecoverycasesrequest.md
  - docs/models/getreportsreportuuidrequest.md
  - docs/models/gettimeoffpoliciestimeoffpolicyuuidrequest.md
  - docs/models/getv1benefitsbenefitidrequest.md
  - docs/models/getv1benefitsbenefitsidrequirementsrequest.md
  - docs/models/getv1benefitscompanybenefitidsummaryrequest.md
  - docs/models/getv1benefitsrequest.md
  - docs/models/getv1companiesattachmentrequest.md
  - docs/models/getv1companiesattachmentsrequest.md
  - docs/models/getv1companiesattachmenturlrequest.md
  - docs/models/getv1companiesattachmenturlresponsebody.md
  - docs/models/getv1companiescompanyidadminsrequest.md
  - docs/models/getv1companiescompanyidbankaccountsrequest.md
  - docs/models/getv1companiescompanyidcompanybenefitsrequest.md
  - docs/models/getv1companiescompanyidcontractorpaymentcontractorpaymentrequest.md
  - docs/models/getv1companiescompanyidcontractorpaymentgroupsrequest.md
  - docs/models/getv1companiescompanyidcontractorpaymentsrequest.md
  - docs/models/getv1companiescompanyidcontractorpaymentsresponsebody.md
  - docs/models/getv1companiescompanyidcustomfieldsrequest.md
  - docs/models/getv1companiescompanyidearningtypesrequest.md
  - docs/models/getv1companiescompanyidemployeesrequest.md
  - docs/models/getv1companiescompanyidfederaltaxdetailsrequest.md
  - docs/models/getv1companiescompanyidlocationsrequest.md
  - docs/models/getv1companiescompanyidpayperiodsrequest.md
  - docs/models/getv1companiescompanyidpayrollreversalsrequest.md
  - docs/models/getv1companiescompanyidpayrollspayrollidqueryparaminclude.md
  - docs/models/getv1companiescompanyidpayrollspayrollidrequest.md
  - docs/models/getv1companiescompanyidpayrollsqueryparaminclude.md
  - docs/models/getv1companiescompanyidpayrollsrequest.md
  - docs/models/getv1companiescompanyidpayschedulesassignmentsrequest.md
  - docs/models/getv1companiescompanyidpayschedulespayscheduleidrequest.md
  - docs/models/getv1companiescompanyidpayschedulespreviewrequest.md
  - docs/models/getv1companiescompanyidpayschedulespreviewresponsebody.md
  - docs/models/getv1companiescompanyidpayschedulesrequest.md
  - docs/models/getv1companiescompanyidunprocessedterminationpayperiodsrequest.md
  - docs/models/getv1companiescompanyuuidcontractorsrequest.md
  - docs/models/getv1companiescompanyuuidsignatoriesrequest.md
  - docs/models/getv1companiescompanyuuidtaxrequirementsrequest.md
  - docs/models/getv1companiescompanyuuidtaxrequirementsstaterequest.md
  - docs/models/getv1companiespayrollblockerscompanyuuidrequest.md
  - docs/models/getv1companiesrequest.md
  - docs/models/getv1companybenefitscompanybenefitidemployeebenefitsrequest.md
  - docs/models/getv1companybenefitscompanybenefitidrequest.md
  - docs/models/getv1companyexternalpayrollsrequest.md
  - docs/models/getv1companyfinishonboardingrequest.md
  - docs/models/getv1companyformpdfrequest.md
  - docs/models/getv1companyformrequest.md
  - docs/models/getv1companyformsrequest.md
  - docs/models/getv1companyindustryrequest.md
  - docs/models/getv1companyonboardingstatusrequest.md
  - docs/models/getv1companypaymentconfigsrequest.md
  - docs/models/getv1compensationscompensationidrequest.md
  - docs/models/getv1contractordocumentpdfrequest.md
  - docs/models/getv1contractordocumentrequest.md
  - docs/models/getv1contractordocumentsrequest.md
  - docs/models/getv1contractorformpdfrequest.md
  - docs/models/getv1contractorformrequest.md
  - docs/models/getv1contractorformsrequest.md
  - docs/models/getv1contractorpaymentgroupscontractorpaymentgroupidrequest.md
  - docs/models/getv1contractorpaymentscontractorpaymentuuidfundrequest.md
  - docs/models/getv1contractorpaymentscontractorpaymentuuidreceiptrequest.md
  - docs/models/getv1contractorscontractoruuidaddressrequest.md
  - docs/models/getv1contractorscontractoruuidbankaccountsrequest.md
  - docs/models/getv1contractorscontractoruuidonboardingstatusrequest.md
  - docs/models/getv1contractorscontractoruuidpaymentmethodrequest.md
  - docs/models/getv1contractorscontractoruuidrequest.md
  - docs/models/getv1employeebenefitsemployeebenefitidrequest.md
  - docs/models/getv1employeeformpdfrequest.md
  - docs/models/getv1employeeformrequest.md
  - docs/models/getv1employeeformsrequest.md
  - docs/models/getv1employeesemployeeidbankaccountsrequest.md
  - docs/models/getv1employeesemployeeidcustomfieldsrequest.md
  - docs/models/getv1employeesemployeeidcustomfieldsresponsebody.md
  - docs/models/getv1employeesemployeeidemployeebenefitsrequest.md
  - docs/models/getv1employeesemployeeidemploymenthistoryrequest.md
  - docs/models/getv1employeesemployeeidfederaltaxesrequest.md
  - docs/models/getv1employeesemployeeidgarnishmentsrequest.md
  - docs/models/getv1employeesemployeeidhomeaddressesrequest.md
  - docs/models/getv1employeesemployeeidi9authorizationdocumentoptionsrequest.md
  - docs/models/getv1employeesemployeeidi9authorizationdocumentsrequest.md
  - docs/models/getv1employeesemployeeidi9authorizationrequest.md
  - docs/models/getv1employeesemployeeidjobsqueryparaminclude.md
  - docs/models/getv1employeesemployeeidjobsrequest.md
  - docs/models/getv1employeesemployeeidonboardingstatusrequest.md
  - docs/models/getv1employeesemployeeidpaymentmethodrequest.md
  - docs/models/getv1employeesemployeeidrehirerequest.md
  - docs/models/getv1employeesemployeeidstatetaxesrequest.md
  - docs/models/getv1employeesemployeeidterminationsrequest.md
  - docs/models/getv1employeesemployeeidworkaddressesrequest.md
  - docs/models/getv1employeesemployeeuuidpaystubsrequest.md
  - docs/models/getv1employeesrequest.md
  - docs/models/getv1externalpayrollcalculatetaxesrequest.md
  - docs/models/getv1externalpayrollrequest.md
  - docs/models/getv1garnishmentschildsupportrequest.md
  - docs/models/getv1garnishmentsgarnishmentidrequest.md
  - docs/models/getv1generateddocumentsdocumenttyperequestuuidrequest.md
  - docs/models/getv1homeaddresseshomeaddressuuidrequest.md
  - docs/models/getv1jobsjobidcompensationsqueryparaminclude.md
  - docs/models/getv1jobsjobidcompensationsrequest.md
  - docs/models/getv1jobsjobidqueryparaminclude.md
  - docs/models/getv1jobsjobidrequest.md
  - docs/models/getv1locationslocationidrequest.md
  - docs/models/getv1locationslocationuuidminimumwagesrequest.md
  - docs/models/getv1paymentreceiptspayrollspayrolluuidrequest.md
  - docs/models/getv1payrollspayrolluuidemployeesemployeeuuidpaystubrequest.md
  - docs/models/getv1taxliabilitiesrequest.md
  - docs/models/getv1tokeninforequest.md
  - docs/models/getv1tokeninforesponsebody.md
  - docs/models/getv1tokeninfotype.md
  - docs/models/getv1webhooksubscriptionsrequest.md
  - docs/models/getv1webhooksubscriptionssecurity.md
  - docs/models/getv1webhooksubscriptionuuidrequest.md
  - docs/models/getv1webhooksubscriptionuuidsecurity.md
  - docs/models/getv1webhooksubscriptionverificationtokenuuidrequest.md
  - docs/models/getv1webhooksubscriptionverificationtokenuuidsecurity.md
  - docs/models/getv1workaddressesworkaddressuuidrequest.md
  - docs/models/getversionemployeestimeoffactivitiesrequest.md
  - docs/models/getwireinrequestswireinrequestuuidrequest.md
  - docs/models/grossuppay.md
  - docs/models/groupings.md
  - docs/models/historicalemployeebody.md
  - docs/models/historicalemployeebodyhomeaddress.md
  - docs/models/historicalemployeebodyjob.md
  - docs/models/historicalemployeebodytermination.md
  - docs/models/holidaypaypolicy.md
  - docs/models/holidaypaypolicyemployees.md
  - docs/models/homeaddress.md
  - docs/models/hourly.md
  - docs/models/hourlycompensations.md
  - docs/models/i9authorization.md
  - docs/models/i9authorizationdocument.md
  - docs/models/i9authorizationdocumentoption.md
  - docs/models/i9authorizationdocumenttype.md
  - docs/models/id.md
  - docs/models/identityverificationstatus.md
  - docs/models/include.md
  - docs/models/independenceday.md
  - docs/models/industry.md
  - docs/models/invoicedata.md
  - docs/models/job.md
  - docs/models/juneteenth.md
  - docs/models/key.md
  - docs/models/laborday.md
  - docs/models/liabilityselections.md
  - docs/models/licensee.md
  - docs/models/limitoption.md
  - docs/models/location.md
  - docs/models/memorialday.md
  - docs/models/metadata.md
  - docs/models/migrationstatus.md
  - docs/models/minimumwage.md
  - docs/models/minimumwages.md
  - docs/models/mlkday.md
  - docs/models/name.md
  - docs/models/newyearsday.md
  - docs/models/notification.md
  - docs/models/offcyclereason.md
  - docs/models/offcyclereasontype.md
  - docs/models/onboardingdocumentsconfig.md
  - docs/models/onboardingstatus.md
  - docs/models/onboardingstep.md
  - docs/models/options.md
  - docs/models/ownertype.md
  - docs/models/pages.md
  - docs/models/paidholidays.md
  - docs/models/paidtimeoff.md
  - docs/models/paymentconfigs.md
  - docs/models/paymentdirection.md
  - docs/models/paymenteventtype.md
  - docs/models/paymentmethod.md
  - docs/models/paymentmethodbankaccount.md
  - docs/models/paymentperiod.md
  - docs/models/paymentspeedparam.md
  - docs/models/paymentspeedrequiredbody.md
  - docs/models/paymentstatus.md
  - docs/models/paymentunit.md
  - docs/models/paymentuuid.md
  - docs/models/payperiod.md
  - docs/models/payperiodpayroll.md
  - docs/models/payperiods.md
  - docs/models/payroll.md
  - docs/models/payrollbenefits.md
  - docs/models/payrollblocker.md
  - docs/models/payrollblockerserror.md
  - docs/models/payrollblockerserrorerrors.md
  - docs/models/payrollblockerserrormetadata.md
  - docs/models/payrollcheck.md
  - docs/models/payrollcompanytaxestype.md
  - docs/models/payrollcreditblockerstype.md
  - docs/models/payrollcreditblockerstypemetadata.md
  - docs/models/payrollcreditblockerstypestatus.md
  - docs/models/payrollcreditblockerstypeunblockoptions.md
  - docs/models/payrollemployeecompensationstype.md
  - docs/models/payrollemployeecompensationstypepaidtimeoff.md
  - docs/models/payrollemployeecompensationstypepaymentmethod.md
  - docs/models/payrollfixedcompensationtypestype.md
  - docs/models/payrollminimal.md
  - docs/models/payrollpaymentspeedchangedtype.md
  - docs/models/payrollpayperiodtype.md
  - docs/models/payrollpayrollstatusmetatype.md
  - docs/models/payrollprepared.md
  - docs/models/payrollprocessingrequest.md
  - docs/models/payrollprocessingrequeststatus.md
  - docs/models/payrollreceipt.md
  - docs/models/payrollreceipttaxes.md
  - docs/models/payrollreversal.md
  - docs/models/payrollsubmissionblockerstype.md
  - docs/models/payrollsubmissionblockerstypemetadata.md
  - docs/models/payrollsubmissionblockerstypestatus.md
  - docs/models/payrolltotalstype.md
  - docs/models/payrolltype.md
  - docs/models/payrolltypes.md
  - docs/models/payrollwithholdingpayperiodtype.md
  - docs/models/payschedule.md
  - docs/models/payscheduleassignment.md
  - docs/models/payscheduleassignmentbody.md
  - docs/models/payscheduleassignmentbodytype.md
  - docs/models/payscheduleassignmentdepartment.md
  - docs/models/payscheduleassignmentemployee.md
  - docs/models/payscheduleassignmentemployeechange.md
  - docs/models/payscheduleassignmentpayperiod.md
  - docs/models/payscheduleassignmentpreview.md
  - docs/models/payscheduleassignmentpreviewtype.md
  - docs/models/payscheduleassignmenttransitionpayperiod.md
  - docs/models/payschedulecreateupdate.md
  - docs/models/payschedulefrequency.md
  - docs/models/payschedulefrequencycreateupdate.md
  - docs/models/payscheduletype.md
  - docs/models/plaidstatus.md
  - docs/models/policytype.md
  - docs/models/possibleliabilities.md
  - docs/models/postcompaniescompanyuuidholidaypaypolicycolumbusday.md
  - docs/models/postcompaniescompanyuuidholidaypaypolicyfederalholidays.md
  - docs/models/postcompaniescompanyuuidholidaypaypolicyindependenceday.md
  - docs/models/postcompaniescompanyuuidholidaypaypolicyjuneteenth.md
  - docs/models/postcompaniescompanyuuidholidaypaypolicylaborday.md
  - docs/models/postcompaniescompanyuuidholidaypaypolicymemorialday.md
  - docs/models/postcompaniescompanyuuidholidaypaypolicymlkday.md
  - docs/models/postcompaniescompanyuuidholidaypaypolicynewyearsday.md
  - docs/models/postcompaniescompanyuuidholidaypaypolicypresidentsday.md
  - docs/models/postcompaniescompanyuuidholidaypaypolicyrequest.md
  - docs/models/postcompaniescompanyuuidholidaypaypolicyrequestbody.md
  - docs/models/postcompaniescompanyuuidholidaypaypolicythanksgiving.md
  - docs/models/postcompaniescompanyuuidholidaypaypolicyveteransday.md
  - docs/models/postcompaniescompanyuuidreportsemploymentstatus.md
  - docs/models/postcompaniescompanyuuidreportspaymentmethod.md
  - docs/models/postcompaniescompanyuuidreportsrequest.md
  - docs/models/postcompaniescompanyuuidreportsrequestbody.md
  - docs/models/postcompaniescompanyuuidtimeoffpoliciesaccrualmethod.md
  - docs/models/postcompaniescompanyuuidtimeoffpoliciesrequest.md
  - docs/models/postcompaniescompanyuuidtimeoffpoliciesrequestbody.md
  - docs/models/postcompaniespayrollskipcompanyuuidpayrolltype.md
  - docs/models/postcompaniespayrollskipcompanyuuidrequest.md
  - docs/models/postcompaniespayrollskipcompanyuuidrequestbody.md
  - docs/models/postcompaniespayrollskipcompanyuuidresponsebody.md
  - docs/models/postdepartmentsrequest.md
  - docs/models/postdepartmentsrequestbody.md
  - docs/models/postemployeeytdbenefitamountsfromdifferentcompany.md
  - docs/models/postemployeeytdbenefitamountsfromdifferentcompanyrequest.md
  - docs/models/postpartnermanagedcompaniescompanyuuidaccepttermsofservicerequest.md
  - docs/models/postpartnermanagedcompaniescompanyuuidaccepttermsofservicerequestbody.md
  - docs/models/postpartnermanagedcompaniescompanyuuidaccepttermsofserviceresponsebody.md
  - docs/models/postpartnermanagedcompaniescompanyuuidretrievetermsofservicerequest.md
  - docs/models/postpartnermanagedcompaniescompanyuuidretrievetermsofservicerequestbody.md
  - docs/models/postpartnermanagedcompaniescompanyuuidretrievetermsofserviceresponsebody.md
  - docs/models/postpayrollsgrossuppayrolluuidrequest.md
  - docs/models/postpayrollsgrossuppayrolluuidrequestbody.md
  - docs/models/postpayrollsgrossuppayrolluuidresponsebody.md
  - docs/models/postv1companiesattachmentcategory.md
  - docs/models/postv1companiesattachmentdocument.md
  - docs/models/postv1companiesattachmentrequest.md
  - docs/models/postv1companiesattachmentrequestbody.md
  - docs/models/postv1companiescompanyidadminsrequest.md
  - docs/models/postv1companiescompanyidadminsrequestbody.md
  - docs/models/postv1companiescompanyidbankaccountsaccounttype.md
  - docs/models/postv1companiescompanyidbankaccountsrequest.md
  - docs/models/postv1companiescompanyidbankaccountsrequestbody.md
  - docs/models/postv1companiescompanyidcompanybenefitsrequest.md
  - docs/models/postv1companiescompanyidcompanybenefitsrequestbody.md
  - docs/models/postv1companiescompanyidcontractorpaymentgroupscontractorpayments.md
  - docs/models/postv1companiescompanyidcontractorpaymentgroupspaymentmethod.md
  - docs/models/postv1companiescompanyidcontractorpaymentgroupspreviewcontractorpayments.md
  - docs/models/postv1companiescompanyidcontractorpaymentgroupspreviewpaymentmethod.md
  - docs/models/postv1companiescompanyidcontractorpaymentgroupspreviewrequest.md
  - docs/models/postv1companiescompanyidcontractorpaymentgroupspreviewrequestbody.md
  - docs/models/postv1companiescompanyidcontractorpaymentgroupsrequest.md
  - docs/models/postv1companiescompanyidcontractorpaymentgroupsrequestbody.md
  - docs/models/postv1companiescompanyidcontractorpaymentspaymentmethod.md
  - docs/models/postv1companiescompanyidcontractorpaymentsrequest.md
  - docs/models/postv1companiescompanyidcontractorpaymentsrequestbody.md
  - docs/models/postv1companiescompanyidearningtypesrequest.md
  - docs/models/postv1companiescompanyidearningtypesrequestbody.md
  - docs/models/postv1companiescompanyidlocationsrequest.md
  - docs/models/postv1companiescompanyidlocationsrequestbody.md
  - docs/models/postv1companiescompanyidpayrollsrequest.md
  - docs/models/postv1companiescompanyidpayrollsrequestbody.md
  - docs/models/postv1companiescompanyidpayschedulesassignmentpreviewrequest.md
  - docs/models/postv1companiescompanyidpayschedulesassignrequest.md
  - docs/models/postv1companiescompanyidpayschedulesrequest.md
  - docs/models/postv1companiescompanyidpayschedulesrequestbody.md
  - docs/models/postv1companiescompanyuuidcontractorsrequest.md
  - docs/models/postv1companiescompanyuuidcontractorsrequestbody.md
  - docs/models/postv1companiescompanyuuidcontractorstype.md
  - docs/models/postv1companiescompanyuuidcontractorswagetype.md
  - docs/models/postv1companiescompanyuuidsignatoriesinviterequest.md
  - docs/models/postv1companiescompanyuuidsignatoriesinviterequestbody.md
  - docs/models/postv1companyflowsentitytype.md
  - docs/models/postv1companyflowsrequest.md
  - docs/models/postv1companyflowsrequestbody.md
  - docs/models/postv1companysignatorieshomeaddress.md
  - docs/models/postv1companysignatoriesrequest.md
  - docs/models/postv1companysignatoriesrequestbody.md
  - docs/models/postv1compensationscompensationidminimumwages.md
  - docs/models/postv1compensationscompensationidpaymentunit.md
  - docs/models/postv1compensationscompensationidrequest.md
  - docs/models/postv1compensationscompensationidrequestbody.md
  - docs/models/postv1contractorscontractoruuidbankaccountsaccounttype.md
  - docs/models/postv1contractorscontractoruuidbankaccountsrequest.md
  - docs/models/postv1contractorscontractoruuidbankaccountsrequestbody.md
  - docs/models/postv1employeesemployeeidbankaccountsaccounttype.md
  - docs/models/postv1employeesemployeeidbankaccountsrequest.md
  - docs/models/postv1employeesemployeeidbankaccountsrequestbody.md
  - docs/models/postv1employeesemployeeidemployeebenefitscontribution.md
  - docs/models/postv1employeesemployeeidemployeebenefitsdeductionreducestaxableincome.md
  - docs/models/postv1employeesemployeeidemployeebenefitslimitoption.md
  - docs/models/postv1employeesemployeeidemployeebenefitsrequest.md
  - docs/models/postv1employeesemployeeidemployeebenefitsrequestbody.md
  - docs/models/postv1employeesemployeeidemployeebenefitstype.md
  - docs/models/postv1employeesemployeeidemployeebenefitsvalue.md
  - docs/models/postv1employeesemployeeidemployeebenefitsvalue2.md
  - docs/models/postv1employeesemployeeidgarnishmentsgarnishmenttype.md
  - docs/models/postv1employeesemployeeidgarnishmentsrequest.md
  - docs/models/postv1employeesemployeeidgarnishmentsrequestbody.md
  - docs/models/postv1employeesemployeeidhomeaddressesrequest.md
  - docs/models/postv1employeesemployeeidhomeaddressesrequestbody.md
  - docs/models/postv1employeesemployeeidrehirerequest.md
  - docs/models/postv1employeesemployeeidterminationsrequest.md
  - docs/models/postv1employeesemployeeidterminationsrequestbody.md
  - docs/models/postv1employeesemployeeidworkaddressesrequest.md
  - docs/models/postv1employeesemployeeidworkaddressesrequestbody.md
  - docs/models/postv1employeesrequest.md
  - docs/models/postv1employeesrequestbody.md
  - docs/models/postv1externalpayrollrequest.md
  - docs/models/postv1externalpayrollrequestbody.md
  - docs/models/postv1historicalemployeesrequest.md
  - docs/models/postv1jobsjobidrequest.md
  - docs/models/postv1jobsjobidrequestbody.md
  - docs/models/postv1partnermanagedcompaniescompany.md
  - docs/models/postv1partnermanagedcompaniesrequest.md
  - docs/models/postv1partnermanagedcompaniesrequestbody.md
  - docs/models/postv1partnermanagedcompaniesresponsebody.md
  - docs/models/postv1partnermanagedcompaniessecurity.md
  - docs/models/postv1payrollspayrollidcalculateaccruingtimeoffhoursrequest.md
  - docs/models/postv1payrollspayrollidcalculateaccruingtimeoffhoursrequestbody.md
  - docs/models/postv1payrollspayrolluuidgenerateddocumentsprintablepayrollchecksrequest.md
  - docs/models/postv1payrollspayrolluuidgenerateddocumentsprintablepayrollchecksrequestbody.md
  - docs/models/postv1plaidprocessortokenrequest.md
  - docs/models/postv1plaidprocessortokenrequestbody.md
  - docs/models/postv1plaidprocessortokenresponsebody.md
  - docs/models/postv1sandboxgenerate1099request.md
  - docs/models/postv1sandboxgenerate1099requestbody.md
  - docs/models/postv1sandboxgeneratew2form.md
  - docs/models/postv1sandboxgeneratew2request.md
  - docs/models/postv1sandboxgeneratew2requestbody.md
  - docs/models/postv1webhooksubscriptionrequest.md
  - docs/models/postv1webhooksubscriptionrequestbody.md
  - docs/models/postv1webhooksubscriptionsecurity.md
  - docs/models/postv1webhooksubscriptionsubscriptiontypes.md
  - docs/models/presidentsday.md
  - docs/models/primarypayrolladmin.md
  - docs/models/primarysignatory.md
  - docs/models/printingformat.md
  - docs/models/processingstatuses.md
  - docs/models/putaddpeopletodepartmentcontractors.md
  - docs/models/putaddpeopletodepartmentemployees.md
  - docs/models/putaddpeopletodepartmentrequest.md
  - docs/models/putaddpeopletodepartmentrequestbody.md
  - docs/models/putapiv1companiescompanyidpayrollspayrollidcancelrequest.md
  - docs/models/putcompaniescompanyuuidholidaypaypolicyaddemployees.md
  - docs/models/putcompaniescompanyuuidholidaypaypolicyaddrequest.md
  - docs/models/putcompaniescompanyuuidholidaypaypolicyaddrequestbody.md
  - docs/models/putcompaniescompanyuuidholidaypaypolicychristmasday.md
  - docs/models/putcompaniescompanyuuidholidaypaypolicycolumbusday.md
  - docs/models/putcompaniescompanyuuidholidaypaypolicyfederalholidays.md
  - docs/models/putcompaniescompanyuuidholidaypaypolicyindependenceday.md
  - docs/models/putcompaniescompanyuuidholidaypaypolicyjuneteenth.md
  - docs/models/putcompaniescompanyuuidholidaypaypolicylaborday.md
  - docs/models/putcompaniescompanyuuidholidaypaypolicymemorialday.md
  - docs/models/putcompaniescompanyuuidholidaypaypolicymlkday.md
  - docs/models/putcompaniescompanyuuidholidaypaypolicynewyearsday.md
  - docs/models/putcompaniescompanyuuidholidaypaypolicypresidentsday.md
  - docs/models/putcompaniescompanyuuidholidaypaypolicyremoveemployees.md
  - docs/models/putcompaniescompanyuuidholidaypaypolicyremoverequest.md
  - docs/models/putcompaniescompanyuuidholidaypaypolicyremoverequestbody.md
  - docs/models/putcompaniescompanyuuidholidaypaypolicyrequest.md
  - docs/models/putcompaniescompanyuuidholidaypaypolicyrequestbody.md
  - docs/models/putcompaniescompanyuuidholidaypaypolicythanksgiving.md
  - docs/models/putcompaniescompanyuuidholidaypaypolicyveteransday.md
  - docs/models/putdepartmentsrequest.md
  - docs/models/putdepartmentsrequestbody.md
  - docs/models/putremovepeoplefromdepartmentcontractors.md
  - docs/models/putremovepeoplefromdepartmentemployees.md
  - docs/models/putremovepeoplefromdepartmentrequest.md
  - docs/models/putremovepeoplefromdepartmentrequestbody.md
  - docs/models/puttimeoffpoliciestimeoffpolicyuuidrequest.md
  - docs/models/puttimeoffpoliciestimeoffpolicyuuidrequestbody.md
  - docs/models/putv1companiescompanyidbankaccountsverifyrequest.md
  - docs/models/putv1companiescompanyidbankaccountsverifyrequestbody.md
  - docs/models/putv1companiescompanyidearningtypesearningtypeuuidrequest.md
  - docs/models/putv1companiescompanyidearningtypesearningtypeuuidrequestbody.md
  - docs/models/putv1companiescompanyidfederaltaxdetailsrequest.md
  - docs/models/putv1companiescompanyidfederaltaxdetailsrequestbody.md
  - docs/models/putv1companiescompanyidpayrollsemployeecompensations.md
  - docs/models/putv1companiescompanyidpayrollsfixedcompensations.md
  - docs/models/putv1companiescompanyidpayrollshourlycompensations.md
  - docs/models/putv1companiescompanyidpayrollspaidtimeoff.md
  - docs/models/putv1companiescompanyidpayrollspaymentmethod.md
  - docs/models/putv1companiescompanyidpayrollspayrollidcalculaterequest.md
  - docs/models/putv1companiescompanyidpayrollspayrollidcalculateresponsebody.md
  - docs/models/putv1companiescompanyidpayrollspayrollidpreparerequest.md
  - docs/models/putv1companiescompanyidpayrollspayrollidsubmitrequest.md
  - docs/models/putv1companiescompanyidpayrollspayrollidsubmitrequestbody.md
  - docs/models/putv1companiescompanyidpayrollspayrollidsubmitresponsebody.md
  - docs/models/putv1companiescompanyidpayrollsrequest.md
  - docs/models/putv1companiescompanyidpayrollsrequestbody.md
  - docs/models/putv1companiescompanyidpayschedulespayscheduleidfrequency.md
  - docs/models/putv1companiescompanyidpayschedulespayscheduleidrequest.md
  - docs/models/putv1companiescompanyidpayschedulespayscheduleidrequestbody.md
  - docs/models/putv1companiescompanyuuidsignatoriessignatoryuuidhomeaddress.md
  - docs/models/putv1companiescompanyuuidsignatoriessignatoryuuidrequest.md
  - docs/models/putv1companiescompanyuuidsignatoriessignatoryuuidrequestbody.md
  - docs/models/putv1companiescompanyuuidtaxrequirementsstaterequest.md
  - docs/models/putv1companiescompanyuuidtaxrequirementsstaterequestbody.md
  - docs/models/putv1companiescompanyuuidtaxrequirementsstaterequirements.md
  - docs/models/putv1companiesrequest.md
  - docs/models/putv1companiesrequestbody.md
  - docs/models/putv1companybenefitscompanybenefitidemployeebenefitsrequest.md
  - docs/models/putv1companybenefitscompanybenefitidemployeebenefitsrequestbody.md
  - docs/models/putv1companybenefitscompanybenefitidrequest.md
  - docs/models/putv1companybenefitscompanybenefitidrequestbody.md
  - docs/models/putv1companyformsignrequest.md
  - docs/models/putv1companyformsignrequestbody.md
  - docs/models/putv1companyindustryrequest.md
  - docs/models/putv1companyindustryrequestbody.md
  - docs/models/putv1companypaymentconfigsrequest.md
  - docs/models/putv1companypaymentconfigsrequestbody.md
  - docs/models/putv1compensationscompensationidminimumwages.md
  - docs/models/putv1compensationscompensationidpaymentunit.md
  - docs/models/putv1compensationscompensationidrequest.md
  - docs/models/putv1compensationscompensationidrequestbody.md
  - docs/models/putv1contractordocumentsignfields.md
  - docs/models/putv1contractordocumentsignrequest.md
  - docs/models/putv1contractordocumentsignrequestbody.md
  - docs/models/putv1contractorpaymentgroupscontractorpaymentgroupidfundrequest.md
  - docs/models/putv1contractorscontractoridpaymentmethodrequest.md
  - docs/models/putv1contractorscontractoridpaymentmethodrequestbody.md
  - docs/models/putv1contractorscontractoridpaymentmethodtype.md
  - docs/models/putv1contractorscontractoruuidaddressrequest.md
  - docs/models/putv1contractorscontractoruuidaddressrequestbody.md
  - docs/models/putv1contractorscontractoruuidonboardingstatusonboardingstatus.md
  - docs/models/putv1contractorscontractoruuidonboardingstatusrequest.md
  - docs/models/putv1contractorscontractoruuidonboardingstatusrequestbody.md
  - docs/models/putv1contractorscontractoruuidrequest.md
  - docs/models/putv1contractorscontractoruuidrequestbody.md
  - docs/models/putv1contractorscontractoruuidtype.md
  - docs/models/putv1contractorscontractoruuidwagetype.md
  - docs/models/putv1employeebenefitsemployeebenefitidcontribution.md
  - docs/models/putv1employeebenefitsemployeebenefitiddeductionreducestaxableincome.md
  - docs/models/putv1employeebenefitsemployeebenefitidlimitoption.md
  - docs/models/putv1employeebenefitsemployeebenefitidrequest.md
  - docs/models/putv1employeebenefitsemployeebenefitidrequestbody.md
  - docs/models/putv1employeebenefitsemployeebenefitidtype.md
  - docs/models/putv1employeebenefitsemployeebenefitidvalue.md
  - docs/models/putv1employeebenefitsemployeebenefitidvalue2.md
  - docs/models/putv1employeeformsignrequest.md
  - docs/models/putv1employeeformsignrequestbody.md
  - docs/models/putv1employeesemployeeidbankaccountsaccounttype.md
  - docs/models/putv1employeesemployeeidbankaccountsrequest.md
  - docs/models/putv1employeesemployeeidbankaccountsrequestbody.md
  - docs/models/putv1employeesemployeeidfederaltaxesrequest.md
  - docs/models/putv1employeesemployeeidfederaltaxesrequestbody.md
  - docs/models/putv1employeesemployeeidi9authorizationauthorizationstatus.md
  - docs/models/putv1employeesemployeeidi9authorizationdocumentsrequest.md
  - docs/models/putv1employeesemployeeidi9authorizationdocumentsrequestbody.md
  - docs/models/putv1employeesemployeeidi9authorizationdocumenttype.md
  - docs/models/putv1employeesemployeeidi9authorizationemployersignrequest.md
  - docs/models/putv1employeesemployeeidi9authorizationemployersignrequestbody.md
  - docs/models/putv1employeesemployeeidi9authorizationrequest.md
  - docs/models/putv1employeesemployeeidi9authorizationrequestbody.md
  - docs/models/putv1employeesemployeeidonboardingdocumentsconfigrequest.md
  - docs/models/putv1employeesemployeeidonboardingdocumentsconfigrequestbody.md
  - docs/models/putv1employeesemployeeidonboardingstatusrequest.md
  - docs/models/putv1employeesemployeeidonboardingstatusrequestbody.md
  - docs/models/putv1employeesemployeeidpaymentmethodrequest.md
  - docs/models/putv1employeesemployeeidpaymentmethodrequestbody.md
  - docs/models/putv1employeesemployeeidpaymentmethodsplitby.md
  - docs/models/putv1employeesemployeeidpaymentmethodtype.md
  - docs/models/putv1employeesemployeeidrehireemploymentstatus.md
  - docs/models/putv1employeesemployeeidrehirerequest.md
  - docs/models/putv1employeesemployeeidrehirerequestbody.md
  - docs/models/putv1employeesemployeeidstatetaxesrequest.md
  - docs/models/putv1employeesemployeeidstatetaxesrequestbody.md
  - docs/models/putv1employeesrequest.md
  - docs/models/putv1employeesrequestbody.md
  - docs/models/putv1externalpayrollbenefits.md
  - docs/models/putv1externalpayrollearnings.md
  - docs/models/putv1externalpayrollearningtype.md
  - docs/models/putv1externalpayrollexternalpayrollitems.md
  - docs/models/putv1externalpayrollrequest.md
  - docs/models/putv1externalpayrollrequestbody.md
  - docs/models/putv1externalpayrolltaxes.md
  - docs/models/putv1garnishmentsgarnishmentidrequest.md
  - docs/models/putv1garnishmentsgarnishmentidrequestbody.md
  - docs/models/putv1historicalemployeesemployeestatetaxes.md
  - docs/models/putv1historicalemployeeshomeaddress.md
  - docs/models/putv1historicalemployeesjob.md
  - docs/models/putv1historicalemployeesrequest.md
  - docs/models/putv1historicalemployeesrequestbody.md
  - docs/models/putv1historicalemployeestermination.md
  - docs/models/putv1historicalemployeesworkaddress.md
  - docs/models/putv1homeaddresseshomeaddressuuidrequest.md
  - docs/models/putv1homeaddresseshomeaddressuuidrequestbody.md
  - docs/models/putv1jobsjobidrequest.md
  - docs/models/putv1jobsjobidrequestbody.md
  - docs/models/putv1locationslocationidrequest.md
  - docs/models/putv1locationslocationidrequestbody.md
  - docs/models/putv1partnermanagedcompaniescompanyuuidmigraterequest.md
  - docs/models/putv1partnermanagedcompaniescompanyuuidmigraterequestbody.md
  - docs/models/putv1partnermanagedcompaniescompanyuuidmigrateresponsebody.md
  - docs/models/putv1taxliabilitiesfinishrequest.md
  - docs/models/putv1taxliabilitiesrequest.md
  - docs/models/putv1taxliabilitiesrequestbody.md
  - docs/models/putv1terminationsemployeeidrequest.md
  - docs/models/putv1terminationsemployeeidrequestbody.md
  - docs/models/putv1timeoffpoliciestimeoffpolicyuuiddeactivaterequest.md
  - docs/models/putv1timeoffpoliciestimeoffpolicyuuidremoveemployeesemployees.md
  - docs/models/putv1timeoffpoliciestimeoffpolicyuuidremoveemployeesrequest.md
  - docs/models/putv1timeoffpoliciestimeoffpolicyuuidremoveemployeesrequestbody.md
  - docs/models/putv1verifywebhooksubscriptionuuidrequest.md
  - docs/models/putv1verifywebhooksubscriptionuuidrequestbody.md
  - docs/models/putv1verifywebhooksubscriptionuuidsecurity.md
  - docs/models/putv1webhooksubscriptionuuidrequest.md
  - docs/models/putv1webhooksubscriptionuuidrequestbody.md
  - docs/models/putv1webhooksubscriptionuuidsecurity.md
  - docs/models/putv1webhooksubscriptionuuidsubscriptiontypes.md
  - docs/models/putv1workaddressesworkaddressuuidrequest.md
  - docs/models/putv1workaddressesworkaddressuuidrequestbody.md
  - docs/models/putversiontimeoffpoliciestimeoffpolicyuuidaddemployeesemployees.md
  - docs/models/putversiontimeoffpoliciestimeoffpolicyuuidaddemployeesrequest.md
  - docs/models/putversiontimeoffpoliciestimeoffpolicyuuidaddemployeesrequestbody.md
  - docs/models/putversiontimeoffpoliciestimeoffpolicyuuidbalanceemployees.md
  - docs/models/putversiontimeoffpoliciestimeoffpolicyuuidbalancerequest.md
  - docs/models/putversiontimeoffpoliciestimeoffpolicyuuidbalancerequestbody.md
  - docs/models/putwireinrequestswireinrequestuuidrequest.md
  - docs/models/putwireinrequestswireinrequestuuidrequestbody.md
  - docs/models/queryparamfrequency.md
  - docs/models/queryparaminclude.md
  - docs/models/questions.md
  - docs/models/ratetype.md
  - docs/models/recipienttype.md
  - docs/models/recoverycase.md
  - docs/models/recoverycasestatus.md
  - docs/models/redebitrecoverycaserequest.md
  - docs/models/refreshaccesstokenrequest.md
  - docs/models/refreshaccesstokenrequestbody.md
  - docs/models/rehire.md
  - docs/models/rehirebody.md
  - docs/models/rehireemploymentstatus.md
  - docs/models/report.md
  - docs/models/reporttemplate.md
  - docs/models/requiredattributes.md
  - docs/models/requirements.md
  - docs/models/requirementsets.md
  - docs/models/resource.md
  - docs/models/resourceowner.md
  - docs/models/resources.md
  - docs/models/resourcetype.md
  - docs/models/responsebody.md
  - docs/models/schema.md
  - docs/models/section.md
  - docs/models/security.md
  - docs/models/signatory.md
  - docs/models/sortorder.md
  - docs/models/splitby.md
  - docs/models/splits.md
  - docs/models/states.md
  - docs/models/status.md
  - docs/models/submissionblockers.md
  - docs/models/subscriptiontypes.md
  - docs/models/supportedbenefit.md
  - docs/models/taxes.md
  - docs/models/taxliabilitiesselections.md
  - docs/models/taxpayertype.md
  - docs/models/taxrequirement.md
  - docs/models/taxrequirementmetadata.md
  - docs/models/taxrequirementmetadataoptions.md
  - docs/models/taxrequirementmetadatatype.md
  - docs/models/taxrequirementmetadatavalidationtype.md
  - docs/models/taxrequirementmetadatavalue.md
  - docs/models/taxrequirementset.md
  - docs/models/taxrequirementsstate.md
  - docs/models/taxrequirementvalue.md
  - docs/models/taxsuggestions.md
  - docs/models/termination.md
  - docs/models/thanksgiving.md
  - docs/models/tier.md
  - docs/models/tiers.md
  - docs/models/timeoffactivity.md
  - docs/models/timeoffpolicy.md
  - docs/models/timeoffpolicyemployees.md
  - docs/models/timeofftype.md
  - docs/models/total.md
  - docs/models/totals.md
  - docs/models/two.md
  - docs/models/type.md
  - docs/models/unblockoptions.md
  - docs/models/unprocessableentityerrorobject.md
  - docs/models/unprocessedterminationpayperiod.md
  - docs/models/user.md
  - docs/models/utils/retryconfig.md
  - docs/models/validation.md
  - docs/models/value.md
  - docs/models/value2.md
  - docs/models/valuetiers.md
  - docs/models/verificationstatus.md
  - docs/models/verificationtype.md
  - docs/models/versionheader.md
  - docs/models/veteransday.md
  - docs/models/w4datatype.md
  - docs/models/wagetype.md
  - docs/models/webhooksubscription.md
  - docs/models/webhooksubscriptionstatus.md
  - docs/models/wireinrequest.md
  - docs/models/wireinrequeststatus.md
  - docs/models/withholdingpayperiod.md
  - docs/models/workaddress.md
  - docs/models/ytdbenefitamountsfromdifferentcompany.md
  - docs/sdks/achtransactions/README.md
  - docs/sdks/bankaccounts/README.md
  - docs/sdks/companies/README.md
  - docs/sdks/companyattachments/README.md
  - docs/sdks/companyattachmentsdk/README.md
  - docs/sdks/companybenefits/README.md
  - docs/sdks/companyforms/README.md
  - docs/sdks/contractordocuments/README.md
  - docs/sdks/contractorforms/README.md
  - docs/sdks/contractorpaymentgroups/README.md
  - docs/sdks/contractorpaymentmethods/README.md
  - docs/sdks/contractorpaymentmethodsdk/README.md
  - docs/sdks/contractorpayments/README.md
  - docs/sdks/contractors/README.md
  - docs/sdks/departments/README.md
  - docs/sdks/earningtypes/README.md
  - docs/sdks/employeeaddresses/README.md
  - docs/sdks/employeebenefits/README.md
  - docs/sdks/employeeemployments/README.md
  - docs/sdks/employeeforms/README.md
  - docs/sdks/employeepaymentmethods/README.md
  - docs/sdks/employeepaymentmethodsdk/README.md
  - docs/sdks/employees/README.md
  - docs/sdks/employeetaxsetup/README.md
  - docs/sdks/events/README.md
  - docs/sdks/externalpayrolls/README.md
  - docs/sdks/federaltaxdetailssdk/README.md
  - docs/sdks/flows/README.md
  - docs/sdks/garnishments/README.md
  - docs/sdks/generateddocuments/README.md
  - docs/sdks/gusto/README.md
  - docs/sdks/historicalemployees/README.md
  - docs/sdks/holidaypaypolicies/README.md
  - docs/sdks/i9verification/README.md
  - docs/sdks/industryselection/README.md
  - docs/sdks/introspection/README.md
  - docs/sdks/invoices/README.md
  - docs/sdks/jobsandcompensations/README.md
  - docs/sdks/locations/README.md
  - docs/sdks/notifications/README.md
  - docs/sdks/paymentconfigssdk/README.md
  - docs/sdks/payrolls/README.md
  - docs/sdks/payschedules/README.md
  - docs/sdks/recoverycases/README.md
  - docs/sdks/reports/README.md
  - docs/sdks/signatories/README.md
  - docs/sdks/taxrequirements/README.md
  - docs/sdks/timeoffpolicies/README.md
  - docs/sdks/webhooks/README.md
  - docs/sdks/wireinrequests/README.md
  - poetry.toml
  - py.typed
  - pylintrc
  - pyproject.toml
  - scripts/prepare-readme.py
  - scripts/publish.sh
  - src/gusto_embedded/__init__.py
  - src/gusto_embedded/_hooks/__init__.py
  - src/gusto_embedded/_hooks/sdkhooks.py
  - src/gusto_embedded/_hooks/types.py
  - src/gusto_embedded/_version.py
  - src/gusto_embedded/achtransactions.py
  - src/gusto_embedded/bankaccounts.py
  - src/gusto_embedded/basesdk.py
  - src/gusto_embedded/companies.py
  - src/gusto_embedded/companyattachment_sdk.py
  - src/gusto_embedded/companyattachments.py
  - src/gusto_embedded/companybenefits.py
  - src/gusto_embedded/companyforms.py
  - src/gusto_embedded/contractordocuments.py
  - src/gusto_embedded/contractorforms.py
  - src/gusto_embedded/contractorpaymentgroups.py
  - src/gusto_embedded/contractorpaymentmethod_sdk.py
  - src/gusto_embedded/contractorpaymentmethods.py
  - src/gusto_embedded/contractorpayments.py
  - src/gusto_embedded/contractors.py
  - src/gusto_embedded/departments.py
  - src/gusto_embedded/earningtypes.py
  - src/gusto_embedded/employeeaddresses.py
  - src/gusto_embedded/employeebenefits.py
  - src/gusto_embedded/employeeemployments.py
  - src/gusto_embedded/employeeforms.py
  - src/gusto_embedded/employeepaymentmethod_sdk.py
  - src/gusto_embedded/employeepaymentmethods.py
  - src/gusto_embedded/employees.py
  - src/gusto_embedded/employeetaxsetup.py
  - src/gusto_embedded/events.py
  - src/gusto_embedded/externalpayrolls.py
  - src/gusto_embedded/federaltaxdetails_sdk.py
  - src/gusto_embedded/flows.py
  - src/gusto_embedded/garnishments.py
  - src/gusto_embedded/generateddocuments.py
  - src/gusto_embedded/historicalemployees.py
  - src/gusto_embedded/holidaypaypolicies.py
  - src/gusto_embedded/httpclient.py
  - src/gusto_embedded/i9verification.py
  - src/gusto_embedded/industryselection.py
  - src/gusto_embedded/introspection.py
  - src/gusto_embedded/invoices.py
  - src/gusto_embedded/jobsandcompensations.py
  - src/gusto_embedded/locations.py
  - src/gusto_embedded/models/__init__.py
  - src/gusto_embedded/models/accruing_time_off_hour.py
  - src/gusto_embedded/models/ach_transaction.py
  - src/gusto_embedded/models/admin.py
  - src/gusto_embedded/models/apierror.py
  - src/gusto_embedded/models/authentication.py
  - src/gusto_embedded/models/benefit_summary.py
  - src/gusto_embedded/models/benefit_type_requirements.py
  - src/gusto_embedded/models/child_support_data.py
  - src/gusto_embedded/models/company.py
  - src/gusto_embedded/models/company_address.py
  - src/gusto_embedded/models/company_attachment.py
  - src/gusto_embedded/models/company_bank_account.py
  - src/gusto_embedded/models/company_benefit.py
  - src/gusto_embedded/models/company_benefit_with_employee_benefits.py
  - src/gusto_embedded/models/company_custom_field.py
  - src/gusto_embedded/models/company_custom_field_list.py
  - src/gusto_embedded/models/company_onboarding_status.py
  - src/gusto_embedded/models/compensation.py
  - src/gusto_embedded/models/contractor.py
  - src/gusto_embedded/models/contractor_address.py
  - src/gusto_embedded/models/contractor_bank_account.py
  - src/gusto_embedded/models/contractor_onboarding_status.py
  - src/gusto_embedded/models/contractor_payment.py
  - src/gusto_embedded/models/contractor_payment_for_group.py
  - src/gusto_embedded/models/contractor_payment_group.py
  - src/gusto_embedded/models/contractor_payment_group_minimal.py
  - src/gusto_embedded/models/contractor_payment_method.py
  - src/gusto_embedded/models/contractor_payment_receipt.py
  - src/gusto_embedded/models/contractor_payment_summary.py
  - src/gusto_embedded/models/contractor_payment_summary_by_dates.py
  - src/gusto_embedded/models/create_report.py
  - src/gusto_embedded/models/custom_field_type.py
  - src/gusto_embedded/models/delete_companies_company_uuid_holiday_pay_policyop.py
  - src/gusto_embedded/models/delete_departmentop.py
  - src/gusto_embedded/models/delete_v1_companies_company_id_contractor_payment_contractor_paymentop.py
  - src/gusto_embedded/models/delete_v1_companies_company_id_earning_types_earning_type_uuidop.py
  - src/gusto_embedded/models/delete_v1_companies_company_id_payrollsop.py
  - src/gusto_embedded/models/delete_v1_companies_company_uuid_signatories_signatory_uuidop.py
  - src/gusto_embedded/models/delete_v1_company_benefits_company_benefit_idop.py
  - src/gusto_embedded/models/delete_v1_compensations_compensation_idop.py
  - src/gusto_embedded/models/delete_v1_contractor_payment_groups_contractor_payment_group_idop.py
  - src/gusto_embedded/models/delete_v1_contractors_contractor_uuidop.py
  - src/gusto_embedded/models/delete_v1_employee_benefits_employee_benefit_idop.py
  - src/gusto_embedded/models/delete_v1_employeeop.py
  - src/gusto_embedded/models/delete_v1_employees_employee_id_bank_accounts_bank_account_idop.py
  - src/gusto_embedded/models/delete_v1_employees_employee_id_i9_authorization_documents_document_idop.py
  - src/gusto_embedded/models/delete_v1_employees_employee_id_rehireop.py
  - src/gusto_embedded/models/delete_v1_employees_employee_id_terminationsop.py
  - src/gusto_embedded/models/delete_v1_external_payrollop.py
  - src/gusto_embedded/models/delete_v1_home_addresses_home_address_uuidop.py
  - src/gusto_embedded/models/delete_v1_jobs_job_idop.py
  - src/gusto_embedded/models/delete_v1_webhook_subscription_uuidop.py
  - src/gusto_embedded/models/delete_v1_work_addresses_work_address_uuidop.py
  - src/gusto_embedded/models/department.py
  - src/gusto_embedded/models/document.py
  - src/gusto_embedded/models/document_pdf.py
  - src/gusto_embedded/models/document_signed.py
  - src/gusto_embedded/models/document_type.py
  - src/gusto_embedded/models/earning_type.py
  - src/gusto_embedded/models/earning_type_list.py
  - src/gusto_embedded/models/employee.py
  - src/gusto_embedded/models/employee_address.py
  - src/gusto_embedded/models/employee_bank_account.py
  - src/gusto_embedded/models/employee_benefit.py
  - src/gusto_embedded/models/employee_benefit_for_company_benefit.py
  - src/gusto_embedded/models/employee_custom_field.py
  - src/gusto_embedded/models/employee_federal_tax.py
  - src/gusto_embedded/models/employee_onboarding_document.py
  - src/gusto_embedded/models/employee_onboarding_status.py
  - src/gusto_embedded/models/employee_pay_stub.py
  - src/gusto_embedded/models/employee_payment_method.py
  - src/gusto_embedded/models/employee_state_tax.py
  - src/gusto_embedded/models/employee_state_tax_answer.py
  - src/gusto_embedded/models/employee_state_tax_input_question_format.py
  - src/gusto_embedded/models/employee_state_tax_question.py
  - src/gusto_embedded/models/employee_work_address.py
  - src/gusto_embedded/models/employment_history_list.py
  - src/gusto_embedded/models/entity_error_object.py
  - src/gusto_embedded/models/event.py
  - src/gusto_embedded/models/external_payroll.py
  - src/gusto_embedded/models/external_payroll_basic.py
  - src/gusto_embedded/models/external_payroll_tax_suggestions.py
  - src/gusto_embedded/models/fast_payment_limit_required_body.py
  - src/gusto_embedded/models/federal_tax_details.py
  - src/gusto_embedded/models/flow.py
  - src/gusto_embedded/models/flsa_status_type.py
  - src/gusto_embedded/models/form.py
  - src/gusto_embedded/models/form_1099.py
  - src/gusto_embedded/models/form_pdf.py
  - src/gusto_embedded/models/garnishment.py
  - src/gusto_embedded/models/garnishment_child_support.py
  - src/gusto_embedded/models/generated_document.py
  - src/gusto_embedded/models/get_ach_transactionsop.py
  - src/gusto_embedded/models/get_companies_company_uuid_contractor_payments_previewop.py
  - src/gusto_embedded/models/get_companies_company_uuid_holiday_pay_policyop.py
  - src/gusto_embedded/models/get_companies_company_uuid_paid_holidaysop.py
  - src/gusto_embedded/models/get_companies_company_uuid_report_templates_report_typeop.py
  - src/gusto_embedded/models/get_companies_company_uuid_time_off_policiesop.py
  - src/gusto_embedded/models/get_companies_company_uuid_wire_in_request_uuidop.py
  - src/gusto_embedded/models/get_companies_departmentsop.py
  - src/gusto_embedded/models/get_departmentop.py
  - src/gusto_embedded/models/get_employee_ytd_benefit_amounts_from_different_companyop.py
  - src/gusto_embedded/models/get_eventsop.py
  - src/gusto_embedded/models/get_invoices_invoice_periodop.py
  - src/gusto_embedded/models/get_notifications_notification_uuidop.py
  - src/gusto_embedded/models/get_recovery_casesop.py
  - src/gusto_embedded/models/get_reports_report_uuidop.py
  - src/gusto_embedded/models/get_time_off_policies_time_off_policy_uuidop.py
  - src/gusto_embedded/models/get_v1_benefits_benefit_idop.py
  - src/gusto_embedded/models/get_v1_benefits_benefits_id_requirementsop.py
  - src/gusto_embedded/models/get_v1_benefits_company_benefit_id_summaryop.py
  - src/gusto_embedded/models/get_v1_benefitsop.py
  - src/gusto_embedded/models/get_v1_companies_attachment_urlop.py
  - src/gusto_embedded/models/get_v1_companies_attachmentop.py
  - src/gusto_embedded/models/get_v1_companies_attachmentsop.py
  - src/gusto_embedded/models/get_v1_companies_company_id_adminsop.py
  - src/gusto_embedded/models/get_v1_companies_company_id_bank_accountsop.py
  - src/gusto_embedded/models/get_v1_companies_company_id_company_benefitsop.py
  - src/gusto_embedded/models/get_v1_companies_company_id_contractor_payment_contractor_paymentop.py
  - src/gusto_embedded/models/get_v1_companies_company_id_contractor_payment_groupsop.py
  - src/gusto_embedded/models/get_v1_companies_company_id_contractor_paymentsop.py
  - src/gusto_embedded/models/get_v1_companies_company_id_custom_fieldsop.py
  - src/gusto_embedded/models/get_v1_companies_company_id_earning_typesop.py
  - src/gusto_embedded/models/get_v1_companies_company_id_employeesop.py
  - src/gusto_embedded/models/get_v1_companies_company_id_federal_tax_detailsop.py
  - src/gusto_embedded/models/get_v1_companies_company_id_locationsop.py
  - src/gusto_embedded/models/get_v1_companies_company_id_pay_periodsop.py
  - src/gusto_embedded/models/get_v1_companies_company_id_pay_schedules_assignmentsop.py
  - src/gusto_embedded/models/get_v1_companies_company_id_pay_schedules_pay_schedule_idop.py
  - src/gusto_embedded/models/get_v1_companies_company_id_pay_schedules_previewop.py
  - src/gusto_embedded/models/get_v1_companies_company_id_pay_schedulesop.py
  - src/gusto_embedded/models/get_v1_companies_company_id_payroll_reversalsop.py
  - src/gusto_embedded/models/get_v1_companies_company_id_payrolls_payroll_idop.py
  - src/gusto_embedded/models/get_v1_companies_company_id_payrollsop.py
  - src/gusto_embedded/models/get_v1_companies_company_id_unprocessed_termination_pay_periodsop.py
  - src/gusto_embedded/models/get_v1_companies_company_uuid_contractorsop.py
  - src/gusto_embedded/models/get_v1_companies_company_uuid_signatoriesop.py
  - src/gusto_embedded/models/get_v1_companies_company_uuid_tax_requirements_stateop.py
  - src/gusto_embedded/models/get_v1_companies_company_uuid_tax_requirementsop.py
  - src/gusto_embedded/models/get_v1_companies_payroll_blockers_company_uuidop.py
  - src/gusto_embedded/models/get_v1_companiesop.py
  - src/gusto_embedded/models/get_v1_company_benefits_company_benefit_id_employee_benefitsop.py
  - src/gusto_embedded/models/get_v1_company_benefits_company_benefit_idop.py
  - src/gusto_embedded/models/get_v1_company_external_payrollsop.py
  - src/gusto_embedded/models/get_v1_company_finish_onboardingop.py
  - src/gusto_embedded/models/get_v1_company_form_pdfop.py
  - src/gusto_embedded/models/get_v1_company_formop.py
  - src/gusto_embedded/models/get_v1_company_formsop.py
  - src/gusto_embedded/models/get_v1_company_industryop.py
  - src/gusto_embedded/models/get_v1_company_onboarding_statusop.py
  - src/gusto_embedded/models/get_v1_company_payment_configsop.py
  - src/gusto_embedded/models/get_v1_compensations_compensation_idop.py
  - src/gusto_embedded/models/get_v1_contractor_document_pdfop.py
  - src/gusto_embedded/models/get_v1_contractor_documentop.py
  - src/gusto_embedded/models/get_v1_contractor_documentsop.py
  - src/gusto_embedded/models/get_v1_contractor_form_pdfop.py
  - src/gusto_embedded/models/get_v1_contractor_formop.py
  - src/gusto_embedded/models/get_v1_contractor_formsop.py
  - src/gusto_embedded/models/get_v1_contractor_payment_groups_contractor_payment_group_idop.py
  - src/gusto_embedded/models/get_v1_contractor_payments_contractor_payment_uuid_fundop.py
  - src/gusto_embedded/models/get_v1_contractor_payments_contractor_payment_uuid_receiptop.py
  - src/gusto_embedded/models/get_v1_contractors_contractor_uuid_addressop.py
  - src/gusto_embedded/models/get_v1_contractors_contractor_uuid_bank_accountsop.py
  - src/gusto_embedded/models/get_v1_contractors_contractor_uuid_onboarding_statusop.py
  - src/gusto_embedded/models/get_v1_contractors_contractor_uuid_payment_methodop.py
  - src/gusto_embedded/models/get_v1_contractors_contractor_uuidop.py
  - src/gusto_embedded/models/get_v1_employee_benefits_employee_benefit_idop.py
  - src/gusto_embedded/models/get_v1_employee_form_pdfop.py
  - src/gusto_embedded/models/get_v1_employee_formop.py
  - src/gusto_embedded/models/get_v1_employee_formsop.py
  - src/gusto_embedded/models/get_v1_employees_employee_id_bank_accountsop.py
  - src/gusto_embedded/models/get_v1_employees_employee_id_custom_fieldsop.py
  - src/gusto_embedded/models/get_v1_employees_employee_id_employee_benefitsop.py
  - src/gusto_embedded/models/get_v1_employees_employee_id_employment_historyop.py
  - src/gusto_embedded/models/get_v1_employees_employee_id_federal_taxesop.py
  - src/gusto_embedded/models/get_v1_employees_employee_id_garnishmentsop.py
  - src/gusto_embedded/models/get_v1_employees_employee_id_home_addressesop.py
  - src/gusto_embedded/models/get_v1_employees_employee_id_i9_authorization_document_optionsop.py
  - src/gusto_embedded/models/get_v1_employees_employee_id_i9_authorization_documentsop.py
  - src/gusto_embedded/models/get_v1_employees_employee_id_i9_authorizationop.py
  - src/gusto_embedded/models/get_v1_employees_employee_id_jobsop.py
  - src/gusto_embedded/models/get_v1_employees_employee_id_onboarding_statusop.py
  - src/gusto_embedded/models/get_v1_employees_employee_id_payment_methodop.py
  - src/gusto_embedded/models/get_v1_employees_employee_id_rehireop.py
  - src/gusto_embedded/models/get_v1_employees_employee_id_state_taxesop.py
  - src/gusto_embedded/models/get_v1_employees_employee_id_terminationsop.py
  - src/gusto_embedded/models/get_v1_employees_employee_id_work_addressesop.py
  - src/gusto_embedded/models/get_v1_employees_employee_uuid_pay_stubsop.py
  - src/gusto_embedded/models/get_v1_employeesop.py
  - src/gusto_embedded/models/get_v1_external_payroll_calculate_taxesop.py
  - src/gusto_embedded/models/get_v1_external_payrollop.py
  - src/gusto_embedded/models/get_v1_garnishments_child_supportop.py
  - src/gusto_embedded/models/get_v1_garnishments_garnishment_idop.py
  - src/gusto_embedded/models/get_v1_generated_documents_document_type_request_uuidop.py
  - src/gusto_embedded/models/get_v1_home_addresses_home_address_uuidop.py
  - src/gusto_embedded/models/get_v1_jobs_job_id_compensationsop.py
  - src/gusto_embedded/models/get_v1_jobs_job_idop.py
  - src/gusto_embedded/models/get_v1_locations_location_idop.py
  - src/gusto_embedded/models/get_v1_locations_location_uuid_minimum_wagesop.py
  - src/gusto_embedded/models/get_v1_payment_receipts_payrolls_payroll_uuidop.py
  - src/gusto_embedded/models/get_v1_payrolls_payroll_uuid_employees_employee_uuid_pay_stubop.py
  - src/gusto_embedded/models/get_v1_tax_liabilitiesop.py
  - src/gusto_embedded/models/get_v1_token_infoop.py
  - src/gusto_embedded/models/get_v1_webhook_subscription_uuidop.py
  - src/gusto_embedded/models/get_v1_webhook_subscription_verification_token_uuidop.py
  - src/gusto_embedded/models/get_v1_webhook_subscriptionsop.py
  - src/gusto_embedded/models/get_v1_work_addresses_work_address_uuidop.py
  - src/gusto_embedded/models/get_version_employees_time_off_activitiesop.py
  - src/gusto_embedded/models/get_wire_in_requests_wire_in_request_uuidop.py
  - src/gusto_embedded/models/gross_up_pay.py
  - src/gusto_embedded/models/historical_employee_body.py
  - src/gusto_embedded/models/holiday_pay_policy.py
  - src/gusto_embedded/models/i9_authorization.py
  - src/gusto_embedded/models/i9_authorization_document.py
  - src/gusto_embedded/models/i9_authorization_document_option.py
  - src/gusto_embedded/models/industry.py
  - src/gusto_embedded/models/invoice_data.py
  - src/gusto_embedded/models/job.py
  - src/gusto_embedded/models/location.py
  - src/gusto_embedded/models/minimum_wage.py
  - src/gusto_embedded/models/notification.py
  - src/gusto_embedded/models/off_cycle_reason_type.py
  - src/gusto_embedded/models/paid_holidays.py
  - src/gusto_embedded/models/paid_time_off.py
  - src/gusto_embedded/models/pay_period.py
  - src/gusto_embedded/models/pay_schedule.py
  - src/gusto_embedded/models/pay_schedule_assignment.py
  - src/gusto_embedded/models/pay_schedule_assignment_body.py
  - src/gusto_embedded/models/pay_schedule_assignment_department.py
  - src/gusto_embedded/models/pay_schedule_assignment_employee.py
  - src/gusto_embedded/models/pay_schedule_assignment_employee_change.py
  - src/gusto_embedded/models/pay_schedule_assignment_pay_period.py
  - src/gusto_embedded/models/pay_schedule_assignment_preview.py
  - src/gusto_embedded/models/pay_schedule_assignment_transition_pay_period.py
  - src/gusto_embedded/models/pay_schedule_create_update.py
  - src/gusto_embedded/models/pay_schedule_frequency.py
  - src/gusto_embedded/models/pay_schedule_frequency_create_update.py
  - src/gusto_embedded/models/payment_configs.py
  - src/gusto_embedded/models/payment_method_bank_account.py
  - src/gusto_embedded/models/payment_speed_param.py
  - src/gusto_embedded/models/payment_speed_required_body.py
  - src/gusto_embedded/models/payroll.py
  - src/gusto_embedded/models/payroll_blocker.py
  - src/gusto_embedded/models/payroll_blockers_error.py
  - src/gusto_embedded/models/payroll_check.py
  - src/gusto_embedded/models/payroll_company_taxes_type.py
  - src/gusto_embedded/models/payroll_credit_blockers_type.py
  - src/gusto_embedded/models/payroll_employee_compensations_type.py
  - src/gusto_embedded/models/payroll_fixed_compensation_types_type.py
  - src/gusto_embedded/models/payroll_minimal.py
  - src/gusto_embedded/models/payroll_pay_period_type.py
  - src/gusto_embedded/models/payroll_payment_speed_changed_type.py
  - src/gusto_embedded/models/payroll_payroll_status_meta_type.py
  - src/gusto_embedded/models/payroll_prepared.py
  - src/gusto_embedded/models/payroll_processing_request.py
  - src/gusto_embedded/models/payroll_receipt.py
  - src/gusto_embedded/models/payroll_reversal.py
  - src/gusto_embedded/models/payroll_submission_blockers_type.py
  - src/gusto_embedded/models/payroll_totals_type.py
  - src/gusto_embedded/models/payroll_withholding_pay_period_type.py
  - src/gusto_embedded/models/post_companies_company_uuid_holiday_pay_policyop.py
  - src/gusto_embedded/models/post_companies_company_uuid_reportsop.py
  - src/gusto_embedded/models/post_companies_company_uuid_time_off_policiesop.py
  - src/gusto_embedded/models/post_companies_payroll_skip_company_uuidop.py
  - src/gusto_embedded/models/post_departmentsop.py
  - src/gusto_embedded/models/post_employee_ytd_benefit_amounts_from_different_company.py
  - src/gusto_embedded/models/post_employee_ytd_benefit_amounts_from_different_companyop.py
  - src/gusto_embedded/models/post_partner_managed_companies_company_uuid_accept_terms_of_serviceop.py
  - src/gusto_embedded/models/post_partner_managed_companies_company_uuid_retrieve_terms_of_serviceop.py
  - src/gusto_embedded/models/post_payrolls_gross_up_payroll_uuidop.py
  - src/gusto_embedded/models/post_v1_companies_attachmentop.py
  - src/gusto_embedded/models/post_v1_companies_company_id_adminsop.py
  - src/gusto_embedded/models/post_v1_companies_company_id_bank_accountsop.py
  - src/gusto_embedded/models/post_v1_companies_company_id_company_benefitsop.py
  - src/gusto_embedded/models/post_v1_companies_company_id_contractor_payment_groups_previewop.py
  - src/gusto_embedded/models/post_v1_companies_company_id_contractor_payment_groupsop.py
  - src/gusto_embedded/models/post_v1_companies_company_id_contractor_paymentsop.py
  - src/gusto_embedded/models/post_v1_companies_company_id_earning_typesop.py
  - src/gusto_embedded/models/post_v1_companies_company_id_locationsop.py
  - src/gusto_embedded/models/post_v1_companies_company_id_pay_schedules_assignment_previewop.py
  - src/gusto_embedded/models/post_v1_companies_company_id_pay_schedules_assignop.py
  - src/gusto_embedded/models/post_v1_companies_company_id_pay_schedulesop.py
  - src/gusto_embedded/models/post_v1_companies_company_id_payrollsop.py
  - src/gusto_embedded/models/post_v1_companies_company_uuid_contractorsop.py
  - src/gusto_embedded/models/post_v1_companies_company_uuid_signatories_inviteop.py
  - src/gusto_embedded/models/post_v1_company_flowsop.py
  - src/gusto_embedded/models/post_v1_company_signatoriesop.py
  - src/gusto_embedded/models/post_v1_compensations_compensation_idop.py
  - src/gusto_embedded/models/post_v1_contractors_contractor_uuid_bank_accountsop.py
  - src/gusto_embedded/models/post_v1_employees_employee_id_bank_accountsop.py
  - src/gusto_embedded/models/post_v1_employees_employee_id_employee_benefitsop.py
  - src/gusto_embedded/models/post_v1_employees_employee_id_garnishmentsop.py
  - src/gusto_embedded/models/post_v1_employees_employee_id_home_addressesop.py
  - src/gusto_embedded/models/post_v1_employees_employee_id_rehireop.py
  - src/gusto_embedded/models/post_v1_employees_employee_id_terminationsop.py
  - src/gusto_embedded/models/post_v1_employees_employee_id_work_addressesop.py
  - src/gusto_embedded/models/post_v1_employeesop.py
  - src/gusto_embedded/models/post_v1_external_payrollop.py
  - src/gusto_embedded/models/post_v1_historical_employeesop.py
  - src/gusto_embedded/models/post_v1_jobs_job_idop.py
  - src/gusto_embedded/models/post_v1_partner_managed_companiesop.py
  - src/gusto_embedded/models/post_v1_payrolls_payroll_id_calculate_accruing_time_off_hoursop.py
  - src/gusto_embedded/models/post_v1_payrolls_payroll_uuid_generated_documents_printable_payroll_checksop.py
  - src/gusto_embedded/models/post_v1_plaid_processor_tokenop.py
  - src/gusto_embedded/models/post_v1_sandbox_generate_1099op.py
  - src/gusto_embedded/models/post_v1_sandbox_generate_w2op.py
  - src/gusto_embedded/models/post_v1_webhook_subscriptionop.py
  - src/gusto_embedded/models/put_add_people_to_departmentop.py
  - src/gusto_embedded/models/put_api_v1_companies_company_id_payrolls_payroll_id_cancelop.py
  - src/gusto_embedded/models/put_companies_company_uuid_holiday_pay_policy_addop.py
  - src/gusto_embedded/models/put_companies_company_uuid_holiday_pay_policy_removeop.py
  - src/gusto_embedded/models/put_companies_company_uuid_holiday_pay_policyop.py
  - src/gusto_embedded/models/put_departmentsop.py
  - src/gusto_embedded/models/put_remove_people_from_departmentop.py
  - src/gusto_embedded/models/put_time_off_policies_time_off_policy_uuidop.py
  - src/gusto_embedded/models/put_v1_companies_company_id_bank_accounts_verifyop.py
  - src/gusto_embedded/models/put_v1_companies_company_id_earning_types_earning_type_uuidop.py
  - src/gusto_embedded/models/put_v1_companies_company_id_federal_tax_detailsop.py
  - src/gusto_embedded/models/put_v1_companies_company_id_pay_schedules_pay_schedule_idop.py
  - src/gusto_embedded/models/put_v1_companies_company_id_payrolls_payroll_id_calculateop.py
  - src/gusto_embedded/models/put_v1_companies_company_id_payrolls_payroll_id_prepareop.py
  - src/gusto_embedded/models/put_v1_companies_company_id_payrolls_payroll_id_submitop.py
  - src/gusto_embedded/models/put_v1_companies_company_id_payrollsop.py
  - src/gusto_embedded/models/put_v1_companies_company_uuid_signatories_signatory_uuidop.py
  - src/gusto_embedded/models/put_v1_companies_company_uuid_tax_requirements_stateop.py
  - src/gusto_embedded/models/put_v1_companiesop.py
  - src/gusto_embedded/models/put_v1_company_benefits_company_benefit_id_employee_benefitsop.py
  - src/gusto_embedded/models/put_v1_company_benefits_company_benefit_idop.py
  - src/gusto_embedded/models/put_v1_company_form_signop.py
  - src/gusto_embedded/models/put_v1_company_industryop.py
  - src/gusto_embedded/models/put_v1_company_payment_configsop.py
  - src/gusto_embedded/models/put_v1_compensations_compensation_idop.py
  - src/gusto_embedded/models/put_v1_contractor_document_signop.py
  - src/gusto_embedded/models/put_v1_contractor_payment_groups_contractor_payment_group_id_fundop.py
  - src/gusto_embedded/models/put_v1_contractors_contractor_id_payment_methodop.py
  - src/gusto_embedded/models/put_v1_contractors_contractor_uuid_addressop.py
  - src/gusto_embedded/models/put_v1_contractors_contractor_uuid_onboarding_statusop.py
  - src/gusto_embedded/models/put_v1_contractors_contractor_uuidop.py
  - src/gusto_embedded/models/put_v1_employee_benefits_employee_benefit_idop.py
  - src/gusto_embedded/models/put_v1_employee_form_signop.py
  - src/gusto_embedded/models/put_v1_employees_employee_id_bank_accountsop.py
  - src/gusto_embedded/models/put_v1_employees_employee_id_federal_taxesop.py
  - src/gusto_embedded/models/put_v1_employees_employee_id_i9_authorization_documentsop.py
  - src/gusto_embedded/models/put_v1_employees_employee_id_i9_authorization_employer_signop.py
  - src/gusto_embedded/models/put_v1_employees_employee_id_i9_authorizationop.py
  - src/gusto_embedded/models/put_v1_employees_employee_id_onboarding_documents_configop.py
  - src/gusto_embedded/models/put_v1_employees_employee_id_onboarding_statusop.py
  - src/gusto_embedded/models/put_v1_employees_employee_id_payment_methodop.py
  - src/gusto_embedded/models/put_v1_employees_employee_id_rehireop.py
  - src/gusto_embedded/models/put_v1_employees_employee_id_state_taxesop.py
  - src/gusto_embedded/models/put_v1_employeesop.py
  - src/gusto_embedded/models/put_v1_external_payrollop.py
  - src/gusto_embedded/models/put_v1_garnishments_garnishment_idop.py
  - src/gusto_embedded/models/put_v1_historical_employeesop.py
  - src/gusto_embedded/models/put_v1_home_addresses_home_address_uuidop.py
  - src/gusto_embedded/models/put_v1_jobs_job_idop.py
  - src/gusto_embedded/models/put_v1_locations_location_idop.py
  - src/gusto_embedded/models/put_v1_partner_managed_companies_company_uuid_migrateop.py
  - src/gusto_embedded/models/put_v1_tax_liabilities_finishop.py
  - src/gusto_embedded/models/put_v1_tax_liabilitiesop.py
  - src/gusto_embedded/models/put_v1_terminations_employee_idop.py
  - src/gusto_embedded/models/put_v1_time_off_policies_time_off_policy_uuid_deactivateop.py
  - src/gusto_embedded/models/put_v1_time_off_policies_time_off_policy_uuid_remove_employeesop.py
  - src/gusto_embedded/models/put_v1_verify_webhook_subscription_uuidop.py
  - src/gusto_embedded/models/put_v1_webhook_subscription_uuidop.py
  - src/gusto_embedded/models/put_v1_work_addresses_work_address_uuidop.py
  - src/gusto_embedded/models/put_version_time_off_policies_time_off_policy_uuid_add_employeesop.py
  - src/gusto_embedded/models/put_version_time_off_policies_time_off_policy_uuid_balanceop.py
  - src/gusto_embedded/models/put_wire_in_requests_wire_in_request_uuidop.py
  - src/gusto_embedded/models/recovery_case.py
  - src/gusto_embedded/models/redebit_recovery_caseop.py
  - src/gusto_embedded/models/refresh_access_tokenop.py
  - src/gusto_embedded/models/rehire.py
  - src/gusto_embedded/models/rehire_body.py
  - src/gusto_embedded/models/report.py
  - src/gusto_embedded/models/report_template.py
  - src/gusto_embedded/models/security.py
  - src/gusto_embedded/models/signatory.py
  - src/gusto_embedded/models/sort_order.py
  - src/gusto_embedded/models/supported_benefit.py
  - src/gusto_embedded/models/tax_liabilities_selections.py
  - src/gusto_embedded/models/tax_requirement.py
  - src/gusto_embedded/models/tax_requirement_metadata.py
  - src/gusto_embedded/models/tax_requirement_set.py
  - src/gusto_embedded/models/tax_requirements_state.py
  - src/gusto_embedded/models/termination.py
  - src/gusto_embedded/models/time_off_activity.py
  - src/gusto_embedded/models/time_off_policy.py
  - src/gusto_embedded/models/unprocessable_entity_error_object.py
  - src/gusto_embedded/models/unprocessed_termination_pay_period.py
  - src/gusto_embedded/models/versionheader.py
  - src/gusto_embedded/models/webhook_subscription.py
  - src/gusto_embedded/models/wire_in_request.py
  - src/gusto_embedded/models/ytd_benefit_amounts_from_different_company.py
  - src/gusto_embedded/notifications.py
  - src/gusto_embedded/paymentconfigs_sdk.py
  - src/gusto_embedded/payrolls.py
  - src/gusto_embedded/payschedules.py
  - src/gusto_embedded/py.typed
  - src/gusto_embedded/recoverycases.py
  - src/gusto_embedded/reports.py
  - src/gusto_embedded/sdk.py
  - src/gusto_embedded/sdkconfiguration.py
  - src/gusto_embedded/signatories.py
  - src/gusto_embedded/taxrequirements.py
  - src/gusto_embedded/timeoffpolicies.py
  - src/gusto_embedded/types/__init__.py
  - src/gusto_embedded/types/basemodel.py
  - src/gusto_embedded/utils/__init__.py
  - src/gusto_embedded/utils/annotations.py
  - src/gusto_embedded/utils/enums.py
  - src/gusto_embedded/utils/eventstreaming.py
  - src/gusto_embedded/utils/forms.py
  - src/gusto_embedded/utils/headers.py
  - src/gusto_embedded/utils/logger.py
  - src/gusto_embedded/utils/metadata.py
  - src/gusto_embedded/utils/queryparams.py
  - src/gusto_embedded/utils/requestbodies.py
  - src/gusto_embedded/utils/retries.py
  - src/gusto_embedded/utils/security.py
  - src/gusto_embedded/utils/serializers.py
  - src/gusto_embedded/utils/url.py
  - src/gusto_embedded/utils/values.py
  - src/gusto_embedded/webhooks.py
  - src/gusto_embedded/wireinrequests.py
examples:
  get-v1-token-info:
    Example:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"scope": "companies:read companies:write employees:read", "resource": {"type": "Company", "uuid": "5eca5127-6048-43ad-91ee-b56a0c34bc85"}, "resource_owner": {"type": "CompanyAdmin", "uuid": "367871c2-3f70-4874-adc9-f1736647e8e1"}}
  refresh-access-token:
    Example:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"client_id": "<id>", "client_secret": "<value>", "refresh_token": "<value>", "grant_type": "<value>"}
      responses:
        "200":
          application/json: {"access_token": "737HdeXfIqgx-NfaUFRuhV7JDe6ns6ptanJSMuQzjlc", "token_type": "bearer", "expires_in": 7200, "refresh_token": "iEjL96L9Pndwmi-xVX3Q-xbrvvhnjHYGX87sopgGJ8E", "created_at": "1732033824", "scope": "ach_transactions:read benefits:read companies:read"}
  post-v1-partner-managed-companies:
    Example:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"user": {"first_name": "Frank", "last_name": "Ocean", "email": "frank@example.com", "phone": "2345558899"}, "company": {"name": "Frank's Ocean, LLC", "trade_name": "Frank’s Ocean", "ein": "123456789", "contractor_only": false}}
      responses:
        "200":
          application/json: {"access_token": "de6780bc506a0446309bd9362820ba8aed28aa506c71eedbe1c5c4f9dd350e54", "refresh_token": "8257e65c97202ed1726cf9571600918f3bffb2544b26e00a61df9897668c33a1", "company_uuid": "d525dd21-ba6e-482c-be15-c2c7237f1364", "expires_in": 7200}
    Basic:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"user": {"first_name": "Gail", "last_name": "Stracke", "email": "Emanuel.McClure@gmail.com"}, "company": {"name": "<value>"}}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"user": {"first_name": "Gretchen", "last_name": "Vandervort", "email": "Giuseppe_Turcotte@yahoo.com"}, "company": {"name": "<value>"}}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"user": {"first_name": "Dominic", "last_name": "Bins", "email": "Maxime41@hotmail.com"}, "company": {"name": "<value>"}}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-companies:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"ein": "00-0000001", "entity_type": "C-Corporation", "contractor_only": false, "tier": "core", "is_suspended": false, "company_status": "Approved", "uuid": "c7a07c73-a703-4462-9343-1b181182b6e0", "name": "Shoppe Studios LLC", "slug": "record-shoppe", "trade_name": "Record Shoppe", "is_partner_managed": false, "pay_schedule_type": "by_department", "join_date": "2023-03-01", "funding_type": "ach", "locations": [{"street_1": "412 Kiera Stravenue", "street_2": "Suite 391", "city": "San Francisco", "state": "CA", "zip": "94107", "country": "USA", "active": true}, {"street_1": "644 Fay Vista", "street_2": "Suite 842", "city": "Richmond", "state": "VA", "zip": "23218", "country": "USA", "active": true}], "compensations": {"hourly": [{"name": "Overtime", "multiple": 1.5}, {"name": "Double overtime", "multiple": 2}, {"name": "Regular", "multiple": 1}, {"name": "Outstanding vacation", "multiple": 1}, {"name": "Holiday", "multiple": 1}, {"name": "Emergency sick - self care", "multiple": 1}, {"name": "Emergency sick - caring for others", "multiple": 1}, {"name": "FMLA Public Health Emergency Leave", "multiple": 1}, {"name": "Regular Hours", "multiple": 1}], "fixed": [{"name": "Bonus"}, {"name": "Commission"}, {"name": "Paycheck Tips"}, {"name": "Cash Tips"}, {"name": "Correction Payment"}, {"name": "Severance"}, {"name": "Minimum Wage Adjustment"}, {"name": "Reimbursement"}], "paid_time_off": [{"name": "Vacation Hours"}, {"name": "Sick Hours"}, {"name": "Holiday Hours"}]}, "primary_signatory": {"uuid": "8a2ed9c2-9d1e-443a-8e56-a490d8bf73bb", "first_name": "Alda", "middle_initial": "", "last_name": "Carter", "phone": "1-565-710-7558", "email": "louie.hessel7757869450111547@zemlak.biz", "home_address": {"street_1": "524 Roob Divide", "street_2": "Suite 565", "city": "San Francisco", "state": "CA", "zip": "94107", "country": "USA"}}, "primary_payroll_admin": {"first_name": "Ian", "last_name": "Labadie", "phone": "1-565-710-7559", "email": "louie.hessel7757869450111547@zemlak.biz"}}
  put-v1-companies:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"contractor_only": false}
      responses:
        "200":
          application/json: {"ein": "00-0000001", "entity_type": "C-Corporation", "contractor_only": false, "tier": "core", "is_suspended": false, "company_status": "Approved", "uuid": "c7a07c73-a703-4462-9343-1b181182b6e0", "name": "Shoppe Studios LLC", "slug": "record-shoppe", "trade_name": "Record Shoppe", "is_partner_managed": false, "pay_schedule_type": "by_department", "join_date": "2023-03-01", "funding_type": "ach", "locations": [{"street_1": "412 Kiera Stravenue", "street_2": "Suite 391", "city": "San Francisco", "state": "CA", "zip": "94107", "country": "USA", "active": true}, {"street_1": "644 Fay Vista", "street_2": "Suite 842", "city": "Richmond", "state": "VA", "zip": "23218", "country": "USA", "active": true}], "compensations": {"hourly": [{"name": "Overtime", "multiple": 1.5}, {"name": "Double overtime", "multiple": 2}, {"name": "Regular", "multiple": 1}, {"name": "Outstanding vacation", "multiple": 1}, {"name": "Holiday", "multiple": 1}, {"name": "Emergency sick - self care", "multiple": 1}, {"name": "Emergency sick - caring for others", "multiple": 1}, {"name": "FMLA Public Health Emergency Leave", "multiple": 1}, {"name": "Regular Hours", "multiple": 1}], "fixed": [{"name": "Bonus"}, {"name": "Commission"}, {"name": "Paycheck Tips"}, {"name": "Cash Tips"}, {"name": "Correction Payment"}, {"name": "Severance"}, {"name": "Minimum Wage Adjustment"}, {"name": "Reimbursement"}], "paid_time_off": [{"name": "Vacation Hours"}, {"name": "Sick Hours"}, {"name": "Holiday Hours"}]}, "primary_signatory": {"uuid": "8a2ed9c2-9d1e-443a-8e56-a490d8bf73bb", "first_name": "Alda", "middle_initial": "", "last_name": "Carter", "phone": "1-565-710-7558", "email": "louie.hessel7757869450111547@zemlak.biz", "home_address": {"street_1": "524 Roob Divide", "street_2": "Suite 565", "city": "San Francisco", "state": "CA", "zip": "94107", "country": "USA"}}, "primary_payroll_admin": {"first_name": "Ian", "last_name": "Labadie", "phone": "1-565-710-7559", "email": "louie.hessel7757869450111547@zemlak.biz"}}
    Basic:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"contractor_only": false}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"contractor_only": false}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"contractor_only": true}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  put-v1-partner-managed-companies-company-uuid-migrate:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"email": "Benjamin_Kihn44@yahoo.com", "ip_address": "198.52.136.51", "external_user_id": "<id>"}
      responses:
        "200":
          application/json: {"company_uuid": "39abf9b9-650b-4e67-89a0-389dc6ee8a71", "migration_status": "success"}
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"email": "Erna62@gmail.com", "ip_address": "02de:9982:167f:34c3:bfe5:a8ab:0cf3:5c87", "external_user_id": "<id>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"email": "Lyric_Beer@yahoo.com", "ip_address": "217.131.195.126", "external_user_id": "<id>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"email": "Johann_Thompson@hotmail.com", "ip_address": "82.48.167.70", "external_user_id": "<id>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  post-partner-managed-companies-company_uuid-accept_terms_of_service:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"email": "jsmith99@gmail.com", "ip_address": "192.168.1.2", "external_user_id": "2005648946132"}
      responses:
        "200":
          application/json: {"latest_terms_accepted": true}
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"email": "Justine73@gmail.com", "ip_address": "168.91.169.217", "external_user_id": "<id>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"email": "William_Goldner@hotmail.com", "ip_address": "bf16:0638:d9db:4e8a:c5ee:c9cd:bb4f:1d5d", "external_user_id": "<id>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"email": "Jerad_Dicki@yahoo.com", "ip_address": "61.236.253.221", "external_user_id": "<id>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  post-partner-managed-companies-company_uuid-retrieve_terms_of_service:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"email": "jsmith99@gmail.com"}
      responses:
        "200":
          application/json: {"latest_terms_accepted": true}
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"email": "Erika_Schuster@yahoo.com"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"email": "Sarina_Hand68@yahoo.com"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"email": "Katheryn_Ernser@hotmail.com"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  post-v1-companies-company_id-admins:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"first_name": "John", "last_name": "Smith", "email": "jsmith99@gmail.com"}
      responses:
        "200":
          application/json: {"uuid": "5de11791-98fd-4587-9ed0-d5d804b8e647", "email": "jsmith99@gmail.com", "first_name": "John", "last_name": "Smith"}
    Basic:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"first_name": "Guillermo", "last_name": "Koch", "email": "Justine_Gusikowski92@yahoo.com"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"first_name": "Jaquelin", "last_name": "Leannon", "email": "Neil_Parisian@hotmail.com"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"first_name": "Jessika", "last_name": "Hudson", "email": "Cornell_Monahan86@hotmail.com"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-companies-company_id-admins:
    Example:
      parameters:
        path:
          company_id: "<id>"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "987058cc-23ee-46e9-81ef-5cee086cceca", "email": "Katherine@acmecorp.com", "first_name": "Katherine", "last_name": "Johnson"}, {"uuid": "5de11791-98fd-4587-9ed0-d5d804b8e647", "email": "Anita@acmecorp.com", "first_name": "Anita", "last_name": "Borg"}]
  get-v1-company-onboarding-status:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        query:
          additional_steps: "external_payroll"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "c44d66dc-c41b-4a60-9e25-5e93ff8583f2", "onboarding_completed": false, "onboarding_steps": [{"title": "Add Your Company's Addresses", "id": "add_addresses", "required": true, "completed": true, "skippable": false, "requirements": []}, {"title": "Enter Your Federal Tax Information", "id": "federal_tax_setup", "required": true, "completed": true, "skippable": false, "requirements": []}, {"title": "Select Industry", "id": "select_industry", "required": true, "completed": true, "skippable": false, "requirements": []}, {"title": "Add Your Bank Account", "id": "add_bank_info", "required": true, "completed": true, "skippable": false, "requirements": []}, {"title": "Add Your Employees", "id": "add_employees", "required": true, "completed": true, "skippable": true, "requirements": ["add_addresses"]}, {"title": "Enter Your State Tax Information", "id": "state_setup", "required": true, "completed": false, "skippable": false, "requirements": ["add_addresses", "add_employees"]}, {"title": "Select a Pay Schedule", "id": "payroll_schedule", "required": true, "completed": false, "skippable": false, "requirements": []}, {"title": "Sign Documents", "id": "sign_all_forms", "required": true, "completed": false, "skippable": false, "requirements": ["add_employees", "federal_tax_setup", "state_setup", "add_bank_info", "payroll_schedule"]}, {"title": "Verify Your Bank Account", "id": "verify_bank_info", "required": true, "completed": false, "skippable": false, "requirements": ["add_bank_info"]}]}
  get-v1-company-finish-onboarding:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "c44d66dc-c41b-4a60-9e25-5e93ff8583f2", "onboarding_completed": true, "onboarding_steps": [{"title": "Add Your Company's Addresses", "id": "add_addresses", "required": true, "completed": true, "skippable": false, "requirements": []}, {"title": "Enter Your Federal Tax Information", "id": "federal_tax_setup", "required": true, "completed": true, "skippable": false, "requirements": []}, {"title": "Select Industry", "id": "select_industry", "required": true, "completed": true, "skippable": false, "requirements": []}, {"title": "Add Your Bank Account", "id": "add_bank_info", "required": true, "completed": true, "skippable": false, "requirements": []}, {"title": "Add Your Employees", "id": "add_employees", "required": true, "completed": true, "skippable": true, "requirements": ["add_addresses"]}, {"title": "Enter Your State Tax Information", "id": "state_setup", "required": true, "completed": true, "skippable": false, "requirements": ["add_addresses", "add_employees"]}, {"title": "Select a Pay Schedule", "id": "payroll_schedule", "required": true, "completed": true, "skippable": false, "requirements": []}, {"title": "Sign Documents", "id": "sign_all_forms", "required": true, "completed": true, "skippable": false, "requirements": ["add_employees", "federal_tax_setup", "state_setup", "add_bank_info", "payroll_schedule"]}, {"title": "Verify Your Bank Account", "id": "verify_bank_info", "required": true, "completed": true, "skippable": false, "requirements": ["add_bank_info"]}]}
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-companies-company_id-custom_fields:
    Example:
      parameters:
        path:
          company_id: "<id>"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"custom_fields": [{"uuid": "ea7e5d57-6abb-47d7-b654-347c142886c0", "name": "employee_level", "type": "text", "description": "Employee Level", "selection_options": null}, {"uuid": "299650e4-e970-4acf-9bf0-6f05585d20ba", "name": "t-shirt size", "type": "text", "description": "What is your t-shirt size?", "selection_options": null}, {"uuid": "024ec137-6c92-43a3-b061-14a9720531d6", "name": "favorite fruit", "type": "radio", "description": "Which is your favorite fruit?", "selection_options": ["apple", "banana", "orange"]}]}
  get-v1-company-forms:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "48cdd5ec-a4dd-4840-a424-ad79f38d8408", "name": "company_direct_deposit", "title": "Direct Deposit Authorization", "description": "We need you to sign paperwork to authorize us to debit and credit your bank account and file and pay your taxes.", "draft": false, "year": null, "quarter": null, "requires_signing": true, "document_content_type": "application/pdf"}]
  get-v1-companies-company_id-company_benefits:
    Example:
      parameters:
        path:
          company_id: "<id>"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"version": "98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872", "company_uuid": "528cc543-8a41-497e-b479-23a4c5ec77ac", "uuid": "d2cec746-caee-464a-bcaf-00d93f7049c9", "benefit_type": 1, "active": true, "description": "Kaiser Permanente", "deletable": true, "supports_percentage_amounts": true, "responsible_for_employer_taxes": false, "responsible_for_employee_w2": false}]
  get-invoices-invoice-period:
    example:
      parameters:
        path:
          invoice_period: "2020-01"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"active_companies": [{"company_uuid": "05ed3150-591e-4f8b-bfd5-55d478edd2d8", "active_employees": 5, "active_contractors": 3, "initial_invoice_period": "2022-01"}, {"company_uuid": "9b37429c-e540-40fb-86b3-738ca9af65c7", "active_employees": 0, "active_contractors": 1, "initial_invoice_period": "2023-05"}]}
    Basic:
      parameters:
        path:
          invoice_period: "2020-01"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          invoice_period: "2020-01"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          invoice_period: "2020-01"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-companies-attachment:
    Example:
      parameters:
        path:
          company_id: "<id>"
          company_attachment_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "1263eae5-4411-48d9-bd6d-18ed93082e65", "name": "Company_Attachment_File.pdf", "category": "gep_notice", "upload_time": "2022-02-01T00:00:00.000Z"}
  get-v1-companies-attachments:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "5de11791-98fd-4587-9ed0-d5d804b8e647", "name": "Company_Attachment_File1.pdf", "category": "gep_notice", "upload_time": "2022-02-01T00:00:00.000Z"}, {"uuid": "987058cc-23ee-46e9-81ef-5cee086cceca", "name": "Company_Attachment_File2.pdf", "category": "gep_notice", "upload_time": "2022-02-01T00:00:00.000Z"}]
  post-v1-companies-attachment:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        multipart/form-data: {"document": {"": "x-file: example.file"}, "category": "gep_notice"}
      responses:
        "201":
          application/json: {"uuid": "1263eae5-4411-48d9-bd6d-18ed93082e65", "name": "Company_Attachment_File.pdf", "category": "gep_notice", "upload_time": "2022-02-01T00:00:00.000Z"}
    Basic:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        multipart/form-data: {"document": {"": "x-file: example.file"}, "category": "compliance"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        multipart/form-data: {"document": {"": "x-file: example.file"}, "category": "gep_notice"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        multipart/form-data: {"document": {"": "x-file: example.file"}, "category": "gep_notice"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-companies-attachment-url:
    Example:
      parameters:
        path:
          company_id: "<id>"
          company_attachment_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"url": "https://s3.amazonaws.com/static.gusto.com/assets/uploaded_files/334721.pdf?parameter=daer8r3432423djklsdafaso"}
  get-v1-companies-company_id-federal_tax_details:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"version": "5521489cc7c93732300805dcf87a5fd3", "tax_payer_type": "S-Corporation", "taxable_as_scorp": true, "filing_form": "941", "has_ein": true, "ein_verified": true, "legal_name": "Company Name LLC", "effective_date": "2024-01-01", "deposit_schedule": "Semiweekly"}
  put-v1-companies-company_id-federal_tax_details:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"legal_name": "Acme Corp.", "tax_payer_type": "LLP", "filing_form": "944", "taxable_as_scorp": false, "version": "6cb95e00540706ca48d4577b3c839fbe"}
      responses:
        "200":
          application/json: {"version": "5521489cc7c93732300805dcf87a5fd3", "tax_payer_type": "S-Corporation", "taxable_as_scorp": true, "filing_form": "941", "has_ein": true, "ein_verified": true, "legal_name": "Company Name LLC", "effective_date": "2024-01-01", "deposit_schedule": "Semiweekly"}
    Basic:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-company-industry:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"company_uuid": "423dd616-6dbc-4724-938a-403f6217a933", "naics_code": "611420", "sic_codes": ["8243"], "title": "Computer Training"}
  put-v1-company-industry:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"title": "Computer Training", "naics_code": "611420", "sic_codes": ["8243"]}
      responses:
        "201":
          application/json: {"company_uuid": "423dd616-6dbc-4724-938a-403f6217a933", "naics_code": "611420", "sic_codes": ["8243"], "title": "Computer Training"}
    Basic:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"naics_code": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"naics_code": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"naics_code": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  post-v1-company-signatories:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"ssn": "<value>", "first_name": "Jed", "last_name": "Johnson", "email": "Annie.Wiegand16@gmail.com", "title": "<value>", "phone": "857-932-0220 x31016", "birthday": "<value>", "home_address": {"street_1": "<value>", "city": "North Lilly", "state": "North Carolina", "zip": "05065"}}
      responses:
        "200":
          application/json: {"uuid": "f8c653dc-0094-41fb-8670-45d6399afade", "first_name": "Bob", "last_name": "Johnson", "title": "Owner", "phone": "4239879876", "email": "olin.okuneva@denesik.us", "birthday": "2002-10-31", "is_admin": false, "has_ssn": true, "version": "49ea586f528411f5cfadfd54452b2423", "identity_verification_status": "Skipped", "home_address": {"street_1": "524 Roob Divide", "street_2": "Suite 565", "city": "San Francisco", "state": "CA", "zip": "94107", "country": "USA"}}
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"ssn": "<value>", "first_name": "Sven", "last_name": "Kunze", "email": "Otho78@gmail.com", "title": "<value>", "phone": "545.244.3901", "birthday": "<value>", "home_address": {"street_1": "<value>", "city": "New Josiane", "state": "Kentucky", "zip": "11880"}}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"ssn": "<value>", "first_name": "Tania", "last_name": "Lindgren", "email": "Clotilde.Hermann67@gmail.com", "title": "<value>", "phone": "(952) 347-9826 x26246", "birthday": "<value>", "home_address": {"street_1": "<value>", "city": "Montanafield", "state": "Colorado", "zip": "82730-9658"}}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"ssn": "<value>", "first_name": "Winfield", "last_name": "Grady-Cruickshank", "email": "Paula_Weber@hotmail.com", "title": "<value>", "phone": "(773) 321-8929", "birthday": "<value>", "home_address": {"street_1": "<value>", "city": "Lakeland", "state": "Louisiana", "zip": "12614-6739"}}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-companies-company_uuid-signatories:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "f8c653dc-0094-41fb-8670-45d6399afade", "first_name": "Bob", "last_name": "Johnson", "title": "Owner", "phone": "4239879876", "email": "olin.okuneva@denesik.us", "birthday": "2002-10-31", "is_admin": false, "has_ssn": true, "version": "49ea586f528411f5cfadfd54452b2423", "identity_verification_status": "Skipped", "home_address": {"street_1": "524 Roob Divide", "street_2": "Suite 565", "city": "San Francisco", "state": "CA", "zip": "94107", "country": "USA"}}]
  post-v1-companies-company_uuid-signatories-invite:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"email": "Maureen_Wyman@yahoo.com"}
      responses:
        "201":
          application/json: {"uuid": "f8c653dc-0094-41fb-8670-45d6399afade", "first_name": "Bob", "last_name": "Johnson", "title": "Owner", "phone": "4239879876", "email": "olin.okuneva@denesik.us", "birthday": "2002-10-31", "is_admin": false, "has_ssn": true, "version": "49ea586f528411f5cfadfd54452b2423", "identity_verification_status": "Skipped", "home_address": {"street_1": "524 Roob Divide", "street_2": "Suite 565", "city": "San Francisco", "state": "CA", "zip": "94107", "country": "USA"}}
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"email": "Fidel_Witting91@gmail.com"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"email": "David.Prosacco54@yahoo.com"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"email": "Cassie.Corwin26@yahoo.com"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  put-v1-companies-company_uuid-signatories-signatory_uuid:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
          signatory_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "200":
          application/json: {"uuid": "f8c653dc-0094-41fb-8670-45d6399afade", "first_name": "Bob", "last_name": "Johnson", "title": "Owner", "phone": "4239879876", "email": "olin.okuneva@denesik.us", "birthday": "2002-10-31", "is_admin": false, "has_ssn": true, "version": "49ea586f528411f5cfadfd54452b2423", "identity_verification_status": "Skipped", "home_address": {"street_1": "524 Roob Divide", "street_2": "Suite 565", "city": "San Francisco", "state": "CA", "zip": "94107", "country": "USA"}}
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
          signatory_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
          signatory_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
          signatory_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  delete-v1-companies-company_uuid-signatories-signatory_uuid:
    speakeasy-default-delete-v1-companies-company-uuid-signatories-signatory-uuid:
      parameters:
        path:
          company_uuid: "<id>"
          signatory_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
  post-v1-company-flows:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"flow_type": "company_onboarding"}
      responses:
        "201":
          application/json: {"url": "https://flows.gusto-demo.com/flows/lO2BHHAMCScPVV9G5WEURW0Im_nP9mGYloQgjUWbenQ"}
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"flow_type": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"flow_type": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"flow_type": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  post-v1-companies-company_id-locations:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"phone_number": "8009360383", "street_1": "425 2nd Street", "street_2": "Suite 602", "city": "San Francisco", "state": "CA", "zip": "94107"}
      responses:
        "201":
          application/json: {"uuid": "04552eb9-7829-4b18-ae96-6983552948df", "version": "7d9753112507b9dda4fb97910f39b06e", "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb", "phone_number": "5825710808", "street_1": "412 Kiera Stravenue", "street_2": "Suite 391", "city": "San Francisco", "state": "CA", "zip": "94107", "country": "USA", "active": true, "mailing_address": false, "filing_address": false, "created_at": "2023-09-12T16:42:25.000-07:00", "updated_at": "2023-09-12T16:42:25.000-07:00"}
    Basic:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"phone_number": "741.279.0107 x857", "street_1": "<value>", "city": "Grand Island", "state": "Illinois", "zip": "22031"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"phone_number": "(263) 266-2050", "street_1": "<value>", "city": "Lubowitzside", "state": "Minnesota", "zip": "27179"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"phone_number": "824-550-4439 x01255", "street_1": "<value>", "city": "South Barrett", "state": "Georgia", "zip": "80985-0183"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-companies-company_id-locations:
    Example:
      parameters:
        path:
          company_id: "<id>"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "04552eb9-7829-4b18-ae96-6983552948df", "version": "7d9753112507b9dda4fb97910f39b06e", "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb", "phone_number": "5825710808", "street_1": "412 Kiera Stravenue", "street_2": "Suite 391", "city": "San Francisco", "state": "CA", "zip": "94107", "country": "USA", "active": true, "mailing_address": false, "filing_address": false, "created_at": "2023-09-12T16:42:25.000-07:00", "updated_at": "2023-09-12T16:42:25.000-07:00"}, {"uuid": "fa94a2fd-11a8-4024-87ff-85c587d9d2b4", "version": "15e6b9680e00f3122729e64e3cef3224", "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb", "phone_number": "2866070827", "street_1": "644 Fay Vista", "street_2": "Suite 842", "city": "Richmond", "state": "VA", "zip": "23218", "country": "USA", "active": true, "mailing_address": false, "filing_address": false, "created_at": "2023-09-12T16:42:25.000-07:00", "updated_at": "2023-09-12T16:42:25.000-07:00"}]
  get-v1-locations-location_id:
    Example:
      parameters:
        path:
          location_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "04552eb9-7829-4b18-ae96-6983552948df", "version": "7d9753112507b9dda4fb97910f39b06e", "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb", "phone_number": "5825710808", "street_1": "412 Kiera Stravenue", "street_2": "Suite 391", "city": "San Francisco", "state": "CA", "zip": "94107", "country": "USA", "active": true, "mailing_address": false, "filing_address": false, "created_at": "2023-09-12T16:42:25.000-07:00", "updated_at": "2023-09-12T16:42:25.000-07:00"}
  put-v1-locations-location_id:
    Example:
      parameters:
        path:
          location_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "1928d0c378e519e9c03fb959bc959a6b", "phone_number": "8009360383", "street_1": "425 2nd Street", "street_2": "Suite 602", "city": "San Francisco", "state": "CA", "zip": "94107", "country": "USA"}
      responses:
        "200":
          application/json: {"uuid": "04552eb9-7829-4b18-ae96-6983552948df", "version": "7d9753112507b9dda4fb97910f39b06e", "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb", "phone_number": "5825710808", "street_1": "412 Kiera Stravenue", "street_2": "Suite 391", "city": "San Francisco", "state": "CA", "zip": "94107", "country": "USA", "active": true, "mailing_address": false, "filing_address": false, "created_at": "2023-09-12T16:42:25.000-07:00", "updated_at": "2023-09-12T16:42:25.000-07:00"}
    Basic:
      parameters:
        path:
          location_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          location_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          location_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-locations-location_uuid-minimum_wages:
    Example:
      parameters:
        path:
          location_uuid: "<id>"
        query:
          effective_date: "2020-01-31"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "70c523ff-c71e-4474-9c83-a4ea51bd54a8", "wage": "13.0", "wage_type": "Regular", "effective_date": "2022-01-01", "authority": "State", "notes": "Employers with 6 or more employees"}]
  post-v1-companies-company_id-bank-accounts:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"routing_number": "115092013", "account_number": "9775014007", "account_type": "Checking"}
      responses:
        "201":
          application/json: {"uuid": "1263eae5-4411-48d9-bd6d-18ed93082e65", "company_uuid": "e2c4c0ce-2986-48b9-86cf-ec27f6ed9a36", "account_type": "Checking", "routing_number": "851070439", "hidden_account_number": "XXXX4087", "verification_status": "verified", "verification_type": "bank_deposits", "name": "Employer Funding Account"}
    Basic:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-companies-company_id-bank-accounts:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "1263eae5-4411-48d9-bd6d-18ed93082e65", "company_uuid": "e2c4c0ce-2986-48b9-86cf-ec27f6ed9a36", "account_type": "Checking", "routing_number": "851070439", "hidden_account_number": "XXXX4087", "verification_status": "verified", "verification_type": "bank_deposits", "name": "Employer Funding Account"}]
  put-v1-companies-company_id-bank-accounts-verify:
    Example:
      parameters:
        path:
          bank_account_uuid: "<id>"
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"deposit_1": 0.02, "deposit_2": 0.42}
      responses:
        "200":
          application/json: {"uuid": "1263eae5-4411-48d9-bd6d-18ed93082e65", "company_uuid": "e2c4c0ce-2986-48b9-86cf-ec27f6ed9a36", "account_type": "Checking", "routing_number": "851070439", "hidden_account_number": "XXXX4087", "verification_status": "verified", "verification_type": "bank_deposits", "name": "Employer Funding Account"}
    Basic:
      parameters:
        path:
          bank_account_uuid: "<id>"
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"deposit_1": 7888.92, "deposit_2": 1895.95}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          bank_account_uuid: "<id>"
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"deposit_1": 1870.97, "deposit_2": 2271.38}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          bank_account_uuid: "<id>"
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"deposit_1": 7567.55, "deposit_2": 3940.54}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  post-v1-plaid-processor_token:
    Create a company bank account:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"owner_type": "Company", "owner_id": "ef279fbd-0fc6-4cf1-a977-6939d621c429", "processor_token": "processor-sandbox-0asd1-a92nc"}
      responses:
        "201":
          application/json: {"uuid": "6e6b4db1-4b72-4e45-bc8e-a702da590ac0"}
        "422": {}
    Example:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"owner_type": "Company", "owner_id": "<id>", "processor_token": "<value>"}
      responses:
        "201":
          application/json: {"uuid": "1263eae5-4411-48d9-bd6d-18ed93082e65", "company_uuid": "e2c4c0ce-2986-48b9-86cf-ec27f6ed9a36", "account_type": "Checking", "routing_number": "851070439", "hidden_account_number": "XXXX4087", "verification_status": "verified", "verification_type": "plaid_external", "name": "Employer Funding Account"}
    Basic:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"owner_type": "Company", "owner_id": "<id>", "processor_token": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"owner_type": "Company", "owner_id": "<id>", "processor_token": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"owner_type": "Company", "owner_id": "<id>", "processor_token": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  post-v1-external-payroll:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"check_date": "2022-06-01", "payment_period_start_date": "2022-05-15", "payment_period_end_date": "2022-05-30"}
      responses:
        "200":
          application/json: {"uuid": "c5fdae57-5483-4529-9aae-f0edceed92d4", "company_uuid": "bcb305b0-2855-4025-8d22-e484a9e6b7c9", "check_date": "2022-06-03T00:00:00Z", "payment_period_start_date": "2022-05-15T00:00:00Z", "payment_period_end_date": "2022-05-30T00:00:00Z", "status": "unprocessed", "external_payroll_items": [{"employee_uuid": "44f7cba9-7a3d-4f08-b7bd-6fcf5211f8ca", "earnings": [{"amount": "10000.0", "hours": "0.0", "earning_type": "CompanyPayType", "earning_id": 1}, {"amount": "500.0", "hours": "0.0", "earning_type": "CompanyEarningType", "earning_id": 4}], "benefits": [{"benefit_id": 22, "company_contribution_amount": "100.0", "employee_deduction_amount": "50.0"}, {"benefit_id": 25, "company_contribution_amount": "0.0", "employee_deduction_amount": "300.0"}], "taxes": [{"tax_id": 1, "amount": "400.0"}, {"tax_id": 2, "amount": "60.0"}]}], "applicable_earnings": [{"earning_type": "CompanyPayType", "earning_id": 1, "name": "Regular Wages", "input_type": "amount", "category": "default"}, {"earning_type": "CompanyEarningType", "earning_id": 4, "name": "Cash Tips", "input_type": "amount", "category": "default"}], "applicable_benefits": [{"id": 22, "description": "Kaiser", "active": true}, {"id": 25, "description": "HSA", "active": true}], "applicable_taxes": [{"id": 1, "name": "Federal Income Tax", "employer_tax": false, "resident_tax": false}, {"id": 2, "name": "Social Security", "employer_tax": false, "resident_tax": false}], "metadata": {"deletable": true}}
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"check_date": "<value>", "payment_period_start_date": "<value>", "payment_period_end_date": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"check_date": "<value>", "payment_period_start_date": "<value>", "payment_period_end_date": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"check_date": "<value>", "payment_period_start_date": "<value>", "payment_period_end_date": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-company-external-payrolls:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "c5fdae57-5483-4529-9aae-f0edceed92d4", "company_uuid": "bcb305b0-2855-4025-8d22-e484a9e6b7c9", "check_date": "2022-06-03T00:00:00Z", "payment_period_start_date": "2022-05-15T00:00:00Z", "payment_period_end_date": "2022-05-30T00:00:00Z", "status": "unprocessed"}]
  get-v1-external-payroll:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
          external_payroll_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "c5fdae57-5483-4529-9aae-f0edceed92d4", "company_uuid": "bcb305b0-2855-4025-8d22-e484a9e6b7c9", "check_date": "2022-06-03T00:00:00Z", "payment_period_start_date": "2022-05-15T00:00:00Z", "payment_period_end_date": "2022-05-30T00:00:00Z", "status": "unprocessed", "external_payroll_items": [{"employee_uuid": "44f7cba9-7a3d-4f08-b7bd-6fcf5211f8ca", "earnings": [{"amount": "10000.0", "hours": "0.0", "earning_type": "CompanyPayType", "earning_id": 1}, {"amount": "500.0", "hours": "0.0", "earning_type": "CompanyEarningType", "earning_id": 4}], "benefits": [{"benefit_id": 22, "company_contribution_amount": "100.0", "employee_deduction_amount": "50.0"}, {"benefit_id": 25, "company_contribution_amount": "0.0", "employee_deduction_amount": "300.0"}], "taxes": [{"tax_id": 1, "amount": "400.0"}, {"tax_id": 2, "amount": "60.0"}]}], "applicable_earnings": [{"earning_type": "CompanyPayType", "earning_id": 1, "name": "Regular Wages", "input_type": "amount", "category": "default"}, {"earning_type": "CompanyEarningType", "earning_id": 4, "name": "Cash Tips", "input_type": "amount", "category": "default"}], "applicable_benefits": [{"id": 22, "description": "Kaiser", "active": true}, {"id": 25, "description": "HSA", "active": true}], "applicable_taxes": [{"id": 1, "name": "Federal Income Tax", "employer_tax": false, "resident_tax": false}, {"id": 2, "name": "Social Security", "employer_tax": false, "resident_tax": false}], "metadata": {"deletable": true}}
  delete-v1-external-payroll:
    speakeasy-default-delete-v1-external-payroll:
      parameters:
        path:
          company_uuid: "<id>"
          external_payroll_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
  put-v1-external-payroll:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
          external_payroll_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"replace_fields": true, "external_payroll_items": [{"employee_uuid": "403c6ee3-5f58-40ef-a117-ff7175cd9ee3", "earnings": [{"hours": "0.0", "amount": "200.00", "earning_id": 1, "earning_type": "CompanyPayType"}, {"hours": "0.0", "amount": "5000.00", "earning_id": 2, "earning_type": "CompanyEarningType"}], "benefits": [{"company_contribution_amount": "300.0", "employee_deduction_amount": "300.0", "benefit_id": 10}, {"company_contribution_amount": "50.0", "employee_deduction_amount": "100.0", "benefit_id": 21}], "taxes": [{"amount": "20.0", "tax_id": 1}, {"amount": "100.0", "tax_id": 2}]}]}
      responses:
        "200":
          application/json: {"uuid": "c5fdae57-5483-4529-9aae-f0edceed92d4", "company_uuid": "bcb305b0-2855-4025-8d22-e484a9e6b7c9", "check_date": "2022-06-03T00:00:00Z", "payment_period_start_date": "2022-05-15T00:00:00Z", "payment_period_end_date": "2022-05-30T00:00:00Z", "status": "unprocessed", "external_payroll_items": [{"employee_uuid": "44f7cba9-7a3d-4f08-b7bd-6fcf5211f8ca", "earnings": [{"amount": "10000.0", "hours": "0.0", "earning_type": "CompanyPayType", "earning_id": 1}, {"amount": "500.0", "hours": "0.0", "earning_type": "CompanyEarningType", "earning_id": 4}], "benefits": [{"benefit_id": 22, "company_contribution_amount": "100.0", "employee_deduction_amount": "50.0"}, {"benefit_id": 25, "company_contribution_amount": "0.0", "employee_deduction_amount": "300.0"}], "taxes": [{"tax_id": 1, "amount": "400.0"}, {"tax_id": 2, "amount": "60.0"}]}], "applicable_earnings": [{"earning_type": "CompanyPayType", "earning_id": 1, "name": "Regular Wages", "input_type": "amount", "category": "default"}, {"earning_type": "CompanyEarningType", "earning_id": 4, "name": "Cash Tips", "input_type": "amount", "category": "default"}], "applicable_benefits": [{"id": 22, "description": "Kaiser", "active": true}, {"id": 25, "description": "HSA", "active": true}], "applicable_taxes": [{"id": 1, "name": "Federal Income Tax", "employer_tax": false, "resident_tax": false}, {"id": 2, "name": "Social Security", "employer_tax": false, "resident_tax": false}], "metadata": {"deletable": true}}
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
          external_payroll_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
          external_payroll_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
          external_payroll_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-external-payroll-calculate-taxes:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
          external_payroll_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"employee_uuid": "d21848d5-446f-48a8-9430-30fbefeabda4", "tax_suggestions": [{"tax_id": 1, "amount": "500.0"}, {"tax_id": 2, "amount": "100.0"}, {"tax_id": 4, "amount": "30.0"}]}]
  get-v1-tax-liabilities:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [[{"tax_id": 1, "tax_name": "Federal Income Tax", "last_unpaid_external_payroll_uuid": null, "possible_liabilities": [{"liability_amount": "0.0", "payroll_check_date": null, "external_payroll_uuid": null}, {"liability_amount": "3000.0", "payroll_check_date": "2022-06-01T00:00:00Z", "external_payroll_uuid": "1bf1efe1-72d4-4e6e-a181-611f3ea66435"}]}], [{"tax_id": 2, "tax_name": "Social Security", "last_unpaid_external_payroll_uuid": null, "possible_liabilities": [{"liability_amount": "0.0", "payroll_check_date": null, "external_payroll_uuid": null}, {"liability_amount": "50.0", "payroll_check_date": "2022-06-01T00:00:00Z", "external_payroll_uuid": "1bf1efe1-72d4-4e6e-a181-611f3ea66435"}]}]]
  put-v1-tax-liabilities:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"liability_selections": [{"tax_id": 1, "last_unpaid_external_payroll_uuid": "7985032c-ee3a-4e98-af27-d56551eb5f1c", "unpaid_liability_amount": 50}, {"tax_id": 2, "last_unpaid_external_payroll_uuid": "5ed14dbb-958f-47c8-b16e-c4fed82dc486", "unpaid_liability_amount": 400}, {"tax_id": 8, "last_unpaid_external_payroll_uuid": null, "unpaid_liability_amount": 0}]}
      responses:
        "200":
          application/json: [[{"tax_id": 1, "tax_name": "Federal Income Tax", "last_unpaid_external_payroll_uuid": null, "possible_liabilities": [{"liability_amount": "0.0", "payroll_check_date": null, "external_payroll_uuid": null}, {"liability_amount": "3000.0", "payroll_check_date": "2022-06-01T00:00:00Z", "external_payroll_uuid": "1bf1efe1-72d4-4e6e-a181-611f3ea66435"}]}], [{"tax_id": 2, "tax_name": "Social Security", "last_unpaid_external_payroll_uuid": null, "possible_liabilities": [{"liability_amount": "0.0", "payroll_check_date": null, "external_payroll_uuid": null}, {"liability_amount": "50.0", "payroll_check_date": "2022-06-01T00:00:00Z", "external_payroll_uuid": "1bf1efe1-72d4-4e6e-a181-611f3ea66435"}]}]]
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  put-v1-tax-liabilities-finish:
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-company-payment-configs:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"company_uuid": "423dd616-6dbc-4724-938a-403f6217a933", "partner_uuid": "556f05d0-48e0-4c47-bce5-db9aea923043", "fast_payment_limit": "5000", "payment_speed": "2-day"}
  put-v1-company-payment-configs:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"fast_payment_limit": "5000", "payment_speed": "2-day"}
      responses:
        "200":
          application/json: {"company_uuid": "423dd616-6dbc-4724-938a-403f6217a933", "partner_uuid": "556f05d0-48e0-4c47-bce5-db9aea923043", "fast_payment_limit": "5000", "payment_speed": "2-day"}
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"payment_speed": "2-day"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"fast_payment_limit": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"payment_speed": "2-day"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  post-v1-companies-company_id-pay_schedules:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"frequency": "Twice per month", "anchor_pay_date": "2021-10-15", "anchor_end_of_pay_period": "2021-10-15", "day_1": 15, "day_2": 31, "custom_name": "demo pay schedule"}
      responses:
        "201":
          application/json: {"uuid": "f2a69c38-e2f9-4e31-b5c5-4754fc60a052", "frequency": "Twice per month", "anchor_pay_date": "2020-05-15", "anchor_end_of_pay_period": "2020-05-08", "day_1": 15, "day_2": 31, "name": "Engineering", "custom_name": "A new monthly pay schedule", "auto_pilot": false, "active": true}
    Basic:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"frequency": "Every other week", "anchor_pay_date": "2020-05-15", "anchor_end_of_pay_period": "2020-05-08"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"frequency": "Twice per month", "anchor_pay_date": "2020-05-15", "anchor_end_of_pay_period": "2020-05-08"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"frequency": "Every other week", "anchor_pay_date": "2020-05-15", "anchor_end_of_pay_period": "2020-05-08"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-companies-company_id-pay_schedules:
    Example:
      parameters:
        path:
          company_id: "<id>"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "2097fe08-407a-46d7-b35c-a32402a2355e", "frequency": "Twice per month", "anchor_pay_date": "2020-05-15", "anchor_end_of_pay_period": "2020-05-08", "day_1": 15, "day_2": 31, "name": "Engineering", "custom_name": "Engineering department pay schedule", "auto_pilot": false, "active": true}, {"uuid": "8fc9f556-74fa-4271-97f6-4bfbfc5a5352", "frequency": "Monthly", "anchor_pay_date": "2020-05-31", "day_1": 31, "day_2": null, "name": "Sales", "custom_name": "Sales department monthly schedule", "auto_pilot": false, "active": false}, {"uuid": "0e07d35a-af11-4123-bfcb-4dd5f2f12ee1", "frequency": "Monthly", "anchor_pay_date": "2020-05-31", "day_1": 31, "day_2": null, "name": "Staff", "custom_name": "Staff department pay schedule", "auto_pilot": true, "active": false}]
  get-v1-companies-company_id-pay_schedules-preview:
    Example:
      parameters:
        path:
          company_id: "<id>"
        query:
          frequency: "Every other week"
          anchor_pay_date: "2020-05-15"
          anchor_end_of_pay_period: "2020-05-08"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"pay_periods": [{"check_date": "2023-12-15T00:00:00Z", "run_payroll_by": "2023-12-13T00:00:00Z", "start_date": "2023-10-01T00:00:00Z", "end_date": "2023-12-31T00:00:00Z"}, {"check_date": "2024-03-15T00:00:00Z", "run_payroll_by": "2024-03-13T00:00:00Z", "start_date": "2024-01-01T00:00:00Z", "end_date": "2024-03-31T00:00:00Z"}, {"check_date": "2024-06-14T00:00:00Z", "run_payroll_by": "2024-06-12T00:00:00Z", "start_date": "2024-04-01T00:00:00Z", "end_date": "2024-06-30T00:00:00Z"}, {"check_date": "2024-09-13T00:00:00Z", "run_payroll_by": "2024-09-11T00:00:00Z", "start_date": "2024-07-01T00:00:00Z", "end_date": "2024-09-30T00:00:00Z"}], "holidays": ["2023-10-09T00:00:00Z", "2023-11-11T00:00:00Z", "2023-11-23T00:00:00Z", "2023-12-25T00:00:00Z", "2024-01-01T00:00:00Z", "2024-01-15T00:00:00Z", "2024-02-19T00:00:00Z", "2024-05-27T00:00:00Z", "2024-06-19T00:00:00Z", "2024-07-04T00:00:00Z", "2024-09-02T00:00:00Z"]}
  get-v1-companies-company_id-pay_schedules-pay_schedule_id:
    Example:
      parameters:
        path:
          company_id: "<id>"
          pay_schedule_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "f2a69c38-e2f9-4e31-b5c5-4754fc60a052", "frequency": "Twice per month", "anchor_pay_date": "2020-05-15", "anchor_end_of_pay_period": "2020-05-08", "day_1": 15, "day_2": 31, "name": "Engineering", "custom_name": "A new monthly pay schedule", "auto_pilot": false, "active": true}
  put-v1-companies-company_id-pay_schedules-pay_schedule_id:
    Example:
      parameters:
        path:
          company_id: "<id>"
          pay_schedule_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "68934a3e9455fa72420237eb05902327", "frequency": "Twice per month", "anchor_pay_date": "2021-10-15", "anchor_end_of_pay_period": "2021-10-15", "day_1": 15, "day_2": 31, "custom_name": "demo pay schedule", "auto_pilot": true}
      responses:
        "200":
          application/json: {"uuid": "f2a69c38-e2f9-4e31-b5c5-4754fc60a052", "frequency": "Twice per month", "anchor_pay_date": "2020-05-15", "anchor_end_of_pay_period": "2020-05-08", "day_1": 15, "day_2": 31, "name": "Engineering", "custom_name": "A new monthly pay schedule", "auto_pilot": false, "active": true}
    Basic:
      parameters:
        path:
          company_id: "<id>"
          pay_schedule_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "anchor_pay_date": "2020-05-15", "anchor_end_of_pay_period": "2020-05-08"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
          pay_schedule_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "anchor_pay_date": "2020-05-15", "anchor_end_of_pay_period": "2020-05-08"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
          pay_schedule_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "anchor_pay_date": "2020-05-15", "anchor_end_of_pay_period": "2020-05-08"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-companies-company_id-pay_periods:
    Example:
      parameters:
        path:
          company_id: "<id>"
        query:
          start_date: "2020-01-01"
          end_date: "2020-01-31"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"start_date": "2020-01-11", "end_date": "2020-01-24", "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501", "payroll": {"payroll_uuid": "bfd8aad4-9c3f-4ca3-b072-a1b2b3ea689f", "check_date": "2020-01-30", "processed": true, "payroll_deadline": "2020-01-28", "payroll_type": "regular"}}, {"start_date": "2020-12-12", "end_date": "2020-12-25", "pay_schedule_uuid": "cb53db72-612f-4eb1-9b85-389e79cfa510", "payroll": {"payroll_uuid": "7ed29b45-4bb1-4d38-bd94-4d607d49fd21", "check_date": "2020-12-30", "processed": true, "payroll_deadline": "2020-12-28", "payroll_type": "regular"}}]
  get-v1-companies-company_id-unprocessed_termination_pay_periods:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"start_date": "2023-01-11", "end_date": "2023-01-24", "check_date": "2023-01-28", "debit_date": "2023-01-26", "employee_name": "Mary Warner", "employee_uuid": "094f6ded-a790-4651-87e6-4a7f15dec7c6", "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501"}, {"start_date": "2023-01-25", "end_date": "2023-02-07", "check_date": "2023-02-10", "debit_date": "2023-02-08", "employee_name": "Mary Warner", "employee_uuid": "094f6ded-a790-4651-87e6-4a7f15dec7c6", "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501"}]
  get-v1-companies-company_id-pay_schedules-assignments:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"type": "by_employee", "employees": [{"employee_uuid": "f0238368-f2cf-43e2-9a07-b0265f2cec69", "pay_schedule_uuid": "c277ac52-9871-4a96-a1e6-0c449684602a"}]}
  post-v1-companies-company_id-pay_schedules-assignment_preview:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"type": "by_employee", "employees": [{"employee_uuid": "f0238368-f2cf-43e2-9a07-b0265f2cec69", "pay_schedule_uuid": "c277ac52-9871-4a96-a1e6-0c449684602a"}]}
      responses:
        "200":
          application/json: {"type": "hourly_salaried", "employee_changes": [{"employee_uuid": "43b39ada-dc49-4879-9594-fe95f67ae434", "first_name": "Penny", "last_name": "Parker", "pay_frequency": "Twice per month — Salaried pay schedule", "first_pay_period": {"pay_schedule_uuid": "3f029a58-155d-4c30-8361-cc266b2c1f11", "start_date": "2023-07-01T00:00:00Z", "end_date": "2023-08-01T00:00:00Z", "check_date": "2023-08-02T00:00:00Z"}, "transition_pay_period": {"start_date": "2023-06-20T00:00:00Z", "end_date": "2023-06-30T00:00:00Z"}}]}
    Basic:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"type": "hourly_salaried"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"type": "hourly_salaried"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"type": "single"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  post-v1-companies-company_id-pay_schedules-assign:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"type": "by_employee", "employees": [{"employee_uuid": "f0238368-f2cf-43e2-9a07-b0265f2cec69", "pay_schedule_uuid": "c277ac52-9871-4a96-a1e6-0c449684602a"}]}
    Basic:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"type": "by_department"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"type": "single"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"type": "hourly_salaried"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  post-v1-employees:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"first_name": "Soren", "middle_initial": "A", "last_name": "Kierkegaard", "preferred_first_name": "Angel", "date_of_birth": "1995-05-05", "email": "knight0faith@example.com", "ssn": "123456294"}
      responses:
        "201":
          application/json: {"uuid": "7a621cf0-21cd-49cf-8540-3315211a509a", "first_name": "Adrienne", "last_name": "Barrows", "eligible_paid_time_off": [{"accrual_unit": "Hour", "accrual_method": "unlimited", "accrual_period": "Year"}, {"accrual_unit": "Hour", "accrual_method": "unlimited", "accrual_period": "Year"}], "payment_method": "Check"}
        "422": {}
    Create Employee Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"first_name": "Kathryn", "last_name": "Klein"}
      responses:
        "201":
          application/json: {"uuid": "4b3f930f-82cd-48a8-b797-798686e12e5e", "first_name": "Isom", "middle_initial": null, "last_name": "Jaskolski", "email": "dane7757869450111550@botsford.net", "company_uuid": "a007e1ab-3595-43c2-ab4b-af7a5af2e365", "manager_uuid": "5e53e257-c8d6-45aa-aa8a-ec99283a3acd", "version": "1c7ba9d62c8bafbfff998ffccad5d296", "department": "Stage Hand", "terminated": false, "two_percent_shareholder": false, "onboarded": true, "onboarding_status": "onboarding_completed", "onboarding_documents_config": {"uuid": null, "i9_document": false}, "jobs": [{"uuid": "428a653a-0745-4db4-9c80-558288d416fa", "version": "6c0ed1521e8b86eb36bd4455a63a2dac", "employee_uuid": "f0689739-1985-49f3-b9ba-84562e71e85f", "hire_date": "2020-01-20", "title": "Client Support Director", "primary": true, "rate": "70000.00", "payment_unit": "Year", "current_compensation_uuid": "c9fd719b-8b07-48f3-8a4c-f447d2c59669", "compensations": [{"uuid": "145660ed-6fcc-4211-8915-18e2786290a2", "version": "2cd4b18662395eb53bcf80d5b5447f36", "job_uuid": "857feae3-414e-445d-b28b-2eb3ef50155e", "rate": "70000.00", "payment_unit": "Year", "flsa_status": "Exempt", "effective_date": "2021-01-20", "adjust_for_minimum_wage": false, "minimum_wages": []}]}], "eligible_paid_time_off": [{"name": "Sick Hours", "policy_name": "Sick Policy", "policy_uuid": "9940d205-9904-4e55-9fec-652628e84af7", "accrual_unit": "Hour", "accrual_rate": "208.0", "accrual_method": "per_hour_worked", "accrual_period": "Year", "accrual_balance": "31.8", "maximum_accrual_balance": "240.0", "paid_at_termination": false}, {"name": "Vacation Hours", "policy_name": "Vacation Policy", "policy_uuid": "ab59de61-239f-4805-933b-0e3360ed291c", "accrual_unit": "Hour", "accrual_rate": "208.0", "accrual_period": "Year", "accrual_balance": "77.8", "maximum_accrual_balance": "240.0", "paid_at_termination": true}], "terminations": [], "garnishments": [], "custom_fields": [{"id": "ee515986-f3ca-49da-b576-2691b95262f9", "company_custom_field_id": "ea7e5d57-6abb-47d7-b654-347c142886c0", "name": "employee_level", "type": "text", "description": "Employee Level", "value": "2", "selection_options": null}, {"id": "3796e08d-c2e3-434c-b4de-4ce1893e7b59", "company_custom_field_id": "299650e4-e970-4acf-9bf0-6f05585d20ba", "name": "t-shirt size", "type": "text", "description": "What is your t-shirt size?", "value": "md", "selection_options": null}, {"id": "3796e08d-c2e3-434c-b4de-4ce1893e7b59", "company_custom_field_id": "024ec137-6c92-43a3-b061-14a9720531d6", "name": "favorite fruit", "type": "radio", "description": "Which is your favorite fruit?", "value": "apple", "selection_options": ["apple", "banana", "orange"]}], "date_of_birth": "1986-06-25", "has_ssn": false, "ssn": "", "phone": "1234567890", "preferred_first_name": "Angel", "payment_method": "Check", "work_email": "angel.jaskolski@example.com"}
    Create Historical Employee Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"first_name": "Jerrod", "last_name": "Sawayn"}
      responses:
        "201":
          application/json: {"uuid": "ad85459f-8bf5-4a8f-9079-3b3fa790799e", "first_name": "Karl", "middle_initial": null, "last_name": "Jaskolski", "email": null, "company_uuid": "3c69d228-a250-49b4-9946-24e4e4294da4", "manager_uuid": null, "version": "dedac972dd28945fcd6cd941723cc71a", "department": null, "terminated": false, "two_percent_shareholder": false, "onboarded": true, "onboarding_status": "onboarding_completed", "onboarding_documents_config": {"uuid": null, "i9_document": false}, "jobs": [{"uuid": "f0be5480-7a15-4583-b0d0-789c02a1afe4", "version": "1c0722f3e090713b6a0db7c39904693e", "employee_uuid": "ad85459f-8bf5-4a8f-9079-3b3fa790799e", "hire_date": "2023-11-01", "title": "Client Support Director", "primary": true, "rate": "70000.00", "payment_unit": "Year", "current_compensation_uuid": "1a1faa42-274b-4440-b200-a5d81df14af2", "compensations": [{"uuid": "145660ed-6fcc-4211-8915-18e2786290a2", "version": "2cd4b18662395eb53bcf80d5b5447f36", "job_uuid": "857feae3-414e-445d-b28b-2eb3ef50155e", "rate": "70000.00", "payment_unit": "Year", "flsa_status": "Exempt", "effective_date": "2023-11-01", "adjust_for_minimum_wage": false, "minimum_wages": []}]}], "eligible_paid_time_off": [], "terminations": [{"uuid": "ad85459f-8bf5-4a8f-9079-3b3fa790799e", "version": "e6c865df784842196d411c1466b01686", "employee_uuid": "ad85459f-8bf5-4a8f-9079-3b3fa790799e", "active": false, "cancelable": true, "effective_date": "2023-12-31T00:00:00Z", "run_termination_payroll": false}], "garnishments": [], "date_of_birth": "1986-06-25", "has_ssn": false, "ssn": "", "phone": null, "preferred_first_name": null, "payment_method": "Check", "work_email": null}
    Basic:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"first_name": "Brigitte", "last_name": "Waelchi"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"first_name": "Osborne", "last_name": "Ernser"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"first_name": "Isobel", "last_name": "McKenzie"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-companies-company_id-employees:
    Example:
      parameters:
        path:
          company_id: "<id>"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "9779767c-6044-48e0-bf68-aeb370b9a2e7", "first_name": "Nicole", "middle_initial": "M", "last_name": "Boehm", "email": "kory7757869450111548@barton-hermiston.io", "company_uuid": "c44d66dc-c41b-4a60-9e25-5e93ff8583f2", "manager_uuid": "5e53e257-c8d6-45aa-aa8a-ec99283a3acd", "version": "414dedaca594b77135e0b8d2f398516d", "department": "Stage Hand", "terminated": false, "two_percent_shareholder": false, "onboarded": true, "onboarding_status": "onboarding_completed", "onboarding_documents_config": {"uuid": "9d5e3ce5-ea8f-4885-90e5-7ebbed03f7c5", "i9_document": true}, "jobs": [{"uuid": "5d5e3ce5-ea8f-4885-90e5-7ebaed03f7c5", "version": "91179081a7309c9fbd31bb3cf7b9893e", "employee_uuid": "a987bce1-6d06-43f8-9978-9db886f479fb", "hire_date": "2020-01-20", "title": "Client Support Manager", "primary": true, "rate": "22.00", "payment_unit": "Hour", "current_compensation_uuid": "798a962f-0fcf-491e-9b71-cfa6a1db114f", "compensations": [{"uuid": "94f17a77-cfe5-436a-af94-422bbf8248ff", "version": "233f0096a8015e62d9795fadf1fd300d", "job_uuid": "64711ac0-83ff-4aaf-bec1-db72f5a44e56", "rate": "22.00", "payment_unit": "Hour", "flsa_status": "Nonexempt", "effective_date": "2021-01-20", "adjust_for_minimum_wage": false, "minimum_wages": []}]}], "eligible_paid_time_off": [{"name": "Sick Hours", "policy_name": "Sick Policy", "policy_uuid": "9940d205-9904-4e55-9fec-652628e84af7", "accrual_unit": "Hour", "accrual_rate": "208.0", "accrual_method": "per_hour_worked", "accrual_period": "Year", "accrual_balance": "71.0", "maximum_accrual_balance": "240.0", "paid_at_termination": false}, {"name": "Vacation Hours", "policy_name": "Vacation Policy", "policy_uuid": "8b312f0e-30e7-4810-9c06-1177a6484f2d", "accrual_unit": "Hour", "accrual_rate": "208.0", "accrual_period": "Year", "accrual_balance": "34.0", "maximum_accrual_balance": "240.0", "paid_at_termination": true}], "terminations": [], "garnishments": [], "date_of_birth": "1996-05-08", "has_ssn": true, "ssn": "", "phone": "1234567890", "preferred_first_name": "Vanessa", "payment_method": "Check", "work_email": "vanessa.boehm@example.com"}, {"uuid": "d7cb289a-af62-4120-9cd5-acda324b5c04", "first_name": "Maci", "middle_initial": "M", "last_name": "Cassin", "email": "claud_reinger7757869450111549@gutkowski.net", "company_uuid": "4522d043-5731-406d-a129-de1808042a32", "manager_uuid": "5e53e257-c8d6-45aa-aa8a-ec99283a3acd", "version": "e867459e1360fa71e78b88142923d341", "department": "Band", "terminated": false, "two_percent_shareholder": false, "onboarded": true, "onboarding_status": "onboarding_completed", "onboarding_documents_config": {"uuid": "1d5e3ce5-ea8f-4885-90e5-7ebbed03f7c5", "i9_document": true}, "jobs": [{"uuid": "62a00cf7-342b-465e-a151-ecd295152be0", "version": "d0e719137f89ca3dd334dd4cc248ffbb", "employee_uuid": "5e53e257-c8d6-45aa-aa8a-ec99283a3acd", "hire_date": "2020-01-20", "title": "Account Director", "primary": true, "rate": "78000.00", "payment_unit": "Year", "current_compensation_uuid": "93e5da92-173b-4faa-a0bd-d1a8dee68be0", "compensations": [{"uuid": "1bad5177-c4ed-432e-ab43-66055d40c3a5", "version": "994b75511d1debac5d7e2ddeae13679f", "job_uuid": "1214875b-f43d-4267-bf2f-a6d2c298ff3d", "rate": "78000.00", "payment_unit": "Year", "flsa_status": "Exempt", "effective_date": "2021-01-20", "adjust_for_minimum_wage": false, "minimum_wages": []}]}], "eligible_paid_time_off": [{"name": "Sick Hours", "policy_name": "Sick Policy", "policy_uuid": "8b312f0e-30e7-4810-9c06-1177a6484f2d", "accrual_unit": "Hour", "accrual_rate": "208.0", "accrual_method": "per_hour_worked", "accrual_period": "Year", "accrual_balance": "74.0", "maximum_accrual_balance": "240.0", "paid_at_termination": false}, {"name": "Vacation Hours", "policy_name": "Vacation Policy", "policy_uuid": "0d4c755e-50ac-4c54-b46e-81bdfa03da5b", "accrual_unit": "Hour", "accrual_rate": "208.0", "accrual_period": "Year", "accrual_balance": "16.0", "maximum_accrual_balance": "240.0", "paid_at_termination": true}], "terminations": [], "garnishments": [], "custom_fields": [{"id": "ee515986-f3ca-49da-b576-2691b95262f9", "company_custom_field_id": "ea7e5d57-6abb-47d7-b654-347c142886c0", "name": "employee_level", "type": "text", "description": "Employee Level", "value": "2", "selection_options": null}, {"id": "3796e08d-c2e3-434c-b4de-4ce1893e7b59", "company_custom_field_id": "299650e4-e970-4acf-9bf0-6f05585d20ba", "name": "t-shirt size", "type": "text", "description": "What is your t-shirt size?", "value": "md", "selection_options": null}, {"id": "3796e08d-c2e3-434c-b4de-4ce1893e7b59", "company_custom_field_id": "024ec137-6c92-43a3-b061-14a9720531d6", "name": "favorite fruit", "type": "radio", "description": "Which is your favorite fruit?", "value": "apple", "selection_options": ["apple", "banana", "orange"]}], "date_of_birth": "1995-09-21", "has_ssn": true, "ssn": "", "phone": "1234567890", "preferred_first_name": "Denis", "payment_method": "Check", "work_email": "denis.cassin@example.com"}]
  post-v1-historical_employees:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"first_name": "Soren", "middle_initial": "A", "last_name": "Kierkegaard", "preferred_first_name": "Angel", "date_of_birth": "1995-05-05T00:00:00Z", "ssn": "123456294", "work_address": {"location_uuid": "1da85d35-1910-4d5e-8e94-39e8cdfe8c9a"}, "home_address": {"street_1": "300 3rd Street", "street_2": null, "city": "San Francisco", "state": "CA", "zip": "94107"}, "termination": {"effective_date": "2022-09-15T00:00:00Z"}, "job": {"hire_date": "2018-05-09T00:00:00Z"}, "employee_state_taxes": {"wc_covered": true, "wc_class_code": "20992"}}
      responses:
        "201":
          application/json: {"uuid": "343d0c6d-59cf-406a-b907-c450bb8474b6", "first_name": "Kamille", "last_name": "Gorczany-Konopelski", "eligible_paid_time_off": [{"accrual_unit": "Hour", "accrual_method": "unlimited", "accrual_period": "Year"}, {"accrual_unit": "Hour", "accrual_method": "unlimited", "accrual_period": "Year"}, {"accrual_unit": "Hour", "accrual_method": "unlimited", "accrual_period": "Year"}], "payment_method": "Check"}
        "422": {}
    Create Historical Employee Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"first_name": "Chase", "last_name": "Tremblay", "date_of_birth": "1944-10-09", "ssn": "<value>", "work_address": {}, "home_address": {"street_1": "<value>", "city": "Quigleyborough", "state": "Tennessee", "zip": "39845"}, "termination": {}, "job": {}}
      responses:
        "201":
          application/json: {"uuid": "ad85459f-8bf5-4a8f-9079-3b3fa790799e", "first_name": "Karl", "middle_initial": null, "last_name": "Jaskolski", "email": null, "company_uuid": "3c69d228-a250-49b4-9946-24e4e4294da4", "manager_uuid": null, "version": "dedac972dd28945fcd6cd941723cc71a", "department": null, "terminated": true, "two_percent_shareholder": false, "onboarded": true, "onboarding_status": "onboarding_completed", "onboarding_documents_config": {"uuid": null, "i9_document": false}, "jobs": [{"uuid": "f0be5480-7a15-4583-b0d0-789c02a1afe4", "version": "1c0722f3e090713b6a0db7c39904693e", "employee_uuid": "ad85459f-8bf5-4a8f-9079-3b3fa790799e", "hire_date": "2023-11-01", "title": "Client Support Director", "primary": true, "rate": "70000.00", "payment_unit": "Year", "current_compensation_uuid": "1a1faa42-274b-4440-b200-a5d81df14af2", "compensations": [{"uuid": "145660ed-6fcc-4211-8915-18e2786290a2", "version": "2cd4b18662395eb53bcf80d5b5447f36", "job_uuid": "857feae3-414e-445d-b28b-2eb3ef50155e", "rate": "70000.00", "payment_unit": "Year", "flsa_status": "Exempt", "effective_date": "2023-11-01", "adjust_for_minimum_wage": false, "minimum_wages": []}]}], "eligible_paid_time_off": [], "terminations": [{"uuid": "ad85459f-8bf5-4a8f-9079-3b3fa790799e", "version": "e6c865df784842196d411c1466b01686", "employee_uuid": "ad85459f-8bf5-4a8f-9079-3b3fa790799e", "active": false, "cancelable": true, "effective_date": "2023-12-31T00:00:00Z", "run_termination_payroll": false}], "garnishments": [], "date_of_birth": "1986-06-25", "has_ssn": false, "ssn": "", "phone": null, "preferred_first_name": null, "payment_method": "Check", "work_email": null}
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"first_name": "Terrell", "last_name": "Mitchell", "date_of_birth": "1953-04-22", "ssn": "<value>", "work_address": {}, "home_address": {"street_1": "<value>", "city": "Lake Deshawnshire", "state": "Nebraska", "zip": "28098-5552"}, "termination": {}, "job": {}}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"first_name": "Bailey", "last_name": "Quitzon", "date_of_birth": "1946-02-20", "ssn": "<value>", "work_address": {}, "home_address": {"street_1": "<value>", "city": "Dachtown", "state": "North Carolina", "zip": "68648-0485"}, "termination": {}, "job": {}}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"first_name": "Saul", "last_name": "Wintheiser-Wuckert", "date_of_birth": "1947-03-23", "ssn": "<value>", "work_address": {}, "home_address": {"street_1": "<value>", "city": "Bergnaumland", "state": "New Jersey", "zip": "87338"}, "termination": {}, "job": {}}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  put-v1-historical_employees:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
          historical_employee_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "db0edd04aaac4506f7edab03ac855d56", "first_name": "Soren", "middle_initial": "A", "last_name": "Kierkegaard", "date_of_birth": "1995-05-05T00:00:00Z", "ssn": "123456294", "work_address": {"location_uuid": "1da85d35-1910-4d5e-8e94-39e8cdfe8c9a"}, "home_address": {"street_1": "300 3rd Street", "street_2": null, "city": "San Francisco", "state": "CA", "zip": "94107"}, "termination": {"effective_date": "2022-09-15T00:00:00Z"}, "job": {"hire_date": "2018-05-09T00:00:00Z"}, "employee_state_taxes": {"wc_covered": true, "wc_class_code": "20992"}}
      responses:
        "200":
          application/json: {"uuid": "ecd9fe0f-81b9-48b3-81ea-ea4096bc3300", "first_name": "Lilly", "last_name": "Hammes", "eligible_paid_time_off": [{"accrual_unit": "Hour", "accrual_method": "unlimited", "accrual_period": "Year"}, {"accrual_unit": "Hour", "accrual_method": "unlimited", "accrual_period": "Year"}], "payment_method": "Check"}
    Create Historical Employee Example:
      parameters:
        path:
          company_uuid: "<id>"
          historical_employee_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "first_name": "Angelita", "last_name": "Nicolas", "date_of_birth": "1991-02-26", "ssn": "<value>", "work_address": {}, "home_address": {"street_1": "<value>", "city": "Port Jaquelin", "state": "North Dakota", "zip": "90366"}, "termination": {}, "job": {}}
      responses:
        "200":
          application/json: {"uuid": "ad85459f-8bf5-4a8f-9079-3b3fa790799e", "first_name": "Karl", "middle_initial": null, "last_name": "Jaskolski", "email": null, "company_uuid": "3c69d228-a250-49b4-9946-24e4e4294da4", "manager_uuid": null, "version": "dedac972dd28945fcd6cd941723cc71a", "department": null, "terminated": true, "two_percent_shareholder": false, "onboarded": true, "onboarding_status": "onboarding_completed", "onboarding_documents_config": {"uuid": null, "i9_document": false}, "jobs": [{"uuid": "f0be5480-7a15-4583-b0d0-789c02a1afe4", "version": "1c0722f3e090713b6a0db7c39904693e", "employee_uuid": "ad85459f-8bf5-4a8f-9079-3b3fa790799e", "hire_date": "2023-11-01", "title": "Client Support Director", "primary": true, "rate": "70000.00", "payment_unit": "Year", "current_compensation_uuid": "1a1faa42-274b-4440-b200-a5d81df14af2", "compensations": [{"uuid": "145660ed-6fcc-4211-8915-18e2786290a2", "version": "2cd4b18662395eb53bcf80d5b5447f36", "job_uuid": "857feae3-414e-445d-b28b-2eb3ef50155e", "rate": "70000.00", "payment_unit": "Year", "flsa_status": "Exempt", "effective_date": "2023-11-01", "adjust_for_minimum_wage": false, "minimum_wages": []}]}], "eligible_paid_time_off": [], "terminations": [{"uuid": "ad85459f-8bf5-4a8f-9079-3b3fa790799e", "version": "e6c865df784842196d411c1466b01686", "employee_uuid": "ad85459f-8bf5-4a8f-9079-3b3fa790799e", "active": false, "cancelable": true, "effective_date": "2023-12-31T00:00:00Z", "run_termination_payroll": false}], "garnishments": [], "date_of_birth": "1986-06-25", "has_ssn": false, "ssn": "", "phone": null, "preferred_first_name": null, "payment_method": "Check", "work_email": null}
  get-v1-employees:
    Create Employee Example:
      parameters:
        path:
          employee_id: "<id>"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "4b3f930f-82cd-48a8-b797-798686e12e5e", "first_name": "Isom", "middle_initial": null, "last_name": "Jaskolski", "email": "dane7757869450111550@botsford.net", "company_uuid": "a007e1ab-3595-43c2-ab4b-af7a5af2e365", "manager_uuid": "5e53e257-c8d6-45aa-aa8a-ec99283a3acd", "version": "1c7ba9d62c8bafbfff998ffccad5d296", "department": "Stage Hand", "terminated": false, "two_percent_shareholder": false, "onboarded": true, "onboarding_status": "onboarding_completed", "onboarding_documents_config": {"uuid": null, "i9_document": false}, "jobs": [{"uuid": "428a653a-0745-4db4-9c80-558288d416fa", "version": "6c0ed1521e8b86eb36bd4455a63a2dac", "employee_uuid": "f0689739-1985-49f3-b9ba-84562e71e85f", "hire_date": "2020-01-20", "title": "Client Support Director", "primary": true, "rate": "70000.00", "payment_unit": "Year", "current_compensation_uuid": "c9fd719b-8b07-48f3-8a4c-f447d2c59669", "compensations": [{"uuid": "145660ed-6fcc-4211-8915-18e2786290a2", "version": "2cd4b18662395eb53bcf80d5b5447f36", "job_uuid": "857feae3-414e-445d-b28b-2eb3ef50155e", "rate": "70000.00", "payment_unit": "Year", "flsa_status": "Exempt", "effective_date": "2021-01-20", "adjust_for_minimum_wage": false, "minimum_wages": []}]}], "eligible_paid_time_off": [{"name": "Sick Hours", "policy_name": "Sick Policy", "policy_uuid": "9940d205-9904-4e55-9fec-652628e84af7", "accrual_unit": "Hour", "accrual_rate": "208.0", "accrual_method": "per_hour_worked", "accrual_period": "Year", "accrual_balance": "31.8", "maximum_accrual_balance": "240.0", "paid_at_termination": false}, {"name": "Vacation Hours", "policy_name": "Vacation Policy", "policy_uuid": "ab59de61-239f-4805-933b-0e3360ed291c", "accrual_unit": "Hour", "accrual_rate": "208.0", "accrual_period": "Year", "accrual_balance": "77.8", "maximum_accrual_balance": "240.0", "paid_at_termination": true}], "terminations": [], "garnishments": [], "custom_fields": [{"id": "ee515986-f3ca-49da-b576-2691b95262f9", "company_custom_field_id": "ea7e5d57-6abb-47d7-b654-347c142886c0", "name": "employee_level", "type": "text", "description": "Employee Level", "value": "2", "selection_options": null}, {"id": "3796e08d-c2e3-434c-b4de-4ce1893e7b59", "company_custom_field_id": "299650e4-e970-4acf-9bf0-6f05585d20ba", "name": "t-shirt size", "type": "text", "description": "What is your t-shirt size?", "value": "md", "selection_options": null}, {"id": "3796e08d-c2e3-434c-b4de-4ce1893e7b59", "company_custom_field_id": "024ec137-6c92-43a3-b061-14a9720531d6", "name": "favorite fruit", "type": "radio", "description": "Which is your favorite fruit?", "value": "apple", "selection_options": ["apple", "banana", "orange"]}], "date_of_birth": "1986-06-25", "has_ssn": false, "ssn": "", "phone": "1234567890", "preferred_first_name": "Angel", "payment_method": "Check", "work_email": "angel.jaskolski@example.com"}
    Create Historical Employee Example:
      parameters:
        path:
          employee_id: "<id>"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "ad85459f-8bf5-4a8f-9079-3b3fa790799e", "first_name": "Karl", "middle_initial": null, "last_name": "Jaskolski", "email": null, "company_uuid": "3c69d228-a250-49b4-9946-24e4e4294da4", "manager_uuid": null, "version": "dedac972dd28945fcd6cd941723cc71a", "department": null, "terminated": false, "two_percent_shareholder": false, "onboarded": true, "onboarding_status": "onboarding_completed", "onboarding_documents_config": {"uuid": null, "i9_document": false}, "jobs": [{"uuid": "f0be5480-7a15-4583-b0d0-789c02a1afe4", "version": "1c0722f3e090713b6a0db7c39904693e", "employee_uuid": "ad85459f-8bf5-4a8f-9079-3b3fa790799e", "hire_date": "2023-11-01", "title": "Client Support Director", "primary": true, "rate": "70000.00", "payment_unit": "Year", "current_compensation_uuid": "1a1faa42-274b-4440-b200-a5d81df14af2", "compensations": [{"uuid": "145660ed-6fcc-4211-8915-18e2786290a2", "version": "2cd4b18662395eb53bcf80d5b5447f36", "job_uuid": "857feae3-414e-445d-b28b-2eb3ef50155e", "rate": "70000.00", "payment_unit": "Year", "flsa_status": "Exempt", "effective_date": "2023-11-01", "adjust_for_minimum_wage": false, "minimum_wages": []}]}], "eligible_paid_time_off": [], "terminations": [{"uuid": "ad85459f-8bf5-4a8f-9079-3b3fa790799e", "version": "e6c865df784842196d411c1466b01686", "employee_uuid": "ad85459f-8bf5-4a8f-9079-3b3fa790799e", "active": false, "cancelable": true, "effective_date": "2023-12-31T00:00:00Z", "run_termination_payroll": false}], "garnishments": [], "date_of_birth": "1986-06-25", "has_ssn": false, "ssn": "", "phone": null, "preferred_first_name": null, "payment_method": "Check", "work_email": null}
  put-v1-employees:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "db0edd04aaac4506f7edab03ac855d56", "first_name": "Soren", "middle_initial": "A", "last_name": "Kierkegaard", "preferred_first_name": "Angel", "date_of_birth": "1995-05-05", "email": "knight0faith@example.com", "ssn": "123456294", "two_percent_shareholder": false}
      responses:
        "200":
          application/json: {"uuid": "d95fa7f0-e743-42ce-b47c-b60cc78135dd", "first_name": "Merlin", "last_name": "Harber", "eligible_paid_time_off": [{"accrual_unit": "Hour", "accrual_method": "unlimited", "accrual_period": "Year"}, {"accrual_unit": "Hour", "accrual_method": "unlimited", "accrual_period": "Year"}], "payment_method": "Check"}
        "422": {}
    Create Employee Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "200":
          application/json: {"uuid": "4b3f930f-82cd-48a8-b797-798686e12e5e", "first_name": "Isom", "middle_initial": null, "last_name": "Jaskolski", "email": "dane7757869450111550@botsford.net", "company_uuid": "a007e1ab-3595-43c2-ab4b-af7a5af2e365", "manager_uuid": "5e53e257-c8d6-45aa-aa8a-ec99283a3acd", "version": "1c7ba9d62c8bafbfff998ffccad5d296", "department": "Stage Hand", "terminated": false, "two_percent_shareholder": false, "onboarded": true, "onboarding_status": "onboarding_completed", "onboarding_documents_config": {"uuid": null, "i9_document": false}, "jobs": [{"uuid": "428a653a-0745-4db4-9c80-558288d416fa", "version": "6c0ed1521e8b86eb36bd4455a63a2dac", "employee_uuid": "f0689739-1985-49f3-b9ba-84562e71e85f", "hire_date": "2020-01-20", "title": "Client Support Director", "primary": true, "rate": "70000.00", "payment_unit": "Year", "current_compensation_uuid": "c9fd719b-8b07-48f3-8a4c-f447d2c59669", "compensations": [{"uuid": "145660ed-6fcc-4211-8915-18e2786290a2", "version": "2cd4b18662395eb53bcf80d5b5447f36", "job_uuid": "857feae3-414e-445d-b28b-2eb3ef50155e", "rate": "70000.00", "payment_unit": "Year", "flsa_status": "Exempt", "effective_date": "2021-01-20", "adjust_for_minimum_wage": false, "minimum_wages": []}]}], "eligible_paid_time_off": [{"name": "Sick Hours", "policy_name": "Sick Policy", "policy_uuid": "9940d205-9904-4e55-9fec-652628e84af7", "accrual_unit": "Hour", "accrual_rate": "208.0", "accrual_method": "per_hour_worked", "accrual_period": "Year", "accrual_balance": "31.8", "maximum_accrual_balance": "240.0", "paid_at_termination": false}, {"name": "Vacation Hours", "policy_name": "Vacation Policy", "policy_uuid": "ab59de61-239f-4805-933b-0e3360ed291c", "accrual_unit": "Hour", "accrual_rate": "208.0", "accrual_period": "Year", "accrual_balance": "77.8", "maximum_accrual_balance": "240.0", "paid_at_termination": true}], "terminations": [], "garnishments": [], "custom_fields": [{"id": "ee515986-f3ca-49da-b576-2691b95262f9", "company_custom_field_id": "ea7e5d57-6abb-47d7-b654-347c142886c0", "name": "employee_level", "type": "text", "description": "Employee Level", "value": "2", "selection_options": null}, {"id": "3796e08d-c2e3-434c-b4de-4ce1893e7b59", "company_custom_field_id": "299650e4-e970-4acf-9bf0-6f05585d20ba", "name": "t-shirt size", "type": "text", "description": "What is your t-shirt size?", "value": "md", "selection_options": null}, {"id": "3796e08d-c2e3-434c-b4de-4ce1893e7b59", "company_custom_field_id": "024ec137-6c92-43a3-b061-14a9720531d6", "name": "favorite fruit", "type": "radio", "description": "Which is your favorite fruit?", "value": "apple", "selection_options": ["apple", "banana", "orange"]}], "date_of_birth": "1986-06-25", "has_ssn": false, "ssn": "", "phone": "1234567890", "preferred_first_name": "Angel", "payment_method": "Check", "work_email": "angel.jaskolski@example.com"}
    Create Historical Employee Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "200":
          application/json: {"uuid": "ad85459f-8bf5-4a8f-9079-3b3fa790799e", "first_name": "Karl", "middle_initial": null, "last_name": "Jaskolski", "email": null, "company_uuid": "3c69d228-a250-49b4-9946-24e4e4294da4", "manager_uuid": null, "version": "dedac972dd28945fcd6cd941723cc71a", "department": null, "terminated": false, "two_percent_shareholder": false, "onboarded": true, "onboarding_status": "onboarding_completed", "onboarding_documents_config": {"uuid": null, "i9_document": false}, "jobs": [{"uuid": "f0be5480-7a15-4583-b0d0-789c02a1afe4", "version": "1c0722f3e090713b6a0db7c39904693e", "employee_uuid": "ad85459f-8bf5-4a8f-9079-3b3fa790799e", "hire_date": "2023-11-01", "title": "Client Support Director", "primary": true, "rate": "70000.00", "payment_unit": "Year", "current_compensation_uuid": "1a1faa42-274b-4440-b200-a5d81df14af2", "compensations": [{"uuid": "145660ed-6fcc-4211-8915-18e2786290a2", "version": "2cd4b18662395eb53bcf80d5b5447f36", "job_uuid": "857feae3-414e-445d-b28b-2eb3ef50155e", "rate": "70000.00", "payment_unit": "Year", "flsa_status": "Exempt", "effective_date": "2023-11-01", "adjust_for_minimum_wage": false, "minimum_wages": []}]}], "eligible_paid_time_off": [], "terminations": [{"uuid": "ad85459f-8bf5-4a8f-9079-3b3fa790799e", "version": "e6c865df784842196d411c1466b01686", "employee_uuid": "ad85459f-8bf5-4a8f-9079-3b3fa790799e", "active": false, "cancelable": true, "effective_date": "2023-12-31T00:00:00Z", "run_termination_payroll": false}], "garnishments": [], "date_of_birth": "1986-06-25", "has_ssn": false, "ssn": "", "phone": null, "preferred_first_name": null, "payment_method": "Check", "work_email": null}
    Basic:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  delete-v1-employee:
    Basic:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-employees-employee_id-custom_fields:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"custom_fields": [{"id": "ee515986-f3ca-49da-b576-2691b95262f9", "company_custom_field_id": "ea7e5d57-6abb-47d7-b654-347c142886c0", "name": "employee_level", "type": "text", "description": "Employee Level", "value": "2", "selection_options": null}, {"id": "3796e08d-c2e3-434c-b4de-4ce1893e7b59", "company_custom_field_id": "299650e4-e970-4acf-9bf0-6f05585d20ba", "name": "t-shirt size", "type": "text", "description": "What is your t-shirt size?", "value": "md", "selection_options": null}, {"id": "3796e08d-c2e3-434c-b4de-4ce1893e7b59", "company_custom_field_id": "024ec137-6c92-43a3-b061-14a9720531d6", "name": "favorite fruit", "type": "radio", "description": "Which is your favorite fruit?", "value": "apple", "selection_options": ["apple", "banana", "orange"]}]}
  put-v1-employees-employee_id-onboarding_documents_config:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"i9_document": true}
      responses:
        "200":
          application/json: {"i9_document": "true"}
  get-v1-employees-employee_id-onboarding_status:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "c44d66dc-c41b-4a60-9e25-5e93ff8583f2", "onboarding_status": "admin_onboarding_incomplete", "onboarding_steps": [{"title": "Personal details", "id": "personal_details", "required": true, "completed": false, "requirements": []}, {"title": "Enter compensation details", "id": "compensation_details", "required": true, "completed": false, "requirements": []}, {"title": "Add work address", "id": "add_work_address", "required": true, "completed": false, "requirements": []}, {"title": "Add home address", "id": "add_home_address", "required": true, "completed": false, "requirements": []}, {"title": "Enter federal tax withholdings", "id": "federal_tax_setup", "required": true, "completed": false, "requirements": []}, {"title": "Enter state tax information", "id": "state_tax_setup", "required": true, "completed": false, "requirements": ["add_work_address", "add_home_address"]}, {"title": "Direct deposit setup", "id": "direct_deposit_setup", "required": false, "completed": false, "requirements": []}, {"title": "Employee form signing", "id": "employee_form_signing", "required": true, "completed": false, "requirements": ["federal_tax_setup", "state_tax_setup"]}]}
  put-v1-employees-employee_id-onboarding_status:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"onboarding_status": "<value>"}
      responses:
        "200":
          application/json: {"uuid": "c44d66dc-c41b-4a60-9e25-5e93ff8583f2", "onboarding_status": "admin_onboarding_incomplete", "onboarding_steps": [{"title": "Personal details", "id": "personal_details", "required": true, "completed": false, "requirements": []}, {"title": "Enter compensation details", "id": "compensation_details", "required": true, "completed": false, "requirements": []}, {"title": "Add work address", "id": "add_work_address", "required": true, "completed": false, "requirements": []}, {"title": "Add home address", "id": "add_home_address", "required": true, "completed": false, "requirements": []}, {"title": "Enter federal tax withholdings", "id": "federal_tax_setup", "required": true, "completed": false, "requirements": []}, {"title": "Enter state tax information", "id": "state_tax_setup", "required": true, "completed": false, "requirements": ["add_work_address", "add_home_address"]}, {"title": "Direct deposit setup", "id": "direct_deposit_setup", "required": false, "completed": false, "requirements": []}, {"title": "Employee form signing", "id": "employee_form_signing", "required": true, "completed": false, "requirements": ["federal_tax_setup", "state_tax_setup"]}]}
    Basic:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"onboarding_status": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"onboarding_status": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"onboarding_status": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-version-employees-time_off_activities:
    example:
      parameters:
        path:
          employee_uuid: "<id>"
        query:
          time_off_type: "<value>"
        header:
          X-Gusto-API-Version: "2024-04-01"
  post-departments:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"title": "Stage Hand"}
      responses:
        "201":
          application/json: {"version": "d90440dd464601d1c8f4e9e240dfb7a6", "uuid": "56260b3d-c375-415c-b77a-75d99f717193", "company_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e", "title": "Stage Hand", "employees": [{"uuid": "41199375-a999-4414-9f40-d9bf596b134d"}], "contractors": [{"uuid": "3488549f-60e4-494f-a34a-9d8aad3aabf5"}]}
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-companies-departments:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"version": "d90440dd464601d1c8f4e9e240dfb7a6", "uuid": "56260b3d-c375-415c-b77a-75d99f717193", "company_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e", "title": "Stage Hand", "employees": [{"uuid": "41199375-a999-4414-9f40-d9bf596b134d"}], "contractors": []}, {"version": "34f39a30b45d077cb83aed2df4810d74", "uuid": "ec5c8a85-3233-4f39-a9f5-fb1ab7b5f5f3", "company_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e", "title": "Actors", "employees": [{"uuid": "7ee4aca1-814b-4034-b0f8-07f93cc679d1"}], "contractors": []}, {"version": "1fe3076d35ef7c97d0ae68c5f4df0acd", "uuid": "1802465d-4f68-4865-920c-1307ab095f12", "company_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e", "title": "Band", "employees": [{"uuid": "a73955be-c009-44dc-915e-6246e2bdedbb"}], "contractors": [{"uuid": "3488549f-60e4-494f-a34a-9d8aad3aabf5"}]}]
  get-department:
    Example:
      parameters:
        path:
          department_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"version": "d90440dd464601d1c8f4e9e240dfb7a6", "uuid": "56260b3d-c375-415c-b77a-75d99f717193", "company_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e", "title": "Stage Hand", "employees": [{"uuid": "41199375-a999-4414-9f40-d9bf596b134d"}], "contractors": [{"uuid": "3488549f-60e4-494f-a34a-9d8aad3aabf5"}]}
  put-departments:
    Example:
      parameters:
        path:
          department_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "db0edd04aaac4506f7edab03ac855d56", "title": "Backup Dancer"}
      responses:
        "200":
          application/json: {"version": "d90440dd464601d1c8f4e9e240dfb7a6", "uuid": "56260b3d-c375-415c-b77a-75d99f717193", "company_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e", "title": "Stage Hand", "employees": [{"uuid": "41199375-a999-4414-9f40-d9bf596b134d"}], "contractors": [{"uuid": "3488549f-60e4-494f-a34a-9d8aad3aabf5"}]}
    Basic:
      parameters:
        path:
          department_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          department_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          department_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  delete-department:
    Basic:
      parameters:
        path:
          department_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          department_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          department_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  put-add-people-to-department:
    Example:
      parameters:
        path:
          department_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "200":
          application/json: {"version": "d90440dd464601d1c8f4e9e240dfb7a6", "uuid": "56260b3d-c375-415c-b77a-75d99f717193", "company_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e", "title": "Stage Hand", "employees": [{"uuid": "41199375-a999-4414-9f40-d9bf596b134d"}], "contractors": [{"uuid": "3488549f-60e4-494f-a34a-9d8aad3aabf5"}]}
  put-remove-people-from-department:
    Example:
      parameters:
        path:
          department_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "200":
          application/json: {"version": "d90440dd464601d1c8f4e9e240dfb7a6", "uuid": "56260b3d-c375-415c-b77a-75d99f717193", "company_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e", "title": "Stage Hand", "employees": [{"uuid": "41199375-a999-4414-9f40-d9bf596b134d"}], "contractors": [{"uuid": "3488549f-60e4-494f-a34a-9d8aad3aabf5"}]}
  post-v1-employees-employee_id-terminations:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"effective_date": "2020-06-30", "run_termination_payroll": true}
      responses:
        "201":
          application/json: {"uuid": "da441196-43a9-4d23-ad5d-f37ce6bb99c0", "version": "d487dd0b55dfcacdd920ccbdaeafa351", "employee_uuid": "da441196-43a9-4d23-ad5d-f37ce6bb99c0", "active": true, "cancelable": true, "effective_date": "2020-03-10", "run_termination_payroll": false}
    Basic:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"effective_date": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"effective_date": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"effective_date": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-employees-employee_id-terminations:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "da441196-43a9-4d23-ad5d-f37ce6bb99c0", "version": "d487dd0b55dfcacdd920ccbdaeafa351", "employee_uuid": "da441196-43a9-4d23-ad5d-f37ce6bb99c0", "active": true, "cancelable": true, "effective_date": "2020-03-10", "run_termination_payroll": false}]
  delete-v1-employees-employee_id-terminations:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "404":
          application/json: {"errors": [{"error_key": "employment", "category": "incorrect_state", "message": "The employee's employment is not in the right state."}]}
  put-v1-terminations-employee_id:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "1928d0c378e519e9c03fb959bc959a6b", "effective_date": "2020-06-30", "run_termination_payroll": true}
      responses:
        "200":
          application/json: {"uuid": "da441196-43a9-4d23-ad5d-f37ce6bb99c0", "version": "d487dd0b55dfcacdd920ccbdaeafa351", "employee_uuid": "da441196-43a9-4d23-ad5d-f37ce6bb99c0", "active": true, "cancelable": true, "effective_date": "2020-03-10", "run_termination_payroll": false}
    Basic:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "effective_date": "<value>"}
      responses:
        "404":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "effective_date": "<value>"}
      responses:
        "404":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "effective_date": "<value>"}
      responses:
        "404":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  post-v1-employees-employee_id-rehire:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"effective_date": "2023-06-30", "file_new_hire_report": true, "work_location_uuid": "b6ae9d93-d4b8-4119-8c96-dba595dd8c30"}
      responses:
        "201":
          application/json: {"version": "2e930d43acbdb241f8f14a2d531fa417", "effective_date": "2024-01-01", "file_new_hire_report": false, "work_location_uuid": "d2c80d44-857b-4d4d-bce4-23ae52cc863b,", "employment_status": "full_time", "two_percent_shareholder": false, "employee_uuid": "da441196-43a9-4d23-ad5d-f37ce6bb99c0", "active": false}
    Basic:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"effective_date": "<value>", "file_new_hire_report": true, "work_location_uuid": "<id>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"effective_date": "<value>", "file_new_hire_report": false, "work_location_uuid": "<id>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"effective_date": "<value>", "file_new_hire_report": true, "work_location_uuid": "<id>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  put-v1-employees-employee_id-rehire:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "1928d0c378e519e9c03fb959bc959a6b", "effective_date": "2023-06-30", "file_new_hire_report": true, "work_location_uuid": "b6ae9d93-d4b8-4119-8c96-dba595dd8c30"}
      responses:
        "200":
          application/json: {"version": "2e930d43acbdb241f8f14a2d531fa417", "effective_date": "2024-01-01", "file_new_hire_report": false, "work_location_uuid": "d2c80d44-857b-4d4d-bce4-23ae52cc863b,", "employment_status": "full_time", "two_percent_shareholder": false, "employee_uuid": "da441196-43a9-4d23-ad5d-f37ce6bb99c0", "active": false}
    Basic:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "effective_date": "<value>", "file_new_hire_report": true, "work_location_uuid": "<id>"}
      responses:
        "404":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "effective_date": "<value>", "file_new_hire_report": true, "work_location_uuid": "<id>"}
      responses:
        "404":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "effective_date": "<value>", "file_new_hire_report": true, "work_location_uuid": "<id>"}
      responses:
        "404":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-employees-employee_id-rehire:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"version": "2e930d43acbdb241f8f14a2d531fa417", "effective_date": "2024-01-01", "file_new_hire_report": false, "work_location_uuid": "d2c80d44-857b-4d4d-bce4-23ae52cc863b,", "employment_status": "full_time", "two_percent_shareholder": false, "employee_uuid": "da441196-43a9-4d23-ad5d-f37ce6bb99c0", "active": false}
        "404":
          application/json: {"errors": [{"error_key": "employment", "category": "incorrect_state", "message": "The employee's employment is not in the right state."}]}
  delete-v1-employees-employee_id-rehire:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "404":
          application/json: {"errors": [{"error_key": "employment", "category": "incorrect_state", "message": "The employee's employment is not in the right state."}]}
  get-v1-employees-employee_id-employment_history:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"hire_date": "2023-05-30", "termination_date": "<value>", "file_new_hire_report": true, "two_percent_shareholder": false, "employment_status": "seasonal"}, {"hire_date": "2021-02-02", "termination_date": "2023-03-01", "file_new_hire_report": false, "two_percent_shareholder": false, "employment_status": "full_time"}]
  get-v1-employees-employee_id-home_addresses:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"street_1": "644 Fay Vista", "street_2": "Suite 842", "city": "Richmond", "state": "VA", "zip": "23218", "country": "USA", "active": false, "uuid": "56260b3d-c375-415c-b77a-75d99f717193", "employee_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e", "effective_date": "2021-01-01", "courtesy_withholding": true}, {"street_1": "100 5th Ave", "street_2": "Suite 555", "city": "New York", "state": "NY", "zip": "10001", "country": "USA", "active": true, "uuid": "d9f74049-8769-4fba-8e0f-eceef2da4e6b", "employee_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e", "effective_date": "2022-03-03", "courtesy_withholding": true}]
  post-v1-employees-employee_id-home_addresses:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"street_1": "300 3rd Street", "street_2": null, "city": "San Francisco", "state": "CA", "zip": "94107", "effective_date": "2021-01-01", "courtesy_withholding": true}
      responses:
        "201":
          application/json: {"street_1": "644 Fay Vista", "street_2": "Suite 842", "city": "Richmond", "state": "VA", "zip": "23218", "country": "USA", "active": false, "uuid": "56260b3d-c375-415c-b77a-75d99f717193", "effective_date": "2021-01-01", "courtesy_withholding": true}
    Basic:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-home_addresses-home_address_uuid:
    Example:
      parameters:
        path:
          home_address_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"street_1": "644 Fay Vista", "street_2": "Suite 842", "city": "Richmond", "state": "VA", "zip": "23218", "country": "USA", "active": false, "uuid": "56260b3d-c375-415c-b77a-75d99f717193", "effective_date": "2021-01-01", "courtesy_withholding": true}
  put-v1-home_addresses-home_address_uuid:
    Example:
      parameters:
        path:
          home_address_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "fe75bd065ff48b91c35fe8ff842f986c", "street_1": "300 3rd Street", "street_2": null, "city": "San Francisco", "state": "CA", "zip": "94107", "effective_date": "2021-01-01", "courtesy_withholding": true}
      responses:
        "200":
          application/json: {"street_1": "644 Fay Vista", "street_2": "Suite 842", "city": "Richmond", "state": "VA", "zip": "23218", "country": "USA", "active": false, "uuid": "56260b3d-c375-415c-b77a-75d99f717193", "effective_date": "2021-01-01", "courtesy_withholding": true}
    Basic:
      parameters:
        path:
          home_address_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          home_address_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          home_address_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  delete-v1-home_addresses-home_address_uuid:
    Basic:
      parameters:
        path:
          home_address_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          home_address_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          home_address_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-employees-employee_id-work_addresses:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "fc5b87dc-8d88-400d-b2da-c3587a7e5b15", "effective_date": "2022-01-01", "active": false, "location_uuid": "d9456c94-f561-40d2-afec-919da5f59196", "employee_uuid": "7597f3e3-31d4-4953-83a5-f95be78d2fe2", "version": "139f9769a2e543e6a1259173e1ee3b8d", "street_1": "800 Adolfo Gardens", "street_2": "Suite 419", "city": "Bremen", "state": "AL", "zip": "35033", "country": "USA"}, {"uuid": "be1c2e24-af86-4c36-b34e-3a55dbcdbdab", "effective_date": "2023-01-01", "active": true, "location_uuid": "6a119be7-b4b0-4e27-aaa0-89d5f2524635", "employee_uuid": "7597f3e3-31d4-4953-83a5-f95be78d2fe2", "version": "bbe8d4c741339c6b9e0e2e1c1b120816", "street_1": "2216 Icie Villages", "street_2": "Apt. 798", "city": "Big Delta", "state": "AK", "zip": "99737", "country": "USA"}]
  get-v1-work_addresses-work_address_uuid:
    Example:
      parameters:
        path:
          work_address_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "34925ef7-6234-440d-83b8-788a24d0d69a", "effective_date": "2023-05-15", "active": true, "location_uuid": "aba6d0fd-7294-4997-b1a4-bc9268c45932", "employee_uuid": "2363b9c0-6625-4425-9261-47627fd68783", "version": "6a22da647ed391f184a212e6e83a541d", "street_1": "977 Marks Viaduct", "street_2": null, "city": "Pink Hill", "state": "NC", "zip": "28572", "country": "USA"}
  put-v1-work_addresses-work_address_uuid:
    Example:
      parameters:
        path:
          work_address_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"location_uuid": "6a119be7-b4b0-4e27-aaa0-89d5f2524635", "effective_date": "2023-05-15", "version": "e6db1baa29d3df1eb307ff6a12c778da"}
      responses:
        "200":
          application/json: {"uuid": "34925ef7-6234-440d-83b8-788a24d0d69a", "effective_date": "2023-05-15", "active": true, "location_uuid": "aba6d0fd-7294-4997-b1a4-bc9268c45932", "employee_uuid": "2363b9c0-6625-4425-9261-47627fd68783", "version": "6a22da647ed391f184a212e6e83a541d", "street_1": "977 Marks Viaduct", "street_2": null, "city": "Pink Hill", "state": "NC", "zip": "28572", "country": "USA"}
    Basic:
      parameters:
        path:
          work_address_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          work_address_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          work_address_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  delete-v1-work_addresses-work_address_uuid:
    Basic:
      parameters:
        path:
          work_address_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          work_address_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          work_address_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  post-v1-employees-employee_id-work_addresses:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"location_uuid": "6a119be7-b4b0-4e27-aaa0-89d5f2524635", "effective_date": "2023-05-15"}
      responses:
        "201":
          application/json: {"uuid": "56260b3d-c375-415c-b77a-75d99f717193", "effective_date": "2021-01-01", "active": false, "location_uuid": "6a27753a-3093-41c1-9f25-ea64f15e8266", "employee_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e", "version": "<value>", "street_1": "644 Fay Vista", "street_2": "Suite 842", "city": "Richmond", "state": "VA", "zip": "23218", "country": "USA"}
    Basic:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-employees-employee_id-federal_taxes:
    Example:
      parameters:
        path:
          employee_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"version": "56a489ce86ed6c1b0f0cecc4050a0b01", "filing_status": "Single", "extra_withholding": "0.0", "two_jobs": true, "dependents_amount": "0.0", "other_income": "0.0", "deductions": "0.0", "w4_data_type": "rev_2020_w4"}
  put-v1-employees-employee_id-federal_taxes:
    Example:
      parameters:
        path:
          employee_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "56a489ce86ed6c1b0f0cecc4050a0b01", "filing_status": "Single", "extra_withholding": "0.0", "two_jobs": true, "dependents_amount": "0.0", "other_income": "0.0", "deductions": "0.0", "w4_data_type": "rev_2020_w4"}
      responses:
        "200":
          application/json: {"version": "56a489ce86ed6c1b0f0cecc4050a0b01", "filing_status": "Single", "extra_withholding": "0.0", "two_jobs": true, "dependents_amount": "0.0", "other_income": "0.0", "deductions": "0.0", "w4_data_type": "rev_2020_w4"}
    Basic:
      parameters:
        path:
          employee_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          employee_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-employees-employee_id-state_taxes:
    Employee-State-Taxes-List-Example:
      parameters:
        path:
          employee_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"employee_uuid": "92fa4d30-e284-43d0-a26e-605619c04beb", "state": "CA", "file_new_hire_report": false, "is_work_state": true, "questions": [{"label": "Filing Status", "description": "The Head of Household status applies to unmarried individuals who have a relative living with them in their home. If unsure, read the <a target='_blank' data-bypass rel='noopener noreferrer' tabindex='99' href='https://www.ftb.ca.gov/file/personal/filing-status/index.html'>CA Filing Status explanation</a>.\n", "key": "filing_status", "input_question_format": {"type": "Select", "options": [{"value": "S", "label": "Single"}, {"value": "M", "label": "Married one income"}, {"value": "MD", "label": "Married dual income"}, {"value": "H", "label": "Head of household"}, {"value": "E", "label": "Do Not Withhold"}]}, "answers": [{"value": "S", "valid_from": "2010-01-01", "valid_up_to": null}]}, {"label": "Withholding Allowance", "description": "This value is needed to calculate the employee's CA income tax withholding. If unsure, use the <a target='_blank' data-bypass rel='noopener noreferrer' tabindex='99' href='http://www.edd.ca.gov/pdf_pub_ctr/de4.pdf'>CA DE-4 form</a> to calculate the value manually.\n", "key": "withholding_allowance", "input_question_format": {"type": "Number"}, "answers": [{"value": 1, "valid_from": "2010-01-01", "valid_up_to": null}]}, {"label": "Additional Withholding", "description": "You can withhold an additional amount of California income taxes here.", "key": "additional_withholding", "input_question_format": {"type": "Currency"}, "answers": [{"value": "0.0", "valid_from": "2010-01-01", "valid_up_to": null}]}, {"label": "File a New Hire Report?", "description": "State law requires you to file a new hire report within 20 days of hiring or re-hiring an employee.", "key": "file_new_hire_report", "input_question_format": {"type": "Select"}, "answers": [{"value": true, "valid_from": "2010-01-01", "valid_up_to": null}]}]}]
  put-v1-employees-employee_id-state_taxes:
    Employee-State-Taxes-Update-Example:
      parameters:
        path:
          employee_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"states": [{"state": "CA", "questions": [{"key": "filing_status", "answers": [{"value": "M", "valid_from": "2010-01-01", "valid_up_to": null}]}, {"key": "withholding_allowance", "answers": [{"value": "2", "valid_from": "2010-01-01", "valid_up_to": null}]}, {"key": "additional_withholding", "answers": [{"value": "25.0", "valid_from": "2010-01-01", "valid_up_to": null}]}, {"key": "file_new_hire_report", "answers": [{"value": "true", "valid_from": "2010-01-01", "valid_up_to": null}]}]}]}
      responses:
        "200":
          application/json: [{"employee_uuid": "<id>", "state": "Minnesota", "questions": [{"label": "<value>", "description": "airbrush convalesce behind within frequent acidly sans accredit", "key": "<key>", "input_question_format": {"type": "<value>"}, "answers": []}, {"label": "<value>", "description": "fuel confusion amused ugh", "key": "<key>", "input_question_format": {"type": "<value>"}, "answers": []}]}, {"employee_uuid": "<id>", "state": "Oregon", "questions": [{"label": "<value>", "description": "ugh after regularly toe", "key": "<key>", "input_question_format": {"type": "<value>"}, "answers": [{}, {}, {}]}]}]
    Employee-State-Taxes-List-Example:
      parameters:
        path:
          employee_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"states": [{"state": "Delaware"}, {"state": "Maine"}]}
      responses:
        "200":
          application/json: [{"employee_uuid": "92fa4d30-e284-43d0-a26e-605619c04beb", "state": "CA", "file_new_hire_report": false, "is_work_state": true, "questions": [{"label": "Filing Status", "description": "The Head of Household status applies to unmarried individuals who have a relative living with them in their home. If unsure, read the <a target='_blank' data-bypass rel='noopener noreferrer' tabindex='99' href='https://www.ftb.ca.gov/file/personal/filing-status/index.html'>CA Filing Status explanation</a>.\n", "key": "filing_status", "input_question_format": {"type": "Select", "options": [{"value": "S", "label": "Single"}, {"value": "M", "label": "Married one income"}, {"value": "MD", "label": "Married dual income"}, {"value": "H", "label": "Head of household"}, {"value": "E", "label": "Do Not Withhold"}]}, "answers": [{"value": "S", "valid_from": "2010-01-01", "valid_up_to": null}]}, {"label": "Withholding Allowance", "description": "This value is needed to calculate the employee's CA income tax withholding. If unsure, use the <a target='_blank' data-bypass rel='noopener noreferrer' tabindex='99' href='http://www.edd.ca.gov/pdf_pub_ctr/de4.pdf'>CA DE-4 form</a> to calculate the value manually.\n", "key": "withholding_allowance", "input_question_format": {"type": "Number"}, "answers": [{"value": 1, "valid_from": "2010-01-01", "valid_up_to": null}]}, {"label": "Additional Withholding", "description": "You can withhold an additional amount of California income taxes here.", "key": "additional_withholding", "input_question_format": {"type": "Currency"}, "answers": [{"value": "0.0", "valid_from": "2010-01-01", "valid_up_to": null}]}, {"label": "File a New Hire Report?", "description": "State law requires you to file a new hire report within 20 days of hiring or re-hiring an employee.", "key": "file_new_hire_report", "input_question_format": {"type": "Select"}, "answers": [{"value": true, "valid_from": "2010-01-01", "valid_up_to": null}]}]}]
  post-v1-employees-employee_id-bank_accounts:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "BoA Checking Account", "routing_number": "266905059", "account_number": "5809431207", "account_type": "Checking"}
      responses:
        "201":
          application/json: {"uuid": "1531e824-8d9e-4bd8-9f90-0d04608125d7", "employee_uuid": "9fcf1b1d-8886-4691-9283-383d3bdd4fd9", "account_type": "Checking", "name": "BoA Checking Account", "routing_number": "266905059", "hidden_account_number": "XXXX1207"}
    Basic:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "<value>", "routing_number": "<value>", "account_number": "<value>", "account_type": "Checking"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "<value>", "routing_number": "<value>", "account_number": "<value>", "account_type": "Savings"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "<value>", "routing_number": "<value>", "account_number": "<value>", "account_type": "Savings"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  delete-v1-employees-employee_id-bank_accounts-bank_account_id:
    speakeasy-default-delete-v1-employees-employee-id-bank-accounts-bank-account-id:
      parameters:
        path:
          employee_id: "<id>"
          bank_account_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
  put-v1-employees-employee_id-bank_accounts:
    Example:
      parameters:
        path:
          employee_id: "<id>"
          bank_account_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "BoA Checking Account", "routing_number": "266905059", "account_number": "5809431207", "account_type": "Checking"}
      responses:
        "200":
          application/json: {"uuid": "1531e824-8d9e-4bd8-9f90-0d04608125d7", "employee_uuid": "9fcf1b1d-8886-4691-9283-383d3bdd4fd9", "account_type": "Checking", "name": "BoA Checking Account", "routing_number": "266905059", "hidden_account_number": "XXXX1207"}
    Basic:
      parameters:
        path:
          employee_id: "<id>"
          bank_account_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "<value>", "routing_number": "<value>", "account_number": "<value>", "account_type": "Checking"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          employee_id: "<id>"
          bank_account_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "<value>", "routing_number": "<value>", "account_number": "<value>", "account_type": "Checking"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_id: "<id>"
          bank_account_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "<value>", "routing_number": "<value>", "account_number": "<value>", "account_type": "Checking"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-employees-employee_id-payment_method:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"version": "63859768485e218ccf8a449bb60f14ed", "type": "Direct Deposit", "split_by": "Amount", "splits": [{"uuid": "e88f9436-b74e-49a8-87e9-777b9bfe715e", "name": "BoA Checking Account", "priority": 1, "split_amount": 500}, {"uuid": "0d2b7f73-05d6-4184-911d-269edeecc30a", "name": "Chase Checking Account", "priority": 2, "split_amount": 1000}, {"uuid": "1531e824-8d9e-4bd8-9f90-0d04608125d7", "name": "US Bank Checking Account", "priority": 3, "split_amount": null}]}
  put-v1-employees-employee_id-payment_method:
    example-1:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "63859768485e218ccf8a449bb60f14ed", "type": "Direct Deposit", "split_by": "Amount", "splits": [{"uuid": "e88f9436-b74e-49a8-87e9-777b9bfe715e", "name": "BoA Checking Account", "priority": 1, "split_amount": 500}, {"uuid": "0d2b7f73-05d6-4184-911d-269edeecc30a", "name": "Chase Checking Account", "priority": 2, "split_amount": 1000}, {"uuid": "1531e824-8d9e-4bd8-9f90-0d04608125d7", "name": "US Bank Checking Account", "priority": 3, "split_amount": null}]}
    example-2:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "63859768485e218ccf8a449bb60f14ed", "type": "Direct Deposit", "split_by": "Percentage", "splits": [{"uuid": "e88f9436-b74e-49a8-87e9-777b9bfe715e", "name": "BoA Checking Account", "priority": 1, "split_amount": 60}, {"uuid": "0d2b7f73-05d6-4184-911d-269edeecc30a", "name": "Chase Checking Account", "priority": 2, "split_amount": 40}]}
    example-3:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "63859768485e218ccf8a449bb60f14ed", "type": "Check"}
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "type": "Check"}
      responses:
        "200":
          application/json: {"version": "63859768485e218ccf8a449bb60f14ed", "type": "Direct Deposit", "split_by": "Amount", "splits": [{"uuid": "e88f9436-b74e-49a8-87e9-777b9bfe715e", "name": "BoA Checking Account", "priority": 1, "split_amount": 500}, {"uuid": "0d2b7f73-05d6-4184-911d-269edeecc30a", "name": "Chase Checking Account", "priority": 2, "split_amount": 1000}, {"uuid": "1531e824-8d9e-4bd8-9f90-0d04608125d7", "name": "US Bank Checking Account", "priority": 3, "split_amount": null}]}
    Basic:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "type": "Check"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "type": "Direct Deposit"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "type": "Check"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-employees-employee_id-bank_accounts:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "1531e824-8d9e-4bd8-9f90-0d04608125d7", "employee_uuid": "9fcf1b1d-8886-4691-9283-383d3bdd4fd9", "account_type": "Checking", "name": "BoA Checking Account", "routing_number": "266905059", "hidden_account_number": "XXXX1207"}]
  post-v1-jobs-job_id:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"title": "Regional Manager", "hire_date": "2020-12-21"}
      responses:
        "201":
          application/json: {"uuid": "d6d1035e-8a21-4e1d-89d5-fa894f9aff97", "version": "d0e719137f89ca3dd334dd4cc248ffbb", "employee_uuid": "948daac8-4355-4ece-9e2a-229898accb22", "hire_date": "2020-01-20", "title": "Account Director", "primary": true, "rate": "78000.00", "payment_unit": "Year", "current_compensation_uuid": "ea8b0b90-1112-4f9d-bb93-bf029bc8537a", "state_wc_covered": "null,", "state_wc_class_code": "null,", "compensations": [{"uuid": "ea8b0b90-1112-4f9d-bb93-bf029bc8537a", "version": "994b75511d1debac5d7e2ddeae13679f", "job_uuid": "d6d1035e-8a21-4e1d-89d5-fa894f9aff97", "rate": "78000.00", "payment_unit": "Year", "flsa_status": "Exempt", "effective_date": "2021-01-20", "adjust_for_minimum_wage": false, "minimum_wages": []}]}
    Basic:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"title": "<value>", "hire_date": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"title": "<value>", "hire_date": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"title": "<value>", "hire_date": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-employees-employee_id-jobs:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "d6d1035e-8a21-4e1d-89d5-fa894f9aff97", "version": "6c0ed1521e8b86eb36bd4455a63a2dac", "employee_uuid": "948daac8-4355-4ece-9e2a-229898accb22", "hire_date": "2020-01-20", "title": "Client Support Director", "primary": true, "rate": "70000.00", "payment_unit": "Year", "current_compensation_uuid": "ea8b0b90-1112-4f9d-bb93-bf029bc8537a", "state_wc_covered": "null,", "state_wc_class_code": "null,", "compensations": [{"uuid": "ea8b0b90-1112-4f9d-bb93-bf029bc8537a", "version": "2cd4b18662395eb53bcf80d5b5447f36", "job_uuid": "d6d1035e-8a21-4e1d-89d5-fa894f9aff97", "rate": "70000.00", "payment_unit": "Year", "flsa_status": "Exempt", "effective_date": "2021-01-20", "adjust_for_minimum_wage": false, "minimum_wages": []}]}]
  get-v1-jobs-job_id:
    Example:
      parameters:
        path:
          job_id: "<id>"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "d6d1035e-8a21-4e1d-89d5-fa894f9aff97", "version": "d0e719137f89ca3dd334dd4cc248ffbb", "employee_uuid": "948daac8-4355-4ece-9e2a-229898accb22", "hire_date": "2020-01-20", "title": "Account Director", "primary": true, "rate": "78000.00", "payment_unit": "Year", "current_compensation_uuid": "ea8b0b90-1112-4f9d-bb93-bf029bc8537a", "state_wc_covered": "null,", "state_wc_class_code": "null,", "compensations": [{"uuid": "ea8b0b90-1112-4f9d-bb93-bf029bc8537a", "version": "994b75511d1debac5d7e2ddeae13679f", "job_uuid": "d6d1035e-8a21-4e1d-89d5-fa894f9aff97", "rate": "78000.00", "payment_unit": "Year", "flsa_status": "Exempt", "effective_date": "2021-01-20", "adjust_for_minimum_wage": false, "minimum_wages": []}]}
  put-v1-jobs-job_id:
    Example:
      parameters:
        path:
          job_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "gr78930htutrz444kuytr3s5hgxykuveb523fwl8sir", "title": "Regional Manager", "hire_date": "2020-12-21"}
      responses:
        "200":
          application/json: {"uuid": "d6d1035e-8a21-4e1d-89d5-fa894f9aff97", "version": "d0e719137f89ca3dd334dd4cc248ffbb", "employee_uuid": "948daac8-4355-4ece-9e2a-229898accb22", "hire_date": "2020-01-20", "title": "Account Director", "primary": true, "rate": "78000.00", "payment_unit": "Year", "current_compensation_uuid": "ea8b0b90-1112-4f9d-bb93-bf029bc8537a", "state_wc_covered": "null,", "state_wc_class_code": "null,", "compensations": [{"uuid": "ea8b0b90-1112-4f9d-bb93-bf029bc8537a", "version": "994b75511d1debac5d7e2ddeae13679f", "job_uuid": "d6d1035e-8a21-4e1d-89d5-fa894f9aff97", "rate": "78000.00", "payment_unit": "Year", "flsa_status": "Exempt", "effective_date": "2021-01-20", "adjust_for_minimum_wage": false, "minimum_wages": []}]}
    Basic:
      parameters:
        path:
          job_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          job_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          job_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  delete-v1-jobs-job_id:
    speakeasy-default-delete-v1-jobs-job-id:
      parameters:
        path:
          job_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
  get-v1-jobs-job_id-compensations:
    Example:
      parameters:
        path:
          job_id: "<id>"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "db57832c-d8bc-43a7-ae99-0a04480ff037", "version": "98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872", "job_uuid": "d8f8fbe7-496d-4b69-86f0-1e2d1b73a086", "rate": "70.00", "payment_unit": "Hour", "flsa_status": "Nonexempt", "effective_date": "2020-12-11", "adjust_for_minimum_wage": false, "minimum_wages": []}, {"uuid": "a4d9ba9c-32cc-4cc1-a5bc-6ef4cd653e7a", "version": "cc59bd3879d655fb940a1f6b675f2ad9", "job_uuid": "d8f8fbe7-496d-4b69-86f0-1e2d1b73a086", "rate": "5.00", "payment_unit": "Hour", "flsa_status": "Nonexempt", "effective_date": "2018-12-11", "adjust_for_minimum_wage": true, "minimum_wages": [{"uuid": "edeea5af-ecd6-4b1c-b5de-5cff2d302738", "wage": "7.25", "effective_date": "2018-12-11"}]}]
  post-v1-compensations-compensation_id:
    Exempt:
      parameters:
        path:
          job_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"rate": "60000.00", "payment_unit": "Year", "flsa_status": "Exempt"}
      responses:
        "201":
          application/json: {"uuid": "db57832c-d8bc-43a7-ae99-0a04480ff037", "version": "98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872", "job_uuid": "d8f8fbe7-496d-4b69-86f0-1e2d1b73a086", "rate": "60000.00", "payment_unit": "Year", "flsa_status": "Exempt", "effective_date": "2020-12-11", "adjust_for_minimum_wage": false, "minimum_wages": []}
    Minimum Wage Adjusted:
      parameters:
        path:
          job_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"rate": "7.00", "payment_unit": "Hour", "effective_date": "2023-01-01", "flsa_status": "Nonexempt", "adjust_for_minimum_wage": true, "minimum_wages": [{"uuid": "340832db-ab28-4112-9e10-28dd1711835f"}]}
      responses:
        "201":
          application/json: {"uuid": "a4d9ba9c-32cc-4cc1-a5bc-6ef4cd653e7a", "version": "cc59bd3879d655fb940a1f6b675f2ad9", "job_uuid": "d8f8fbe7-496d-4b69-86f0-1e2d1b73a086", "rate": "5.00", "payment_unit": "Hour", "flsa_status": "Nonexempt", "effective_date": "2018-12-11", "adjust_for_minimum_wage": true, "minimum_wages": [{"uuid": "edeea5af-ecd6-4b1c-b5de-5cff2d302738", "wage": "7.25", "effective_date": "2018-12-11"}]}
    Basic:
      parameters:
        path:
          job_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"payment_unit": "Paycheck", "flsa_status": "Commission Only Nonexempt"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          job_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"payment_unit": "Hour", "flsa_status": "Commission Only Exempt"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          job_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"payment_unit": "Month", "flsa_status": "Commission Only Exempt"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-compensations-compensation_id:
    Exempt:
      parameters:
        path:
          compensation_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "db57832c-d8bc-43a7-ae99-0a04480ff037", "version": "98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872", "job_uuid": "d8f8fbe7-496d-4b69-86f0-1e2d1b73a086", "rate": "60000.00", "payment_unit": "Year", "flsa_status": "Exempt", "effective_date": "2020-12-11", "adjust_for_minimum_wage": false, "minimum_wages": []}
    Minimum Wage Adjusted:
      parameters:
        path:
          compensation_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "a4d9ba9c-32cc-4cc1-a5bc-6ef4cd653e7a", "version": "cc59bd3879d655fb940a1f6b675f2ad9", "job_uuid": "d8f8fbe7-496d-4b69-86f0-1e2d1b73a086", "rate": "5.00", "payment_unit": "Hour", "flsa_status": "Nonexempt", "effective_date": "2018-12-11", "adjust_for_minimum_wage": true, "minimum_wages": [{"uuid": "edeea5af-ecd6-4b1c-b5de-5cff2d302738", "wage": "7.25", "effective_date": "2018-12-11"}]}
  put-v1-compensations-compensation_id:
    Exempt:
      parameters:
        path:
          compensation_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872", "rate": "60000.00", "payment_unit": "Year", "flsa_status": "Exempt"}
      responses:
        "200":
          application/json: {"uuid": "db57832c-d8bc-43a7-ae99-0a04480ff037", "version": "98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872", "job_uuid": "d8f8fbe7-496d-4b69-86f0-1e2d1b73a086", "rate": "60000.00", "payment_unit": "Year", "flsa_status": "Exempt", "effective_date": "2020-12-11", "adjust_for_minimum_wage": false, "minimum_wages": []}
    Minimum Wage Adjusted:
      parameters:
        path:
          compensation_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872", "rate": "7.00", "payment_unit": "Hour", "flsa_status": "Nonexempt", "adjust_for_minimum_wage": true, "minimum_wages": [{"uuid": "340832db-ab28-4112-9e10-28dd1711835f"}]}
      responses:
        "200":
          application/json: {"uuid": "a4d9ba9c-32cc-4cc1-a5bc-6ef4cd653e7a", "version": "cc59bd3879d655fb940a1f6b675f2ad9", "job_uuid": "d8f8fbe7-496d-4b69-86f0-1e2d1b73a086", "rate": "5.00", "payment_unit": "Hour", "flsa_status": "Nonexempt", "effective_date": "2018-12-11", "adjust_for_minimum_wage": true, "minimum_wages": [{"uuid": "edeea5af-ecd6-4b1c-b5de-5cff2d302738", "wage": "7.25", "effective_date": "2018-12-11"}]}
    Basic:
      parameters:
        path:
          compensation_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          compensation_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          compensation_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  delete-v1-compensations-compensation_id:
    speakeasy-default-delete-v1-compensations-compensation-id:
      parameters:
        path:
          compensation_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
  post-v1-companies-company_id-earning_types:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "Gym Membership Stipend"}
      responses:
        "201":
          application/json: {"name": "Gym Membership Stipend", "uuid": "f4dc8972-8830-4c07-b623-349a04b040d7"}
    Basic:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-companies-company_id-earning_types:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"default": [{"name": "Bonus", "uuid": "b82e35c5-d7c6-4705-9e16-9f87499ade18"}, {"name": "Cash Tips", "uuid": "f5618c94-ed7d-4366-b2c4-ff05e430064f"}, {"name": "Commission", "uuid": "60191999-004a-49d9-b163-630574433653"}, {"name": "Correction Payment", "uuid": "368226e0-8e8c-48f0-bc91-aee46caafbc9"}, {"name": "Minimum Wage Adjustment", "uuid": "88a2e519-9ff5-4c19-9071-6a709f3c2939"}, {"name": "Paycheck Tips", "uuid": "a3eaf03d-e712-4144-8f9b-71a85528adcf"}, {"name": "Severance", "uuid": "a6a2eba7-6c7d-4ced-bbe8-43452fbc9f63"}], "custom": [{"name": "Gym Membership Stipend", "uuid": "6b4a8efb-db90-4c13-a75f-aae11b3f4ff9"}]}
  put-v1-companies-company_id-earning_types-earning_type_uuid:
    Example:
      parameters:
        path:
          company_id: "<id>"
          earning_type_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "Gym Membership Stipend"}
      responses:
        "200":
          application/json: {"name": "Gym Membership Stipend", "uuid": "f4dc8972-8830-4c07-b623-349a04b040d7"}
    Basic:
      parameters:
        path:
          company_id: "<id>"
          earning_type_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
          earning_type_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
          earning_type_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  delete-v1-companies-company_id-earning_types-earning_type_uuid:
    speakeasy-default-delete-v1-companies-company-id-earning-types-earning-type-uuid:
      parameters:
        path:
          company_id: "<id>"
          earning_type_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
  post-v1-companies-company_uuid-contractors:
    Create an Individual contractor:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"type": "Individual", "wage_type": "Fixed", "start_date": "2020-04-01", "self_onboarding": true, "email": "johnson@johnson.com", "first_name": "Johnson", "last_name": "Johnson", "file_new_hire_report": "true,", "work_state": "CA"}
      responses:
        "201":
          application/json: {"uuid": "7a621cf0-21cd-49cf-8540-3315211a509a", "is_active": true, "hourly_rate": "50.0", "file_new_hire_report": false}
        "422": {}
    Create a Business contractor:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"type": "Business", "wage_type": "Fixed", "start_date": "2020-04-01", "self_onboarding": false, "file_new_hire_report": false, "business_name": "Johnson-Johnson Contractors"}
      responses:
        "201":
          application/json: {"uuid": "080a8e77-4c2b-4ecc-9376-91775e024985", "is_active": true, "hourly_rate": "50.0", "file_new_hire_report": false}
        "422": {}
    Individual Contractor:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"type": "Individual", "wage_type": "Fixed", "start_date": "2020-01-11", "hourly_rate": "40.0", "self_onboarding": false, "file_new_hire_report": false}
      responses:
        "201":
          application/json: {"uuid": "c9fc1ad3-c107-4e7b-aa21-2dd4b00a7a07", "company_uuid": "b7457fec-3b76-43bb-9c6e-69cca4688942", "wage_type": "Hourly", "is_active": false, "version": "63859768485e218ccf8a449bb60f14ed", "type": "Individual", "first_name": "Kory", "last_name": "Gottlieb", "middle_initial": "P", "business_name": null, "ein": null, "has_ein": false, "email": "keira.west@mckenzie.org", "start_date": "2022-01-01", "address": null, "hourly_rate": "60.00", "file_new_hire_report": true, "work_state": "FL", "onboarded": true, "onboarding_status": "onboarding_completed", "payment_method": null, "has_ssn": true, "department_uuid": null}
    Business Contractor:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"type": "Individual", "wage_type": "Fixed", "start_date": "2020-01-11", "hourly_rate": "40.0", "self_onboarding": false, "file_new_hire_report": false}
      responses:
        "201":
          application/json: {"uuid": "c7c0659c-21a6-4b4e-b74c-9252576fc68c", "company_uuid": "0ec4ae6e-e436-460d-b63c-94a14503d16f", "wage_type": "Fixed", "is_active": true, "version": "8aab307f1e8ed788697f8986346af559", "type": "Business", "first_name": null, "last_name": null, "middle_initial": null, "business_name": "Labadie-Stroman", "ein": "XX-XXX0001", "has_ein": true, "email": "jonatan@kerluke.info", "start_date": "2022-01-01", "address": null, "hourly_rate": "0.00", "file_new_hire_report": false, "work_state": null, "onboarded": false, "onboarding_status": "admin_onboarding_incomplete", "payment_method": null, "has_ssn": false}
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"type": "Individual", "wage_type": "Hourly", "start_date": "2020-01-11", "hourly_rate": "40.0", "self_onboarding": false, "file_new_hire_report": false}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"type": "Individual", "wage_type": "Hourly", "start_date": "2020-01-11", "hourly_rate": "40.0", "self_onboarding": false, "file_new_hire_report": false}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"type": "Individual", "wage_type": "Fixed", "start_date": "2020-01-11", "hourly_rate": "40.0", "self_onboarding": false, "file_new_hire_report": false}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-companies-company_uuid-contractors:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "c9fc1ad3-c107-4e7b-aa21-2dd4b00a7a07", "company_uuid": "b7457fec-3b76-43bb-9c6e-69cca4688942", "wage_type": "Fixed", "is_active": false, "version": "63859768485e218ccf8a449bb60f14ed", "type": "Individual", "first_name": "Kory", "last_name": "Gottlieb", "middle_initial": "P", "business_name": null, "ein": null, "has_ein": false, "email": "keira.west@mckenzie.org", "start_date": "2022-01-01", "address": {"street_1": "621 Jast Row", "street_2": "Apt. 281", "city": "Coral Springs", "state": "FL", "zip": "33065", "country": "USA"}, "hourly_rate": "0.00", "file_new_hire_report": false, "work_state": null, "onboarded": true, "onboarding_status": "onboarding_completed", "has_ssn": true, "department_uuid": "1802465d-4f68-4865-920c-1307ab095f12"}, {"uuid": "183a86f4-a803-4b38-9357-cd9b78e2560c", "company_uuid": "afdd5d98-581b-4fc0-b988-706b7d23b2a5", "wage_type": "Fixed", "is_active": true, "version": "8aab307f1e8ed788697f8986346af559", "type": "Business", "first_name": null, "last_name": null, "middle_initial": null, "business_name": "Labadie-Stroman", "ein": "XX-XXX0001", "has_ein": true, "email": "jonatan@kerluke.info", "start_date": "2022-01-01", "address": {"street_1": "1625 Bednar Center", "street_2": "Apt. 480", "city": "Port Charlotte", "state": "FL", "zip": "33954", "country": "USA"}, "hourly_rate": "0.00", "file_new_hire_report": false, "work_state": null, "onboarded": true, "onboarding_status": "onboarding_completed", "has_ssn": false}, {"uuid": "ea1c2d65-b622-4899-bcb7-5cd0fe0232aa", "company_uuid": "281c763d-a2ba-4f51-b9e8-b1ed61576d62", "wage_type": "Fixed", "is_active": true, "version": "b48c46abfed1487b873b442334b3c4ff", "type": "Individual", "first_name": "Chanel", "last_name": "Boyle", "middle_initial": "X", "business_name": null, "ein": null, "has_ein": false, "email": "loyal@hettinger.biz", "address": {"street_1": "35913 Darrick Run", "street_2": "Apt. 913", "city": "Cypress", "state": "TX", "zip": "77433", "country": "USA"}, "hourly_rate": "0.00", "file_new_hire_report": true, "work_state": "TX", "onboarded": true, "onboarding_status": "onboarding_completed", "has_ssn": true}]
  get-v1-contractors-contractor_uuid:
    Individual Contractor:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "c9fc1ad3-c107-4e7b-aa21-2dd4b00a7a07", "company_uuid": "b7457fec-3b76-43bb-9c6e-69cca4688942", "wage_type": "Hourly", "is_active": false, "version": "63859768485e218ccf8a449bb60f14ed", "type": "Individual", "first_name": "Kory", "last_name": "Gottlieb", "middle_initial": "P", "business_name": null, "ein": null, "has_ein": false, "email": "keira.west@mckenzie.org", "start_date": "2022-01-01", "address": {"street_1": "621 Jast Row", "street_2": "Apt. 281", "city": "Coral Springs", "state": "FL", "zip": "33065", "country": "USA"}, "hourly_rate": "60.00", "file_new_hire_report": true, "work_state": "FL", "onboarded": true, "onboarding_status": "onboarding_completed", "payment_method": "Direct Deposit", "has_ssn": true, "department_uuid": "56260b3d-c375-415c-b77a-75d99f717193"}
    Business Contractor:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "c7c0659c-21a6-4b4e-b74c-9252576fc68c", "company_uuid": "0ec4ae6e-e436-460d-b63c-94a14503d16f", "wage_type": "Fixed", "is_active": true, "version": "8aab307f1e8ed788697f8986346af559", "type": "Business", "first_name": null, "last_name": null, "middle_initial": null, "business_name": "Labadie-Stroman", "ein": "XX-XXX0001", "has_ein": true, "email": "jonatan@kerluke.info", "start_date": "2022-01-01", "address": null, "hourly_rate": "0.00", "file_new_hire_report": false, "work_state": null, "onboarded": false, "onboarding_status": "admin_onboarding_incomplete", "payment_method": "Direct Deposit", "has_ssn": false}
  put-v1-contractors-contractor_uuid:
    Update an Individual Contractor:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "b48c46abfed1487b873b442334b3c4ff", "type": "Individual", "wage_type": "Hourly", "start_date": "2021-01-01", "hourly_rate": "20.00", "self_onboarding": false, "first_name": "Chanel", "last_name": "Boyle", "middle_initial": "X", "file_new_hire_report": false, "is_active": true}
      responses:
        "200":
          application/json: {"uuid": "d95fa7f0-e743-42ce-b47c-b60cc78135dd", "is_active": true, "hourly_rate": "50.0", "file_new_hire_report": false}
        "422": {}
    Update a Business Contractor:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "b48c46abfed1487b873b442334b3c4ff", "type": "Individual", "wage_type": "Fixed", "start_date": "2020-01-11", "self_onboarding": false, "file_new_hire_report": false, "business_name": "Contracting Solutions", "ein": "991113334", "is_active": false}
      responses:
        "200":
          application/json: {"uuid": "b85898c1-25a1-4907-a1c5-562af6646dad", "is_active": true, "hourly_rate": "50.0", "file_new_hire_report": false}
        "422": {}
    Individual Contractor:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "type": "Individual", "start_date": "2020-01-11", "hourly_rate": "40.0", "self_onboarding": false, "file_new_hire_report": false}
      responses:
        "200":
          application/json: {"uuid": "c9fc1ad3-c107-4e7b-aa21-2dd4b00a7a07", "company_uuid": "b7457fec-3b76-43bb-9c6e-69cca4688942", "wage_type": "Hourly", "is_active": false, "version": "63859768485e218ccf8a449bb60f14ed", "type": "Individual", "first_name": "Kory", "last_name": "Gottlieb", "middle_initial": "P", "business_name": null, "ein": null, "has_ein": false, "email": "keira.west@mckenzie.org", "start_date": "2022-01-01", "address": {"street_1": "621 Jast Row", "street_2": "Apt. 281", "city": "Coral Springs", "state": "FL", "zip": "33065", "country": "USA"}, "hourly_rate": "60.00", "file_new_hire_report": true, "work_state": "FL", "onboarded": true, "onboarding_status": "onboarding_completed", "payment_method": "Direct Deposit", "has_ssn": true, "department_uuid": "56260b3d-c375-415c-b77a-75d99f717193"}
    Business Contractor:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "type": "Individual", "start_date": "2020-01-11", "hourly_rate": "40.0", "self_onboarding": false, "file_new_hire_report": false}
      responses:
        "200":
          application/json: {"uuid": "c7c0659c-21a6-4b4e-b74c-9252576fc68c", "company_uuid": "0ec4ae6e-e436-460d-b63c-94a14503d16f", "wage_type": "Fixed", "is_active": true, "version": "8aab307f1e8ed788697f8986346af559", "type": "Business", "first_name": null, "last_name": null, "middle_initial": null, "business_name": "Labadie-Stroman", "ein": "XX-XXX0001", "has_ein": true, "email": "jonatan@kerluke.info", "start_date": "2022-01-01", "address": null, "hourly_rate": "0.00", "file_new_hire_report": false, "work_state": null, "onboarded": false, "onboarding_status": "admin_onboarding_incomplete", "payment_method": "Direct Deposit", "has_ssn": false}
    Basic:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "type": "Individual", "start_date": "2020-01-11", "hourly_rate": "40.0", "self_onboarding": false, "file_new_hire_report": false}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "type": "Individual", "start_date": "2020-01-11", "hourly_rate": "40.0", "self_onboarding": false, "file_new_hire_report": false}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "type": "Individual", "start_date": "2020-01-11", "hourly_rate": "40.0", "self_onboarding": false, "file_new_hire_report": false}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  delete-v1-contractors-contractor_uuid:
    speakeasy-default-delete-v1-contractors-contractor-uuid:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
  get-v1-contractors-contractor_uuid-onboarding_status:
    Example:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "bc57832c-d8bc-43a7-ae99-3a03380ff037", "onboarding_status": "admin_onboarding_incomplete", "onboarding_steps": [{"title": "Basic details", "id": "basic_details", "required": true, "completed": false, "requirements": []}, {"title": "Enter compensation details", "id": "compensation_details", "required": true, "completed": false, "requirements": []}, {"title": "Add an address", "id": "add_address", "required": true, "completed": false, "requirements": []}, {"title": "Payment details", "id": "payment_details", "required": true, "completed": false, "requirements": []}, {"title": "Sign and acknowledge documents", "id": "sign_documents", "required": false, "completed": false, "requirements": ["basic_details,", "add_address"]}, {"title": "File new hire report", "id": "file_new_hire_report", "required": false, "completed": false, "requirements": ["basic_details"]}]}
  put-v1-contractors-contractor_uuid-onboarding_status:
    Example:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"onboarding_status": "onboarding_completed"}
      responses:
        "200":
          application/json: {"uuid": "bc57832c-d8bc-43a7-ae99-3a03380ff037", "onboarding_status": "admin_onboarding_incomplete", "onboarding_steps": [{"title": "Basic details", "id": "basic_details", "required": true, "completed": false, "requirements": []}, {"title": "Enter compensation details", "id": "compensation_details", "required": true, "completed": false, "requirements": []}, {"title": "Add an address", "id": "add_address", "required": true, "completed": false, "requirements": []}, {"title": "Payment details", "id": "payment_details", "required": true, "completed": false, "requirements": []}, {"title": "Sign and acknowledge documents", "id": "sign_documents", "required": false, "completed": false, "requirements": ["basic_details,", "add_address"]}, {"title": "File new hire report", "id": "file_new_hire_report", "required": false, "completed": false, "requirements": ["basic_details"]}]}
    Basic:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"onboarding_status": "onboarding_completed"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"onboarding_status": "onboarding_completed"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"onboarding_status": "onboarding_completed"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-contractors-contractor_uuid-address:
    Example:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"version": "23323096a8015e32d9795fadf1fd300d", "street_1": "999 Kiera Stravenue", "street_2": "Suite 391", "city": "San Francisco", "state": "CA", "zip": "94107", "country": "USA", "active": true, "contractor_uuid": "9779767c-6044-48e0-bf68-aeb370b9a2e7"}
  put-v1-contractors-contractor_uuid-address:
    Example:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "fe75bd065ff48b91c35fe8ff842f986c", "street_1": "300 3rd Street", "street_2": "<value>", "city": "San Francisco", "state": "CA", "zip": "94107"}
      responses:
        "200":
          application/json: {"version": "23323096a8015e32d9795fadf1fd300d", "street_1": "999 Kiera Stravenue", "street_2": "Suite 391", "city": "San Francisco", "state": "CA", "zip": "94107", "country": "USA", "active": true, "contractor_uuid": "9779767c-6044-48e0-bf68-aeb370b9a2e7"}
    Basic:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  post-v1-contractors-contractor_uuid-bank_accounts:
    Example:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "BoA Checking Account", "routing_number": "266905059", "account_number": "5809431207", "account_type": "Checking"}
      responses:
        "201":
          application/json: {"uuid": "1531e824-8d9e-4bd8-9f90-0d04608125d7", "contractor_uuid": "9fcf1b1d-8886-4691-9283-383d3bdd4fd9", "account_type": "Checking", "name": "BoA Checking Account", "routing_number": "266905059", "hidden_account_number": "XXXX1207"}
    Basic:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "<value>", "routing_number": "<value>", "account_number": "<value>", "account_type": "Checking"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "<value>", "routing_number": "<value>", "account_number": "<value>", "account_type": "Savings"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "<value>", "routing_number": "<value>", "account_number": "<value>", "account_type": "Savings"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-contractors-contractor_uuid-bank_accounts:
    Example:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "1531e824-8d9e-4bd8-9f90-0d04608125d7", "contractor_uuid": "9fcf1b1d-8886-4691-9283-383d3bdd4fd9", "account_type": "Checking", "name": "BoA Checking Account", "routing_number": "266905059", "hidden_account_number": "XXXX1207"}]
  get-v1-contractors-contractor_uuid-payment_method:
    Example:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"version": "63859768485e218ccf8a449bb60f14ed", "type": "Direct Deposit", "split_by": "Percentage", "splits": [{"uuid": "e88f9436-b74e-49a8-87e9-777b9bfe715e", "name": "BoA Checking Account", "hidden_account_number": "XXXX0992", "priority": 1, "split_amount": 100}]}
  put-v1-contractors-contractor_id-payment_method:
    example-1:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "63859768485e218ccf8a449bb60f14ed", "type": "Direct Deposit"}
    example-3:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "63859768485e218ccf8a449bb60f14ed", "type": "Check"}
    Example:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "type": "Check"}
      responses:
        "200":
          application/json: {"version": "63859768485e218ccf8a449bb60f14ed", "type": "Direct Deposit", "split_by": "Percentage", "splits": [{"uuid": "e88f9436-b74e-49a8-87e9-777b9bfe715e", "name": "BoA Checking Account", "hidden_account_number": "XXXX0992", "priority": 1, "split_amount": 100}]}
    Basic:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "type": "Check"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "type": "Check"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "type": "Check"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  post-v1-webhook-subscription:
    Example:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"url": "https://partner-app.com/subscriber", "subscription_types": ["Company", "Employee"]}
      responses:
        "201":
          application/json: {"uuid": "c5fdae57-5483-4529-9aae-f0edceed92d4", "url": "https://the-partner-app.com/subscriber", "status": "verified", "subscription_types": ["BankAccount", "Company", "CompanyBenefit", "Contractor", "ContractorPayment", "Employee", "EmployeeBenefit", "EmployeeJobCompensation", "ExternalPayroll", "Form", "Location", "Notification", "Payroll", "PaySchedule", "Signatory"]}
    Basic:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"url": "https://dense-bidet.name/", "subscription_types": ["EmployeeJobCompensation"]}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"url": "https://quarterly-omelet.biz", "subscription_types": ["EmployeeJobCompensation", "Notification"]}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"url": "https://stunning-hope.com", "subscription_types": ["Payroll"]}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-webhook-subscriptions:
    Example:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "dcceb38a-46be-4110-9d1d-1b3384c3b906", "url": "https://6116-2603-6000-8900-3d42-58e7-f1e3-b394-1f21.ngrok.io/subscriber", "status": "pending", "subscription_types": ["BankAccount", "Company", "CompanyBenefit", "Contractor", "ContractorPayment", "Employee", "EmployeeBenefit", "EmployeeJobCompensation", "ExternalPayroll", "Form", "Location", "Notification", "Payroll", "PaySchedule", "Signatory"]}]
  put-v1-webhook-subscription-uuid:
    Example:
      parameters:
        path:
          webhook_subscription_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"subscription_types": ["Company", "Employee"]}
      responses:
        "200":
          application/json: {"uuid": "c5fdae57-5483-4529-9aae-f0edceed92d4", "url": "https://the-partner-app.com/subscriber", "status": "verified", "subscription_types": ["BankAccount", "Company", "CompanyBenefit", "Contractor", "ContractorPayment", "Employee", "EmployeeBenefit", "EmployeeJobCompensation", "ExternalPayroll", "Form", "Location", "Notification", "Payroll", "PaySchedule", "Signatory"]}
    Basic:
      parameters:
        path:
          webhook_subscription_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"subscription_types": ["Company", "ExternalPayroll", "Payroll"]}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          webhook_subscription_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"subscription_types": []}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          webhook_subscription_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"subscription_types": ["EmployeeJobCompensation", "Signatory"]}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-webhook-subscription-uuid:
    Example:
      parameters:
        path:
          webhook_subscription_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "c5fdae57-5483-4529-9aae-f0edceed92d4", "url": "https://the-partner-app.com/subscriber", "status": "verified", "subscription_types": ["BankAccount", "Company", "CompanyBenefit", "Contractor", "ContractorPayment", "Employee", "EmployeeBenefit", "EmployeeJobCompensation", "ExternalPayroll", "Form", "Location", "Notification", "Payroll", "PaySchedule", "Signatory"]}
  delete-v1-webhook-subscription-uuid:
    speakeasy-default-delete-v1-webhook-subscription-uuid:
      parameters:
        path:
          webhook_subscription_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
  put-v1-verify-webhook-subscription-uuid:
    Example:
      parameters:
        path:
          webhook_subscription_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"verification_token": "asefasedfe23e234easd"}
      responses:
        "200":
          application/json: {"uuid": "c5fdae57-5483-4529-9aae-f0edceed92d4", "url": "https://the-partner-app.com/subscriber", "status": "verified", "subscription_types": ["BankAccount", "Company", "CompanyBenefit", "Contractor", "ContractorPayment", "Employee", "EmployeeBenefit", "EmployeeJobCompensation", "ExternalPayroll", "Form", "Location", "Notification", "Payroll", "PaySchedule", "Signatory"]}
    Basic:
      parameters:
        path:
          webhook_subscription_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"verification_token": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          webhook_subscription_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"verification_token": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          webhook_subscription_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"verification_token": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-webhook-subscription-verification-token-uuid:
    speakeasy-default-get-v1-webhook-subscription-verification-token-uuid:
      parameters:
        path:
          webhook_subscription_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
  get-v1-contractor-forms:
    Example:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "48cdd5ec-a4dd-4840-a424-ad79f38d8408", "name": "US_1099", "title": "Form 1099: 2020", "description": "Form 1099 records your annual income as a contractor.", "draft": false, "year": 2020, "quarter": null, "requires_signing": false, "document_content_type": "application/pdf", "contractor_uuid": "123dd616-6dbc-4724-938a-403f6217a933"}]
  get-v1-contractor-form:
    Example:
      parameters:
        path:
          contractor_uuid: "<id>"
          form_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "48cdd5ec-a4dd-4840-a424-ad79f38d8408", "name": "US_1099", "title": "Form 1099: 2020", "description": "Form 1099 records your annual income as a contractor.", "draft": false, "year": 2020, "quarter": null, "requires_signing": false, "document_content_type": "application/pdf", "contractor_uuid": "123dd616-6dbc-4724-938a-403f6217a933"}
  get-v1-contractor-form-pdf:
    Example:
      parameters:
        path:
          contractor_uuid: "<id>"
          form_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "48cdd5ec-a4dd-4840-a424-ad79f38d8408", "document_url": "https://app.gusto-demo.com/assets/forms/7757842065202782/original/company_direct_deposit20211007-48226-gsqo8k.pdf?1633667020", "document_content_type": "application/pdf"}
  post-v1-sandbox-generate_1099:
    Example:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"contractor_id": "<id>"}
      responses:
        "200":
          application/json: {"uuid": "29afb141-2256-431d-90e0-1c7344222342", "name": "US_1099", "title": "Form 1099: 2022", "description": "Form 1099 records your annual income as a contractor.", "draft": false, "year": 2022, "quarter": null, "requires_signing": false, "contractor_uuid": "b68484a9-4487-4ee5-bafc-4245133a426c"}
    Basic:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"contractor_id": "<id>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"contractor_id": "<id>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"contractor_id": "<id>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-contractor-documents:
    Example:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "e83b3c20-dc4f-4382-bee3-b478fc42c68b", "title": "Taxpayer Identification (Form W-9)", "name": "taxpayer_identification_form_w_9", "recipient_type": "Contractor", "recipient_uuid": "f079c253-29e2-45e2-b384-2cc615c9c568", "pages": [{"image_url": "http://app.gusto-dev.com:3000/assets/document_templates/20/unmapped_template/images/0.jpg", "page_number": 0}, {"image_url": "http://app.gusto-dev.com:3000/assets/document_templates/20/unmapped_template/images/1.jpg", "page_number": 1}], "fields": [{"key": "text1596141656513", "value": null, "x": 69, "y": 94, "width": 261, "height": 13, "page_number": 0, "data_type": "text", "required": true}, {"key": "optional_text1596141704672", "value": null, "x": 69, "y": 118, "width": 262, "height": 13, "page_number": 0, "data_type": "text", "required": false}], "signed_at": null, "description": "Form W-9, Request for Taxpayer Identification Number and Certification", "requires_signing": true, "draft": false, "year": null, "quarter": null}]
  get-v1-contractor-document:
    Example:
      parameters:
        path:
          document_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "e83b3c20-dc4f-4382-bee3-b478fc42c68b", "title": "Taxpayer Identification (Form W-9)", "name": "taxpayer_identification_form_w_9", "recipient_type": "Contractor", "recipient_uuid": "f079c253-29e2-45e2-b384-2cc615c9c568", "pages": [{"image_url": "http://app.gusto-dev.com:3000/assets/document_templates/20/unmapped_template/images/0.jpg", "page_number": 0}, {"image_url": "http://app.gusto-dev.com:3000/assets/document_templates/20/unmapped_template/images/1.jpg", "page_number": 1}], "fields": [{"key": "text1596141656513", "value": null, "x": 69, "y": 94, "width": 261, "height": 13, "page_number": 0, "data_type": "text", "required": true}, {"key": "optional_text1596141704672", "value": null, "x": 69, "y": 118, "width": 262, "height": 13, "page_number": 0, "data_type": "text", "required": false}], "signed_at": null, "description": "Form W-9, Request for Taxpayer Identification Number and Certification", "requires_signing": true, "draft": false, "year": null, "quarter": null}
  get-v1-contractor-document-pdf:
    Example:
      parameters:
        path:
          document_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "e83b3c20-dc4f-4382-bee3-b478fc42c68b", "document_url": "https://app.gusto-demo.com/assets/personal_documents/23/original.pdf?1724367941"}
  put-v1-contractor-document-sign:
    Example:
      parameters:
        path:
          document_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"fields": [{}, {}, {}], "agree": true, "signed_by_ip_address": "<value>"}
      responses:
        "200":
          application/json: {"uuid": "e83b3c20-dc4f-4382-bee3-b478fc42c68b", "title": "Taxpayer Identification (Form W-9)", "name": "taxpayer_identification_form_w_9", "recipient_type": "Contractor", "recipient_uuid": "f079c253-29e2-45e2-b384-2cc615c9c568", "signed_at": "2024-09-03T16:39:22.000-07:00", "description": "Form W-9, Request for Taxpayer Identification Number and Certification", "requires_signing": false, "draft": false, "year": null, "quarter": null}
    Basic:
      parameters:
        path:
          document_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"fields": [], "agree": true, "signed_by_ip_address": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          document_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"fields": [{}, {}, {}], "agree": true, "signed_by_ip_address": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          document_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"fields": [{}, {}], "agree": true, "signed_by_ip_address": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  post-v1-sandbox-generate_w2:
    Example:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"employee_id": "<id>"}
      responses:
        "200":
          application/json: {"employee_uuid": "19394e76-a866-4570-b237-9a26b0163907", "uuid": "bf5b2496-26df-436e-b465-eae4ed5c8021", "name": "US_W-2", "title": "Draft Form W-2: 2021", "description": "Form W-2 records your annual wages and taxes.", "draft": false, "requires_signing": false}
    Basic:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"employee_id": "<id>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"employee_id": "<id>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"employee_id": "<id>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-employee-forms:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "48cdd5ec-a4dd-4840-a424-ad79f38d8408", "name": "company_direct_deposit", "title": "Direct Deposit Authorization", "description": "We need you to sign paperwork to authorize us to debit and credit your bank account and file and pay your taxes.", "draft": false, "year": null, "quarter": null, "requires_signing": true, "document_content_type": "application/pdf"}]
  get-v1-employee-form:
    Example:
      parameters:
        path:
          employee_id: "<id>"
          form_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "48cdd5ec-a4dd-4840-a424-ad79f38d8408", "name": "company_direct_deposit", "title": "Direct Deposit Authorization", "description": "We need you to sign paperwork to authorize us to debit and credit your bank account and file and pay your taxes.", "draft": false, "year": null, "quarter": null, "requires_signing": true, "document_content_type": "application/pdf"}
  get-v1-employee-form-pdf:
    Example:
      parameters:
        path:
          employee_id: "<id>"
          form_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "48cdd5ec-a4dd-4840-a424-ad79f38d8408", "document_url": "https://app.gusto-demo.com/assets/forms/7757842065202782/original/company_direct_deposit20211007-48226-gsqo8k.pdf?1633667020", "document_content_type": "application/pdf"}
  put-v1-employee-form-sign:
    Example:
      parameters:
        path:
          employee_id: "<id>"
          form_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"signature_text": "Jane Smith", "agree": true, "signed_by_ip_address": "192.168.0.1"}
      responses:
        "200":
          application/json: {"uuid": "48cdd5ec-a4dd-4840-a424-ad79f38d8408", "name": "company_direct_deposit", "title": "Direct Deposit Authorization", "description": "We need you to sign paperwork to authorize us to debit and credit your bank account and file and pay your taxes.", "draft": false, "year": null, "quarter": null, "requires_signing": true, "document_content_type": "application/pdf"}
    Basic:
      parameters:
        path:
          employee_id: "<id>"
          form_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"signature_text": "<value>", "agree": false, "signed_by_ip_address": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          employee_id: "<id>"
          form_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"signature_text": "<value>", "agree": true, "signed_by_ip_address": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_id: "<id>"
          form_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"signature_text": "<value>", "agree": true, "signed_by_ip_address": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  post-v1-companies-company_id-payrolls:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"off_cycle": true, "off_cycle_reason": "Dismissed employee", "start_date": "<value>", "end_date": "<value>"}
      responses:
        "200":
          application/json: {"payroll_deadline": "2022-02-18T22:00:00Z", "check_date": "2021-02-22", "processed": false, "processed_date": "<value>", "calculated_at": "<value>", "uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777", "payroll_uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777", "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb", "off_cycle": true, "off_cycle_reason": "Bonus", "auto_pilot": false, "external": false, "final_termination_payroll": false, "withholding_pay_period": "Every other week", "skip_regular_deductions": true, "fixed_withholding_rate": true, "pay_period": {"start_date": "2021-02-01", "end_date": "2021-02-15", "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501"}, "payroll_status_meta": {"cancellable": false, "expected_check_date": "2022-02-22", "initial_check_date": "2022-02-22", "expected_debit_time": "2022-02-18T22:00:00Z", "payroll_late": false, "initial_debit_cutoff_time": "2022-02-18T22:00:00Z"}, "employee_compensations": [{"employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7067", "excluded": false, "payment_method": "Direct Deposit", "memo": null, "fixed_compensations": [], "hourly_compensations": [{"name": "Regular Hours", "hours": "0.000", "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3", "compensation_multiplier": 1, "flsa_status": "Nonexempt"}, {"name": "Overtime", "hours": "0.000", "job_uuid": "9d3760f0-d1f9-4700-8817-0fe2dce5cf23", "compensation_multiplier": 1.5, "flsa_status": "Nonexempt"}, {"name": "Double overtime", "hours": "0.000", "job_uuid": "b5eef9a9-4a87-4649-a80d-14878c05f44e", "compensation_multiplier": 2, "flsa_status": "Nonexempt"}, {"name": "Regular Hours", "hours": "0.000", "job_uuid": "332bd171-9efc-432b-abbb-a75c9dba706a", "compensation_multiplier": 1, "flsa_status": "Nonexempt"}, {"name": "Overtime", "hours": "0.000", "job_uuid": "ca9b3dc1-57ac-4736-901a-9b1c9634b9d5", "compensation_multiplier": 1.5, "flsa_status": "Nonexempt"}, {"name": "Double overtime", "hours": "0.000", "job_uuid": "1bad01e2-140c-49ed-9542-2388ce4a19b3", "compensation_multiplier": 2, "flsa_status": "Nonexempt"}], "paid_time_off": []}], "created_at": "2022-02-01T22:00:00Z", "processing_request": null}
    Basic:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"off_cycle": true, "off_cycle_reason": "Bonus", "start_date": "<value>", "end_date": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"off_cycle": true, "off_cycle_reason": "Transition from old pay schedule", "start_date": "<value>", "end_date": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"off_cycle": false, "off_cycle_reason": "Bonus", "start_date": "<value>", "end_date": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-companies-company_id-payrolls:
    Example:
      parameters:
        path:
          company_id: "<id>"
        query:
          sort_order: "asc"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"payroll_deadline": "2021-02-18T22:00:00Z", "check_date": "2021-02-22", "processed": true, "processed_date": "2021-02-18", "calculated_at": "2021-02-18T12:00:00Z", "uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777", "payroll_uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777", "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb", "off_cycle": false, "external": false, "pay_period": {"start_date": "2021-02-01", "end_date": "2021-02-15", "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501"}, "totals": {"company_debit": "121747.71", "net_pay_debit": "79283.80", "tax_debit": "42463.91", "reimbursement_debit": "0.00", "child_support_debit": "0.00", "reimbursements": "0.00", "net_pay": "81752.94", "gross_pay": "130635.89", "employee_bonuses": "0.00", "employee_commissions": "18536.37", "employee_cash_tips": "0.00", "employee_paycheck_tips": "0.00", "additional_earnings": "0.00", "owners_draw": "0.00", "check_amount": "2469.14", "employer_taxes": "6917.19", "employee_taxes": "35546.72", "benefits": "0.00", "employee_benefits_deductions": "13336.23", "imputed_pay": "0.00", "deferred_payroll_taxes": "0.00", "other_deductions": "240.00"}, "created_at": "2021-02-01T22:00:00Z"}, {"payroll_deadline": "2021-02-28", "check_date": "2021-03-01", "processed": false, "processed_date": "nil", "calculated_at": "nil", "uuid": "c8a232aa-0b11-4b8a-b005-71e9e705d0e6", "payroll_uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777", "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb", "off_cycle": false, "external": false, "pay_period": {"start_date": "2021-02-16", "end_date": "2021-03-01", "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501"}, "created_at": "2022-02-01T22:00:00Z"}]
  get-v1-companies-company_id-payroll_reversals:
    Example:
      parameters:
        path:
          company_id: "<id>"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"reversed_payroll_uuid": "09505984-8d8c-41a3-adbe-5740322ae8e9", "reversal_payroll_uuid": "0424688e-0a2e-4cd0-ac86-42283e788fb3", "reason": "Customer Request", "approved_at": null, "category": "convert_check_ee_requested", "reversed_employee_uuids": ["5f036964-185e-4c85-bbf2-3873e1203b30"]}
  get-v1-companies-company_id-payrolls-payroll_id:
    Unprocessed:
      parameters:
        path:
          company_id: "<id>"
          payroll_id: "<id>"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"payroll_deadline": "2021-02-18T22:00:00Z", "check_date": "2021-02-22", "processed": false, "processed_date": "<value>", "calculated_at": "<value>", "uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777", "payroll_uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777", "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb", "off_cycle": false, "auto_pilot": false, "external": false, "pay_period": {"start_date": "2021-02-01", "end_date": "2021-02-15", "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501"}, "payroll_status_meta": {"cancellable": false, "expected_check_date": "2021-02-22", "initial_check_date": "2021-02-22", "expected_debit_time": "2021-02-18T22:00:00Z", "payroll_late": false, "initial_debit_cutoff_time": "2021-02-18T22:00:00Z"}, "created_at": "2022-02-01T22:00:00Z", "submission_blockers": [{"blocker_type": "fast_ach_threshold_exceeded", "blocker_name": "Fast ACH Threshold Exceeded", "unblock_options": [{"unblock_type": "wire_in", "check_date": "2024-06-10T00:00:00Z"}, {"unblock_type": "move_to_four_day", "check_date": "2024-06-12T00:00:00Z", "metadata": {}}], "selected_option": null, "status": "unresolved"}], "processing_request": null}
    Processed:
      parameters:
        path:
          company_id: "<id>"
          payroll_id: "<id>"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"payroll_deadline": "2021-02-18T22:00:00Z", "check_date": "2021-02-22", "processed": true, "processed_date": "2021-02-18", "calculated_at": "2021-02-18T12:00:00Z", "payroll_uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777", "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb", "off_cycle": false, "auto_pilot": true, "external": false, "pay_period": {"start_date": "2021-02-01", "end_date": "2021-02-15", "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501"}, "payroll_status_meta": {"cancellable": false, "expected_check_date": "2021-02-22", "initial_check_date": "2021-02-22", "expected_debit_time": "2021-02-18T22:00:00Z", "payroll_late": false, "initial_debit_cutoff_time": "2021-02-18T22:00:00Z"}, "totals": {"company_debit": "121747.71", "net_pay_debit": "79283.80", "tax_debit": "42463.91", "reimbursement_debit": "0.00", "child_support_debit": "0.00", "reimbursements": "0.00", "net_pay": "81752.94", "gross_pay": "130635.89", "employee_bonuses": "0.00", "employee_commissions": "18536.37", "employee_cash_tips": "0.00", "employee_paycheck_tips": "0.00", "additional_earnings": "0.00", "owners_draw": "0.00", "check_amount": "2469.14", "employer_taxes": "6917.19", "employee_taxes": "35546.72", "benefits": "0.00", "employee_benefits_deductions": "13336.23", "imputed_pay": "0.00", "deferred_payroll_taxes": "0.00", "other_deductions": "240.00"}, "employee_compensations": [{"employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7067", "excluded": false, "gross_pay": "2791.25", "net_pay": "1953.31", "check_amount": "1953.31", "payment_method": "Direct Deposit", "fixed_compensations": [{"name": "Bonus", "amount": "100.00", "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242ba5"}, {"name": "Reimbursement", "amount": "100.00", "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e909ba"}], "hourly_compensations": [{"name": "Regular Hours", "hours": "40.000", "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3", "compensation_multiplier": 1, "flsa_status": "Nonexempt"}, {"name": "Overtime", "hours": "15.000", "job_uuid": "9d3760f0-d1f9-4700-8817-0fe2dce5cf23", "compensation_multiplier": 1.5, "flsa_status": "Nonexempt"}, {"name": "Double overtime", "hours": "0.000", "job_uuid": "b5eef9a9-4a87-4649-a80d-14878c05f44e", "compensation_multiplier": 2, "flsa_status": "Nonexempt"}, {"name": "Regular Hours", "hours": "40.000", "job_uuid": "332bd171-9efc-432b-abbb-a75c9dba706a", "compensation_multiplier": 1, "flsa_status": "Nonexempt"}, {"name": "Overtime", "hours": "5.000", "job_uuid": "ca9b3dc1-57ac-4736-901a-9b1c9634b9d5", "compensation_multiplier": 1.5, "flsa_status": "Nonexempt"}, {"name": "Double overtime", "hours": "0.000", "job_uuid": "1bad01e2-140c-49ed-9542-2388ce4a19b3", "compensation_multiplier": 2, "flsa_status": "Nonexempt"}], "paid_time_off": [{"name": "Vacation Hours", "hours": "20.000"}, {"name": "Sick Hours", "hours": "0.000"}, {"name": "Holiday Hours", "hours": "0.000"}], "benefits": [{"name": "Group Term Life", "employee_deduction": "100.00", "company_contribution": "50.00", "imputed": true}, {"name": "401K", "employee_deduction": "100.00", "company_contribution": "50.00", "imputed": false}], "deductions": [{"name": "Child Support", "amount": "80.00"}], "taxes": [{"name": "Federal Income Tax", "employer": false, "amount": "646.69"}, {"name": "Social Security", "employer": true, "amount": "191.25"}]}, {"employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7012", "excluded": false, "gross_pay": "2791.25", "net_pay": "1953.31", "check_amount": "1953.31", "payment_method": "Direct Deposit", "fixed_compensations": [{"name": "Bonus", "amount": "100.00", "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242b34"}, {"name": "Reimbursement", "amount": "100.00", "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e90955"}], "hourly_compensations": [{"name": "Regular Hours", "hours": "40.000", "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3", "compensation_multiplier": 1, "flsa_status": "Commission Only Exempt"}], "paid_time_off": [{"name": "Vacation Hours", "hours": "20.000"}, {"name": "Sick Hours", "hours": "0.000"}, {"name": "Holiday Hours", "hours": "0.000"}], "benefits": [{"name": "Group Term Life", "employee_deduction": "100.00", "company_contribution": "50.00", "imputed": true}, {"name": "401K", "employee_deduction": "100.00", "company_contribution": "50.00", "imputed": false}], "deductions": [{"name": "Child Support", "amount": "80.00"}], "taxes": [{"name": "Federal Income Tax", "employer": false, "amount": "646.69"}, {"name": "Social Security", "employer": true, "amount": "191.25"}]}, {"employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7781", "excluded": false, "gross_pay": "2791.25", "net_pay": "1953.31", "check_amount": "1953.31", "payment_method": "Direct Deposit", "fixed_compensations": [{"name": "Bonus", "amount": "100.00", "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242bab"}, {"name": "Reimbursement", "amount": "100.00", "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e909cd"}], "hourly_compensations": [{"name": "Regular Hours", "hours": "40.000", "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3", "compensation_multiplier": 1, "flsa_status": "Exempt"}], "paid_time_off": [{"name": "Vacation Hours", "hours": "20.000"}, {"name": "Sick Hours", "hours": "0.000"}, {"name": "Holiday Hours", "hours": "0.000"}], "benefits": [{"name": "Group Term Life", "employee_deduction": "100.00", "company_contribution": "50.00", "imputed": true}, {"name": "401K", "employee_deduction": "100.00", "company_contribution": "50.00", "imputed": false}], "deductions": [{"name": "Child Support", "amount": "80.00"}], "taxes": [{"name": "Federal Income Tax", "employer": false, "amount": "646.69"}, {"name": "Social Security", "employer": true, "amount": "191.25"}]}], "company_taxes": [{"name": "MO Compensation Deduction", "employer": true, "amount": "-0.92"}, {"name": "NY MCTMT", "employer": true, "amount": "5.00"}], "created_at": "2022-02-01T22:00:00Z", "credit_blockers": [{"blocker_type": "waiting_for_wire_in", "blocker_name": "Waiting for Wire In", "unblock_options": [{"unblock_type": "submit_wire", "check_date": "2024-06-10T00:00:00Z"}], "selected_option": "submit_wire", "status": "unresolved"}], "processing_request": {"status": "submit_success", "errors": []}}
  put-v1-companies-company_id-payrolls:
    Example:
      parameters:
        path:
          company_id: "<id>"
          payroll_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"employee_compensations": [{}, {}, {}]}
      responses:
        "200":
          application/json: {"payroll_deadline": "2022-02-18T22:00:00Z", "check_date": "2021-02-22", "processed": false, "processed_date": "<value>", "calculated_at": "<value>", "uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777", "payroll_uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777", "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb", "off_cycle": false, "off_cycle_reason": null, "auto_pilot": false, "external": false, "pay_period": {"start_date": "2021-02-01", "end_date": "2021-02-15", "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501"}, "payroll_status_meta": {"cancellable": false, "expected_check_date": "2022-02-22", "initial_check_date": "2022-02-22", "expected_debit_time": "2022-02-18T22:00:00Z", "payroll_late": false, "initial_debit_cutoff_time": "2022-02-18T22:00:00Z"}, "employee_compensations": [{"employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7067", "excluded": false, "version": "4ba36d23a78c7393b4900ef38019d8ff", "payment_method": "Direct Deposit", "fixed_compensations": [{"name": "Bonus", "amount": "100.00", "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242ba5"}, {"name": "Reimbursement", "amount": "100.00", "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e909ba"}], "hourly_compensations": [{"name": "Regular Hours", "hours": "40.000", "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3", "compensation_multiplier": 1, "flsa_status": "Nonexempt"}, {"name": "Overtime", "hours": "15.000", "job_uuid": "9d3760f0-d1f9-4700-8817-0fe2dce5cf23", "compensation_multiplier": 1.5, "flsa_status": "Nonexempt"}, {"name": "Double overtime", "hours": "0.000", "job_uuid": "b5eef9a9-4a87-4649-a80d-14878c05f44e", "compensation_multiplier": 2, "flsa_status": "Nonexempt"}, {"name": "Regular Hours", "hours": "40.000", "job_uuid": "332bd171-9efc-432b-abbb-a75c9dba706a", "compensation_multiplier": 1, "flsa_status": "Nonexempt"}, {"name": "Overtime", "hours": "5.000", "job_uuid": "ca9b3dc1-57ac-4736-901a-9b1c9634b9d5", "compensation_multiplier": 1.5, "flsa_status": "Nonexempt"}, {"name": "Double overtime", "hours": "0.000", "job_uuid": "1bad01e2-140c-49ed-9542-2388ce4a19b3", "compensation_multiplier": 2, "flsa_status": "Nonexempt"}], "paid_time_off": [{"name": "Vacation Hours", "hours": "20.000"}, {"name": "Sick Hours", "hours": "0.000"}, {"name": "Holiday Hours", "hours": "0.000"}]}, {"employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7012", "excluded": false, "version": "ff083257a5583291fb86656ad0df1b42", "payment_method": "Direct Deposit", "fixed_compensations": [{"name": "Bonus", "amount": "100.00", "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242b34"}, {"name": "Reimbursement", "amount": "100.00", "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e90955"}], "hourly_compensations": [{"name": "Regular Hours", "hours": "40.000", "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3", "compensation_multiplier": 1, "flsa_status": "Commission Only Exempt"}], "paid_time_off": [{"name": "Vacation Hours", "hours": "20.000"}, {"name": "Sick Hours", "hours": "0.000"}, {"name": "Holiday Hours", "hours": "0.000"}]}, {"employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7781", "excluded": false, "version": "259816479e3729bf855318af9b9adddf", "payment_method": "Direct Deposit", "fixed_compensations": [{"name": "Bonus", "amount": "100.00", "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242bab"}, {"name": "Reimbursement", "amount": "100.00", "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e909cd"}], "hourly_compensations": [{"name": "Regular Hours", "hours": "40.000", "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3", "compensation_multiplier": 1, "flsa_status": "Exempt"}], "paid_time_off": [{"name": "Vacation Hours", "hours": "20.000"}, {"name": "Sick Hours", "hours": "0.000"}, {"name": "Holiday Hours", "hours": "0.000"}]}], "created_at": "2022-02-01T22:00:00Z", "fixed_compensation_types": [{"name": "Bonus"}, {"name": "Commission"}, {"name": "Paycheck Tips"}, {"name": "Cash Tips"}, {"name": "Correction Payment"}, {"name": "Anniversary Bonus"}, {"name": "Internet Stipend"}, {"name": "Reimbursement"}], "processing_request": null}
    Basic:
      parameters:
        path:
          company_id: "<id>"
          payroll_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"employee_compensations": [{}, {}]}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
          payroll_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"employee_compensations": [{}]}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
          payroll_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"employee_compensations": [{}, {}, {}]}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  delete-v1-companies-company_id-payrolls:
    speakeasy-default-delete-v1-companies-company-id-payrolls:
      parameters:
        path:
          company_id: "<id>"
          payroll_id: "<id>"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
  put-v1-companies-company_id-payrolls-payroll_id-prepare:
    Example:
      parameters:
        path:
          company_id: "<id>"
          payroll_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"payroll_deadline": "2022-02-18T22:00:00Z", "check_date": "2021-02-22", "processed": false, "processed_date": "<value>", "calculated_at": "<value>", "uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777", "payroll_uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777", "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb", "off_cycle": false, "off_cycle_reason": null, "auto_pilot": false, "external": false, "pay_period": {"start_date": "2021-02-01", "end_date": "2021-02-15", "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501"}, "payroll_status_meta": {"cancellable": false, "expected_check_date": "2022-02-22", "initial_check_date": "2022-02-22", "expected_debit_time": "2022-02-18T22:00:00Z", "payroll_late": false, "initial_debit_cutoff_time": "2022-02-18T22:00:00Z"}, "employee_compensations": [{"employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7067", "excluded": false, "version": "4ba36d23a78c7393b4900ef38019d8ff", "payment_method": "Direct Deposit", "fixed_compensations": [{"name": "Bonus", "amount": "100.00", "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242ba5"}, {"name": "Reimbursement", "amount": "100.00", "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e909ba"}], "hourly_compensations": [{"name": "Regular Hours", "hours": "40.000", "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3", "compensation_multiplier": 1, "flsa_status": "Nonexempt"}, {"name": "Overtime", "hours": "15.000", "job_uuid": "9d3760f0-d1f9-4700-8817-0fe2dce5cf23", "compensation_multiplier": 1.5, "flsa_status": "Nonexempt"}, {"name": "Double overtime", "hours": "0.000", "job_uuid": "b5eef9a9-4a87-4649-a80d-14878c05f44e", "compensation_multiplier": 2, "flsa_status": "Nonexempt"}, {"name": "Regular Hours", "hours": "40.000", "job_uuid": "332bd171-9efc-432b-abbb-a75c9dba706a", "compensation_multiplier": 1, "flsa_status": "Nonexempt"}, {"name": "Overtime", "hours": "5.000", "job_uuid": "ca9b3dc1-57ac-4736-901a-9b1c9634b9d5", "compensation_multiplier": 1.5, "flsa_status": "Nonexempt"}, {"name": "Double overtime", "hours": "0.000", "job_uuid": "1bad01e2-140c-49ed-9542-2388ce4a19b3", "compensation_multiplier": 2, "flsa_status": "Nonexempt"}], "paid_time_off": [{"name": "Vacation Hours", "hours": "20.000"}, {"name": "Sick Hours", "hours": "0.000"}, {"name": "Holiday Hours", "hours": "0.000"}]}, {"employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7012", "excluded": false, "version": "ff083257a5583291fb86656ad0df1b42", "payment_method": "Direct Deposit", "fixed_compensations": [{"name": "Bonus", "amount": "100.00", "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242b34"}, {"name": "Reimbursement", "amount": "100.00", "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e90955"}], "hourly_compensations": [{"name": "Regular Hours", "hours": "40.000", "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3", "compensation_multiplier": 1, "flsa_status": "Commission Only Exempt"}], "paid_time_off": [{"name": "Vacation Hours", "hours": "20.000"}, {"name": "Sick Hours", "hours": "0.000"}, {"name": "Holiday Hours", "hours": "0.000"}]}, {"employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7781", "excluded": false, "version": "259816479e3729bf855318af9b9adddf", "payment_method": "Direct Deposit", "fixed_compensations": [{"name": "Bonus", "amount": "100.00", "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242bab"}, {"name": "Reimbursement", "amount": "100.00", "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e909cd"}], "hourly_compensations": [{"name": "Regular Hours", "hours": "40.000", "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3", "compensation_multiplier": 1, "flsa_status": "Exempt"}], "paid_time_off": [{"name": "Vacation Hours", "hours": "20.000"}, {"name": "Sick Hours", "hours": "0.000"}, {"name": "Holiday Hours", "hours": "0.000"}]}], "created_at": "2022-02-01T22:00:00Z", "fixed_compensation_types": [{"name": "Bonus"}, {"name": "Commission"}, {"name": "Paycheck Tips"}, {"name": "Cash Tips"}, {"name": "Correction Payment"}, {"name": "Anniversary Bonus"}, {"name": "Internet Stipend"}, {"name": "Reimbursement"}], "processing_request": null}
  get-v1-payment-receipts-payrolls-payroll_uuid:
    Example:
      parameters:
        path:
          payroll_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"payroll_uuid": "afccb970-357e-4013-81f5-85dafc74f9b6", "company_uuid": "c827aa0d-3928-4d5a-ab1f-400641a7d2b8", "name_of_sender": "Torp and Sons and Sons", "name_of_recipient": "Payroll Recipients", "recipient_notice": "Payroll recipients include the employees listed below plus the tax agencies for the taxes listed below.", "debit_date": "2022-06-02", "license": "ZenPayroll, Inc., dba Gusto is a licensed money transmitter. For more about Gusto’s licenses and your state-specific rights to request information, submit complaints, dispute errors, or cancel transactions, visit our license page.", "license_uri": "https://gusto.com/about/licenses", "right_to_refund": "https://gusto.com/about/licenses", "liability_of_licensee": "https://gusto.com/about/licenses", "totals": {"company_debit": "1080.47", "net_pay_debit": "748.34", "child_support_debit": "100.0", "reimbursement_debit": "50.0", "tax_debit": "182.13"}, "taxes": [{"name": "Federal Income Tax", "amount": "30.36"}, {"name": "Social Security", "amount": "104.54"}, {"name": "Medicare", "amount": "24.46"}, {"name": "Additional Medicare", "amount": "0.0"}, {"name": "TX SUTA", "amount": "22.77"}, {"name": "FUTA", "amount": "0.0"}], "employee_compensations": [{"employee_uuid": "f83d0bd8-7e20-43b9-834c-6d514ef6cb47", "employee_first_name": "Patricia", "employee_last_name": "Hamill", "payment_method": "Direct Deposit", "net_pay": "748.34", "total_tax": "182.13", "total_garnishments": "0.0", "child_support_garnishment": "100.0", "total_reimbursement": "50.0"}], "licensee": {"name": "Gusto, Zenpayroll Inc.", "address": "525 20th St", "city": "San Francisco", "state": "CA", "postal_code": "94107", "phone_number": "4157778888"}}
  get-v1-companies-payroll-blockers-company_uuid:
    Payroll Blockers:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"key": "wc_pending_approval", "message": "Worker's compensation policy needs to be accepted."}, {"key": "eftps_in_error", "message": "We could not make payments to the Electronic Federal Tax Payment System."}, {"key": "geocode_error", "message": "Company or employee address could not be verified. Please ensure all addresses are valid."}, {"key": "geocode_needed", "message": "Company or employee address verification is missing. Please ensure all addresses are entered correctly."}, {"key": "pay_schedule_setup_not_complete", "message": "Some employees don’t have a pay schedule set up yet. Please complete this step to run payroll."}, {"key": "invalid_signatory", "message": "A signatory who is authorized to sign documents on behalf of your company is required. Please ensure their identity verification is successful."}, {"key": "suspended", "message": "Company is suspended and cannot run payroll."}, {"key": "soft_suspended", "message": "Company is placed in a 'soft' suspension state and requires missing/incorrect information to be corrected."}, {"key": "pending_payroll_review", "message": "Payroll is blocked. We are reviewing payroll information in your account. Please contact support if you believe this is an error."}, {"key": "pending_recovery_case", "message": "Payroll is blocked due to an open recovery case. Please contact support if you believe this is an error."}, {"key": "pending_information_request", "message": "Payroll is blocked due to an open information request. Please contact support if you believe this is an error."}, {"key": "needs_approval", "message": "Company needs to be approved to run payroll."}, {"key": "missing_addresses", "message": "Company must add addresses in order to run payroll."}, {"key": "missing_federal_tax_setup", "message": "Company must complete federal tax setup in order to run payroll."}, {"key": "missing_industry_selection", "message": "Company must complete industry selection in order to run payroll."}, {"key": "missing_bank_info", "message": "Company must have a bank account in order to run payroll."}, {"key": "missing_employee_setup", "message": "Company must add employees in order to run payroll."}, {"key": "missing_state_tax_setup", "message": "Company must complete state tax setup in order to run payroll."}, {"key": "missing_pay_schedule", "message": "Company must have a pay schedule in order to run payroll."}, {"key": "missing_forms", "message": "Company forms must be signed in order to run payroll."}, {"key": "missing_bank_verification", "message": "Company bank account must be verified in order to run payroll."}, {"key": "missing_signatory", "message": "Company must have a verified signatory in order to run payroll."}]
  post-companies-payroll-skip-company_uuid:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"payroll_type": "Regular", "start_date": "2023-05-26T00:00:00Z", "end_date": "2023-06-25T00:00:00Z", "pay_schedule_uuid": "85100524-4b42-4d2d-bd62-9d864f9aea64"}
      responses:
        "422":
          application/json: {}
  post-payrolls-gross-up-payroll_uuid:
    Example:
      parameters:
        path:
          payroll_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"employee_uuid": "be48c41e-142d-4116-9430-5aba2313fac7", "net_pay": "1000.00"}
      responses:
        "422":
          application/json: {}
        "200": {}
  put-v1-companies-company_id-payrolls-payroll_id-calculate:
    Example:
      parameters:
        path:
          company_id: "<id>"
          payroll_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {}
  put-v1-companies-company_id-payrolls-payroll_id-submit:
    Example:
      parameters:
        path:
          company_id: "<id>"
          payroll_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {}
  put-api-v1-companies-company_id-payrolls-payroll_id-cancel:
    Unprocessed:
      parameters:
        path:
          company_id: "<id>"
          payroll_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"payroll_deadline": "2021-02-18T22:00:00Z", "check_date": "2021-02-22", "processed": false, "processed_date": "<value>", "calculated_at": "<value>", "uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777", "payroll_uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777", "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb", "off_cycle": false, "auto_pilot": false, "external": false, "pay_period": {"start_date": "2021-02-01", "end_date": "2021-02-15", "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501"}, "payroll_status_meta": {"cancellable": false, "expected_check_date": "2021-02-22", "initial_check_date": "2021-02-22", "expected_debit_time": "2021-02-18T22:00:00Z", "payroll_late": false, "initial_debit_cutoff_time": "2021-02-18T22:00:00Z"}, "created_at": "2022-02-01T22:00:00Z", "submission_blockers": [{"blocker_type": "fast_ach_threshold_exceeded", "blocker_name": "Fast ACH Threshold Exceeded", "unblock_options": [{"unblock_type": "wire_in", "check_date": "2024-06-10T00:00:00Z"}, {"unblock_type": "move_to_four_day", "check_date": "2024-06-12T00:00:00Z", "metadata": {}}], "selected_option": null, "status": "unresolved"}], "processing_request": null}
    Processed:
      parameters:
        path:
          company_id: "<id>"
          payroll_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"payroll_deadline": "2021-02-18T22:00:00Z", "check_date": "2021-02-22", "processed": true, "processed_date": "2021-02-18", "calculated_at": "2021-02-18T12:00:00Z", "payroll_uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777", "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb", "off_cycle": false, "auto_pilot": true, "external": false, "pay_period": {"start_date": "2021-02-01", "end_date": "2021-02-15", "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501"}, "payroll_status_meta": {"cancellable": false, "expected_check_date": "2021-02-22", "initial_check_date": "2021-02-22", "expected_debit_time": "2021-02-18T22:00:00Z", "payroll_late": false, "initial_debit_cutoff_time": "2021-02-18T22:00:00Z"}, "totals": {"company_debit": "121747.71", "net_pay_debit": "79283.80", "tax_debit": "42463.91", "reimbursement_debit": "0.00", "child_support_debit": "0.00", "reimbursements": "0.00", "net_pay": "81752.94", "gross_pay": "130635.89", "employee_bonuses": "0.00", "employee_commissions": "18536.37", "employee_cash_tips": "0.00", "employee_paycheck_tips": "0.00", "additional_earnings": "0.00", "owners_draw": "0.00", "check_amount": "2469.14", "employer_taxes": "6917.19", "employee_taxes": "35546.72", "benefits": "0.00", "employee_benefits_deductions": "13336.23", "imputed_pay": "0.00", "deferred_payroll_taxes": "0.00", "other_deductions": "240.00"}, "employee_compensations": [{"employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7067", "excluded": false, "gross_pay": "2791.25", "net_pay": "1953.31", "check_amount": "1953.31", "payment_method": "Direct Deposit", "fixed_compensations": [{"name": "Bonus", "amount": "100.00", "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242ba5"}, {"name": "Reimbursement", "amount": "100.00", "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e909ba"}], "hourly_compensations": [{"name": "Regular Hours", "hours": "40.000", "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3", "compensation_multiplier": 1, "flsa_status": "Nonexempt"}, {"name": "Overtime", "hours": "15.000", "job_uuid": "9d3760f0-d1f9-4700-8817-0fe2dce5cf23", "compensation_multiplier": 1.5, "flsa_status": "Nonexempt"}, {"name": "Double overtime", "hours": "0.000", "job_uuid": "b5eef9a9-4a87-4649-a80d-14878c05f44e", "compensation_multiplier": 2, "flsa_status": "Nonexempt"}, {"name": "Regular Hours", "hours": "40.000", "job_uuid": "332bd171-9efc-432b-abbb-a75c9dba706a", "compensation_multiplier": 1, "flsa_status": "Nonexempt"}, {"name": "Overtime", "hours": "5.000", "job_uuid": "ca9b3dc1-57ac-4736-901a-9b1c9634b9d5", "compensation_multiplier": 1.5, "flsa_status": "Nonexempt"}, {"name": "Double overtime", "hours": "0.000", "job_uuid": "1bad01e2-140c-49ed-9542-2388ce4a19b3", "compensation_multiplier": 2, "flsa_status": "Nonexempt"}], "paid_time_off": [{"name": "Vacation Hours", "hours": "20.000"}, {"name": "Sick Hours", "hours": "0.000"}, {"name": "Holiday Hours", "hours": "0.000"}], "benefits": [{"name": "Group Term Life", "employee_deduction": "100.00", "company_contribution": "50.00", "imputed": true}, {"name": "401K", "employee_deduction": "100.00", "company_contribution": "50.00", "imputed": false}], "deductions": [{"name": "Child Support", "amount": "80.00"}], "taxes": [{"name": "Federal Income Tax", "employer": false, "amount": "646.69"}, {"name": "Social Security", "employer": true, "amount": "191.25"}]}, {"employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7012", "excluded": false, "gross_pay": "2791.25", "net_pay": "1953.31", "check_amount": "1953.31", "payment_method": "Direct Deposit", "fixed_compensations": [{"name": "Bonus", "amount": "100.00", "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242b34"}, {"name": "Reimbursement", "amount": "100.00", "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e90955"}], "hourly_compensations": [{"name": "Regular Hours", "hours": "40.000", "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3", "compensation_multiplier": 1, "flsa_status": "Commission Only Exempt"}], "paid_time_off": [{"name": "Vacation Hours", "hours": "20.000"}, {"name": "Sick Hours", "hours": "0.000"}, {"name": "Holiday Hours", "hours": "0.000"}], "benefits": [{"name": "Group Term Life", "employee_deduction": "100.00", "company_contribution": "50.00", "imputed": true}, {"name": "401K", "employee_deduction": "100.00", "company_contribution": "50.00", "imputed": false}], "deductions": [{"name": "Child Support", "amount": "80.00"}], "taxes": [{"name": "Federal Income Tax", "employer": false, "amount": "646.69"}, {"name": "Social Security", "employer": true, "amount": "191.25"}]}, {"employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7781", "excluded": false, "gross_pay": "2791.25", "net_pay": "1953.31", "check_amount": "1953.31", "payment_method": "Direct Deposit", "fixed_compensations": [{"name": "Bonus", "amount": "100.00", "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242bab"}, {"name": "Reimbursement", "amount": "100.00", "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e909cd"}], "hourly_compensations": [{"name": "Regular Hours", "hours": "40.000", "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3", "compensation_multiplier": 1, "flsa_status": "Exempt"}], "paid_time_off": [{"name": "Vacation Hours", "hours": "20.000"}, {"name": "Sick Hours", "hours": "0.000"}, {"name": "Holiday Hours", "hours": "0.000"}], "benefits": [{"name": "Group Term Life", "employee_deduction": "100.00", "company_contribution": "50.00", "imputed": true}, {"name": "401K", "employee_deduction": "100.00", "company_contribution": "50.00", "imputed": false}], "deductions": [{"name": "Child Support", "amount": "80.00"}], "taxes": [{"name": "Federal Income Tax", "employer": false, "amount": "646.69"}, {"name": "Social Security", "employer": true, "amount": "191.25"}]}], "company_taxes": [{"name": "MO Compensation Deduction", "employer": true, "amount": "-0.92"}, {"name": "NY MCTMT", "employer": true, "amount": "5.00"}], "created_at": "2022-02-01T22:00:00Z", "credit_blockers": [{"blocker_type": "waiting_for_wire_in", "blocker_name": "Waiting for Wire In", "unblock_options": [{"unblock_type": "submit_wire", "check_date": "2024-06-10T00:00:00Z"}], "selected_option": "submit_wire", "status": "unresolved"}], "processing_request": {"status": "submit_success", "errors": []}}
    Basic:
      parameters:
        path:
          company_id: "<id>"
          payroll_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
          payroll_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
          payroll_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-payrolls-payroll_uuid-employees-employee_uuid-pay_stub:
    speakeasy-default-get-v1-payrolls-payroll-uuid-employees-employee-uuid-pay-stub:
      parameters:
        path:
          payroll_id: "<id>"
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
  get-v1-employees-employee_uuid-pay_stubs:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "d2cec746-caee-464a-bcaf-00d93f7049c9", "check_date": "2023-11-24T00:00:00Z", "gross_pay": "880", "net_pay": "541.02", "payroll_uuid": "a039cafb-745e-4af4-bf1e-935a86fc18e0", "check_amount": "500.2"}]
  post-v1-payrolls-payroll_uuid-generated_documents-printable_payroll_checks:
    Example:
      parameters:
        path:
          payroll_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"printing_format": "bottom"}
      responses:
        "200":
          application/json: {"payroll_uuid": "a83d0bd8-7d20-43b9-834c-6d514ef6cb20", "printing_format": "top", "starting_check_number": "10", "request_uuid": "p83d0ca8-7d41-42a9-834y-7d218ef6cb20", "status": "pending", "employee_check_number_mapping": [{"employee_uuid": "9fcf1b1d-8886-4691-9283-383d3bdd4fd9", "check_number": 10}]}
    Basic:
      parameters:
        path:
          payroll_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"printing_format": "top"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          payroll_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"printing_format": "bottom"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          payroll_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"printing_format": "bottom"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  post-v1-payrolls-payroll_id-calculate_accruing_time_off_hours:
    Example:
      parameters:
        path:
          payroll_id: "<id>"
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"regular_hours_worked": 30.25, "overtime_hours_worked": 10, "double_overtime_hours_worked": 0, "pto_hours_used": 5.5, "sick_hours_used": 0}
      responses:
        "200":
          application/json: [{"time_off_policy_uuid": "c3a15554-f124-415d-b2c4-90b430fd8eb1", "hours": "3.2"}, {"time_off_policy_uuid": "386fc48d-52d2-4009-87b3-368f74f6b3df", "hours": "6.0"}]
    Basic:
      parameters:
        path:
          payroll_id: "<id>"
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          payroll_id: "<id>"
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          payroll_id: "<id>"
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-time_off_policies-time_off_policy_uuid:
    Unlimited Policy:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "3f746cd0-dd08-408f-b712-8180c7c621e9", "company_uuid": "de83cff2-8e7a-448e-a28c-14258a9971c3", "name": "Test Vacation Unlimited Policy", "policy_type": "vacation", "accrual_method": "unlimited", "accrual_rate": "<value>", "accrual_rate_unit": "<value>", "paid_out_on_termination": false, "accrual_waiting_period_days": 700347, "carryover_limit_hours": "<value>", "max_accrual_hours_per_year": "<value>", "max_hours": "<value>", "complete": true, "version": "f5556bce3d75ec2b62bd11990aa7993a", "is_active": true, "employees": [{"uuid": "05ed3150-591e-4f8b-bfd5-55d478edd2d8"}, {"uuid": "3633ce57-abb7-422f-8c5a-455566618e6a"}, {"uuid": "9b37429c-e540-40fb-86b3-738ca9af65c7"}]}
    Fixed Policy:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "2439c13f-f6d7-4a93-af8c-175fd4cc7ce8", "company_uuid": "f5f7b10d-2ddb-42f6-a955-d55320ce5316", "name": "Test Vacation Fixed Policy", "policy_type": "vacation", "accrual_method": "per_anniversary_year", "accrual_rate": "120.0", "accrual_rate_unit": "<value>", "paid_out_on_termination": true, "accrual_waiting_period_days": 0, "carryover_limit_hours": "240.0", "max_accrual_hours_per_year": "120.0", "max_hours": "300.0", "complete": true, "version": "f5556bce3d75ec2b62bd11990aa7993a", "is_active": true, "employees": [{"uuid": "de7a5fb3-2e0f-460a-abbf-467fe310bf5c"}, {"uuid": "92af03c7-a833-43ae-bae8-f67007a59b37"}]}
    Hourly Policy:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "bd5f354f-12e0-4a5e-ad1f-953bb2685ad4", "company_uuid": "6767445f-5075-4ea4-a7f5-d5b5b93d4d60", "name": "Test Vacation Hourly Policy", "policy_type": "vacation", "accrual_method": "per_hour_paid", "accrual_rate": "4.0", "accrual_rate_unit": "80.0", "paid_out_on_termination": true, "accrual_waiting_period_days": 30, "carryover_limit_hours": "200.0", "max_accrual_hours_per_year": "120.0", "max_hours": "240.0", "complete": true, "version": "f5556bce3d75ec2b62bd11990aa7993a", "is_active": true, "employees": [{"uuid": "1ea2764d-0f1a-4f09-b1d9-3006aecf63c4"}, {"uuid": "a0db19a2-7c8f-42b4-9d4c-2e6246c3d6e8"}]}
  put-time_off_policies-time_off_policy_uuid:
    example:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "Hourly Vacation Policy", "accrual_method": "per_hour_paid", "accrual_rate": "4.0", "accrual_rate_unit": "80.0", "paid_out_on_termination": true, "accrual_waiting_period_days": 30, "carryover_limit_hours": "200.0", "max_accrual_hours_per_year": "120.0", "max_hours": "240.0"}
      responses:
        "200":
          application/json: {"uuid": "d95fa7f0-e743-42ce-b47c-b60cc78135dd", "company_uuid": "<id>", "name": "<value>", "policy_type": "sick", "accrual_method": "<value>", "is_active": false, "employees": [{}]}
        "422": {}
    Unlimited Vacation Policy:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "200":
          application/json: {"uuid": "3f746cd0-dd08-408f-b712-8180c7c621e9", "company_uuid": "de83cff2-8e7a-448e-a28c-14258a9971c3", "name": "Unlimited Vacation Policy", "policy_type": "vacation", "accrual_method": "unlimited", "accrual_rate": "<value>", "accrual_rate_unit": "<value>", "paid_out_on_termination": false, "accrual_waiting_period_days": 857478, "carryover_limit_hours": "<value>", "max_accrual_hours_per_year": "<value>", "max_hours": "<value>", "complete": true, "is_active": true, "employees": []}
    Hourly Vacation Policy:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "200":
          application/json: {"uuid": "d86223a1-ec67-4204-8d6a-0f36499c02d0", "company_uuid": "f43bcd64-7f57-4d4e-9c1a-7c90bab8a358", "name": "Test Vacation Hourly Policy", "policy_type": "vacation", "accrual_method": "per_hour_paid", "accrual_rate": "4.0", "accrual_rate_unit": "80.0", "paid_out_on_termination": true, "accrual_waiting_period_days": 30, "carryover_limit_hours": "200.0", "max_accrual_hours_per_year": "120.0", "max_hours": "240.0", "complete": true, "is_active": true, "employees": []}
    Basic:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-companies-company_uuid-time_off_policies:
    example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "3f746cd0-dd08-408f-b712-8180c7c621e9", "company_uuid": "de83cff2-8e7a-448e-a28c-14258a9971c3", "name": "Test Vacation Unlimited Policy", "policy_type": "vacation", "accrual_method": "unlimited", "accrual_rate": "<value>", "accrual_rate_unit": "<value>", "paid_out_on_termination": false, "accrual_waiting_period_days": 461008, "carryover_limit_hours": "<value>", "max_accrual_hours_per_year": "<value>", "max_hours": "<value>", "complete": true, "version": "f5556bce3d75ec2b62bd11990aa7993a", "is_active": true, "employees": [{"uuid": "05ed3150-591e-4f8b-bfd5-55d478edd2d8"}, {"uuid": "3633ce57-abb7-422f-8c5a-455566618e6a"}, {"uuid": "9b37429c-e540-40fb-86b3-738ca9af65c7"}]}, {"uuid": "2439c13f-f6d7-4a93-af8c-175fd4cc7ce8", "company_uuid": "f5f7b10d-2ddb-42f6-a955-d55320ce5316", "name": "Test Vacation Fixed Policy", "policy_type": "vacation", "accrual_method": "per_anniversary_year", "accrual_rate": "120.0", "accrual_rate_unit": "<value>", "paid_out_on_termination": true, "accrual_waiting_period_days": 0, "carryover_limit_hours": "240.0", "max_accrual_hours_per_year": "120.0", "max_hours": "300.0", "complete": true, "version": "f5556bce3d75ec2b62bd11990aa7993a", "is_active": true, "employees": [{"uuid": "de7a5fb3-2e0f-460a-abbf-467fe310bf5c"}, {"uuid": "92af03c7-a833-43ae-bae8-f67007a59b37"}]}, {"uuid": "bd5f354f-12e0-4a5e-ad1f-953bb2685ad4", "company_uuid": "6767445f-5075-4ea4-a7f5-d5b5b93d4d60", "name": "Test Vacation Hourly Policy", "policy_type": "vacation", "accrual_method": "per_hour_paid", "accrual_rate": "4.0", "accrual_rate_unit": "80.0", "paid_out_on_termination": true, "accrual_waiting_period_days": 30, "carryover_limit_hours": "200.0", "max_accrual_hours_per_year": "120.0", "max_hours": "240.0", "complete": true, "version": "f5556bce3d75ec2b62bd11990aa7993a", "is_active": true, "employees": [{"uuid": "1ea2764d-0f1a-4f09-b1d9-3006aecf63c4"}, {"uuid": "a0db19a2-7c8f-42b4-9d4c-2e6246c3d6e8"}]}]
  post-companies-company_uuid-time_off_policies:
    Unlimited Policy:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "Unlimited Vacation Policy", "policy_type": "vacation", "accrual_method": "unlimited"}
      responses:
        "201":
          application/json: {"uuid": "7a621cf0-21cd-49cf-8540-3315211a509a", "company_uuid": "<id>", "name": "<value>", "policy_type": "vacation", "accrual_method": "<value>", "is_active": false, "employees": []}
        "422": {}
    Hourly Policy:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "Test Vacation Hourly Policy", "policy_type": "vacation", "accrual_method": "per_hour_paid", "accrual_rate": "4.0", "accrual_rate_unit": "80.0", "paid_out_on_termination": true, "accrual_waiting_period_days": 30, "carryover_limit_hours": "200.0", "max_accrual_hours_per_year": "120.0", "max_hours": "240.0"}
      responses:
        "201":
          application/json: {"uuid": "a8e774c2-becc-4376-b917-75e024985613", "company_uuid": "<id>", "name": "<value>", "policy_type": "sick", "accrual_method": "<value>", "is_active": true, "employees": [{}, {}, {}]}
        "422": {}
    Unlimited Vacation Policy:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "<value>", "policy_type": "<value>", "accrual_method": "per_hour_paid_no_overtime"}
      responses:
        "201":
          application/json: {"uuid": "3f746cd0-dd08-408f-b712-8180c7c621e9", "company_uuid": "de83cff2-8e7a-448e-a28c-14258a9971c3", "name": "Unlimited Vacation Policy", "policy_type": "vacation", "accrual_method": "unlimited", "accrual_rate": "<value>", "accrual_rate_unit": "<value>", "paid_out_on_termination": false, "accrual_waiting_period_days": 486589, "carryover_limit_hours": "<value>", "max_accrual_hours_per_year": "<value>", "max_hours": "<value>", "complete": true, "is_active": true, "employees": []}
    Hourly Vacation Policy:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "<value>", "policy_type": "<value>", "accrual_method": "unlimited"}
      responses:
        "201":
          application/json: {"uuid": "d86223a1-ec67-4204-8d6a-0f36499c02d0", "company_uuid": "f43bcd64-7f57-4d4e-9c1a-7c90bab8a358", "name": "Test Vacation Hourly Policy", "policy_type": "vacation", "accrual_method": "per_hour_paid", "accrual_rate": "4.0", "accrual_rate_unit": "80.0", "paid_out_on_termination": true, "accrual_waiting_period_days": 30, "carryover_limit_hours": "200.0", "max_accrual_hours_per_year": "120.0", "max_hours": "240.0", "complete": true, "is_active": true, "employees": []}
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "<value>", "policy_type": "<value>", "accrual_method": "per_pay_period"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "<value>", "policy_type": "<value>", "accrual_method": "per_hour_paid"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "<value>", "policy_type": "<value>", "accrual_method": "per_calendar_year"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  put-version-time_off_policies-time_off_policy_uuid-add_employees:
    Unlimited Policy:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "200":
          application/json: {"uuid": "3f746cd0-dd08-408f-b712-8180c7c621e9", "company_uuid": "de83cff2-8e7a-448e-a28c-14258a9971c3", "name": "test policy", "policy_type": "vacation", "accrual_method": "unlimited", "accrual_rate": "<value>", "accrual_rate_unit": "<value>", "paid_out_on_termination": false, "accrual_waiting_period_days": 556955, "carryover_limit_hours": "<value>", "max_accrual_hours_per_year": "<value>", "max_hours": "<value>", "complete": true, "is_active": true, "employees": [{"uuid": "05ed3150-591e-4f8b-bfd5-55d478edd2d8"}]}
    Fixed/Hourly Policy:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "200":
          application/json: {"uuid": "2612c945-2062-42f1-89d8-e290bf96bb7f", "company_uuid": "<id>", "name": "<value>", "policy_type": "vacation", "accrual_method": "<value>", "is_active": false, "employees": []}
        "422": {}
    Hourly Policy:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "200":
          application/json: {"uuid": "3f746cd0-dd08-408f-b712-8180c7c621e9", "company_uuid": "de83cff2-8e7a-448e-a28c-14258a9971c3", "name": "test policy", "policy_type": "vacation", "accrual_method": "per_hour_paid", "accrual_rate": "4.0", "accrual_rate_unit": "80.0", "paid_out_on_termination": true, "accrual_waiting_period_days": 30, "carryover_limit_hours": "200.0", "max_accrual_hours_per_year": "120.0", "max_hours": "240.0", "complete": true, "is_active": true, "employees": [{"uuid": "56c672b4-3918-45cd-a3bb-a62ae0ff1307"}, {"uuid": "28e7a45d-32dd-4925-a82a-9a3ccc6d302c"}, {"uuid": "f60650da-ba18-417a-b2ab-3c9b6f0fe4f2"}]}
    Basic:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  put-v1-time_off_policies-time_off_policy_uuid-remove_employees:
    example:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "200":
          application/json: {"uuid": "3f746cd0-dd08-408f-b712-8180c7c621e9", "company_uuid": "de83cff2-8e7a-448e-a28c-14258a9971c3", "name": "test policy", "policy_type": "vacation", "accrual_method": "unlimited", "accrual_rate": "<value>", "accrual_rate_unit": "<value>", "paid_out_on_termination": false, "accrual_waiting_period_days": 75298, "carryover_limit_hours": "<value>", "max_accrual_hours_per_year": "<value>", "max_hours": "<value>", "complete": true, "is_active": true, "employees": [{"uuid": "05ed3150-591e-4f8b-bfd5-55d478edd2d8"}]}
    Basic:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  put-version-time_off_policies-time_off_policy_uuid-balance:
    example:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "200":
          application/json: {"uuid": "3f746cd0-dd08-408f-b712-8180c7c621e9", "company_uuid": "de83cff2-8e7a-448e-a28c-14258a9971c3", "name": "test policy", "policy_type": "vacation", "accrual_method": "per_hour_paid", "accrual_rate": "4.0", "accrual_rate_unit": "80.0", "paid_out_on_termination": true, "accrual_waiting_period_days": 30, "carryover_limit_hours": "200.0", "max_accrual_hours_per_year": "120.0", "max_hours": "240.0", "complete": true, "is_active": true, "employees": [{"uuid": "56c672b4-3918-45cd-a3bb-a62ae0ff1307"}, {"uuid": "28e7a45d-32dd-4925-a82a-9a3ccc6d302c"}, {"uuid": "f60650da-ba18-417a-b2ab-3c9b6f0fe4f2"}]}
    Basic:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  put-v1-time_off_policies-time_off_policy_uuid-deactivate:
    example:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "3f746cd0-dd08-408f-b712-8180c7c621e9", "company_uuid": "de83cff2-8e7a-448e-a28c-14258a9971c3", "name": "test policy", "policy_type": "vacation", "accrual_method": "unlimited", "accrual_rate": "<value>", "accrual_rate_unit": "<value>", "paid_out_on_termination": false, "accrual_waiting_period_days": 340065, "carryover_limit_hours": "<value>", "max_accrual_hours_per_year": "<value>", "max_hours": "<value>", "complete": true, "is_active": false, "employees": [{"uuid": "05ed3150-591e-4f8b-bfd5-55d478edd2d8"}]}
    Basic:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-contractor_payments-contractor_payment_uuid-receipt:
    Example:
      parameters:
        path:
          contractor_payment_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"contractor_payment_uuid": "afccb970-357e-4013-81f5-85dafc74f9b6", "company_uuid": "c827aa0d-3928-4d5a-ab1f-400641a7d2b8", "name_of_sender": "Torp and Sons and Sons", "name_of_recipient": "Patricia Hamill", "debit_date": "2022-06-02", "license": "Your payroll provider partners with Gusto Inc. for payments processing. Gusto Inc. is a licensed money transmitter. Learn more on our license page.", "license_uri": "https://gusto.com/about/licenses", "right_to_refund": "https://gusto.com/about/licenses", "liability_of_licensee": "https://gusto.com/about/licenses", "totals": {"company_debit": "748.34"}, "contractor_payments": [{"contractor_uuid": "f83d0bd8-7e20-43b9-834c-6d514ef6cb47", "contractor_first_name": "Patricia", "contractor_last_name": "Hamill", "contractor_business_name": "", "contractor_type": "Individual", "payment_method": "Direct Deposit", "wage": "448.34", "bonus": "248.00", "reimbursement": "100.00"}], "licensee": {"name": "Gusto, Zenpayroll Inc.", "address": "525 20th St", "city": "San Francisco", "state": "CA", "postal_code": "94107", "phone_number": "4157778888"}}
  get-v1-contractor_payments-contractor_payment_uuid-fund:
    Example:
      parameters:
        path:
          contractor_payment_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "04552eb9-7829-4b18-ae96-6983552948df", "contractor_uuid": "bc57832c-d8bc-43a7-ae99-3a03380ff037", "bonus": "20.0", "date": "2020-10-19", "hours": "40.0", "payment_method": "Direct Deposit", "reimbursement": "100.0", "status": "Unfunded", "hourly_rate": "18.0", "may_cancel": true, "wage": "0.0", "wage_type": "Hourly", "wage_total": "740.00"}
    Basic:
      parameters:
        path:
          contractor_payment_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          contractor_payment_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          contractor_payment_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  post-v1-companies-company_id-contractor_payments:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"contractor_uuid": "<id>", "date": "2020-01-01", "payment_method": "Direct Deposit", "wage": 5000, "hours": 40, "bonus": 500, "reimbursement": 20}
      responses:
        "200":
          application/json: {"uuid": "04552eb9-7829-4b18-ae96-6983552948df", "contractor_uuid": "bc57832c-d8bc-43a7-ae99-3a03380ff037", "bonus": "20.0", "date": "2020-10-19", "hours": "40.0", "payment_method": "Direct Deposit", "reimbursement": "100.0", "status": "Unfunded", "hourly_rate": "18.0", "may_cancel": true, "wage": "0.0", "wage_type": "Hourly", "wage_total": "740.00"}
    Basic:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"contractor_uuid": "<id>", "date": "2020-01-01", "payment_method": "Direct Deposit", "wage": 5000, "hours": 40, "bonus": 500, "reimbursement": 20}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"contractor_uuid": "<id>", "date": "2020-01-01", "payment_method": "Direct Deposit", "wage": 5000, "hours": 40, "bonus": 500, "reimbursement": 20}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"contractor_uuid": "<id>", "date": "2020-01-01", "payment_method": "Direct Deposit", "wage": 5000, "hours": 40, "bonus": 500, "reimbursement": 20}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-companies-company_id-contractor_payments:
    Example:
      parameters:
        path:
          company_id: "<id>"
        query:
          start_date: "2020-01-01"
          end_date: "2020-12-31"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {}
  get-v1-companies-company_id-contractor_payment-contractor-payment:
    Example:
      parameters:
        path:
          company_id: "<id>"
          contractor_payment_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "04552eb9-7829-4b18-ae96-6983552948df", "contractor_uuid": "bc57832c-d8bc-43a7-ae99-3a03380ff037", "bonus": "20.0", "date": "2020-10-19", "hours": "40.0", "payment_method": "Direct Deposit", "reimbursement": "100.0", "status": "Unfunded", "hourly_rate": "18.0", "may_cancel": true, "wage": "0.0", "wage_type": "Hourly", "wage_total": "740.00"}
  delete-v1-companies-company_id-contractor_payment-contractor-payment:
    Basic:
      parameters:
        path:
          company_id: "<id>"
          contractor_payment_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
          contractor_payment_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
          contractor_payment_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-companies-company_uuid-contractor_payments-preview:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"contractor_payments": [{}]}
      responses:
        "200":
          application/json: {"expected_debit_date": "2022-08-16"}
    example-1:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"contractor_payments": []}
      responses:
        "422":
          application/json: {"errors": {"check_date": [{"type": "Invalid Attribute", "message": "You cannot issue historical payments for the future, please choose a date in the past.", "full_message": "You cannot issue historical payments for the future, please choose a date in the past."}]}}
  post-v1-companies-company_id-contractor_payment_groups:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"check_date": "2020-01-01", "creation_token": "1d532d13-8f61-4a57-ad3c-b5fac1c6e05e", "contractor_payments": [{"payment_method": "Direct Deposit", "wage": 5000, "hours": 40, "bonus": 500, "reimbursement": 20}]}
      responses:
        "200":
          application/json: {"uuid": "f693e034-d833-46e3-88d4-2c820c383c57", "company_uuid": "c54046f7-1be4-4c54-8194-f4842c30c86d", "check_date": "2024-05-07T00:00:00Z", "debit_date": "2024-05-01T00:00:00Z", "status": "Unfunded", "creation_token": "45ef81bb-ae24-4ad1-b2c6-6e563a4c30ed", "totals": {"amount": "2295.0", "debit_amount": "2295.0", "wage_amount": "2220.0", "reimbursement_amount": "75.0"}, "contractor_payments": [{"uuid": "630dc982-f498-4ebc-a6dc-4d76711027ce", "contractor_uuid": "2e6d0970-31bf-47ce-bdb4-713e4207ecf4", "bonus": "0.0", "hours": "40.0", "payment_method": "Direct Deposit", "reimbursement": "75.0", "status": "Unfunded", "hourly_rate": "18.0", "may_cancel": false, "wage": "0.0", "wage_type": "Hourly", "wage_total": "720.0"}, {"uuid": "12f51eba-d653-4357-8c05-1f1f8d0fd5e3", "contractor_uuid": "a975fda0-fcf5-469a-a5fd-06e43d1cd99d", "bonus": "0.0", "hours": "0.0", "payment_method": "Check", "reimbursement": "0.0", "status": "Unfunded", "hourly_rate": "0.0", "may_cancel": false, "wage": "1500.0", "wage_type": "Fixed", "wage_total": "1500.0"}]}
    Basic:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"check_date": "2020-01-01", "creation_token": "1d532d13-8f61-4a57-ad3c-b5fac1c6e05e", "contractor_payments": [{"payment_method": "Direct Deposit", "wage": 5000, "hours": 40, "bonus": 500, "reimbursement": 20}, {"payment_method": "Direct Deposit", "wage": 5000, "hours": 40, "bonus": 500, "reimbursement": 20}]}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"check_date": "2020-01-01", "creation_token": "1d532d13-8f61-4a57-ad3c-b5fac1c6e05e", "contractor_payments": [{"payment_method": "Direct Deposit", "wage": 5000, "hours": 40, "bonus": 500, "reimbursement": 20}]}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"check_date": "2020-01-01", "creation_token": "1d532d13-8f61-4a57-ad3c-b5fac1c6e05e", "contractor_payments": []}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-companies-company_id-contractor_payment_groups:
    Example:
      parameters:
        path:
          company_id: "<id>"
        query:
          start_date: "2020-01-01"
          end_date: "2020-12-31"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "7f2337f9-9b78-44b9-aeed-be4777b833a8", "company_uuid": "c54046f7-1be4-4c54-8194-f4842c30c86d", "check_date": "2024-03-15T00:00:00Z", "debit_date": "2024-03-11T00:00:00Z", "status": "Funded", "creation_token": "a51a3500-3200-43af-a738-169d4b66a9db", "totals": {"debit_amount": "740.00", "wage_amount": "720.00", "reimbursement_amount": "20.00"}}, {"uuid": "56260b3d-c375-415c-b77a-75d99f717193", "company_uuid": "c54046f7-1be4-4c54-8194-f4842c30c86d", "check_date": "2024-05-02T00:00:00Z", "debit_date": "2024-04-26T00:00:00Z", "status": "Unfunded", "creation_token": "45ef81bb-ae24-4ad1-b2c6-6e563a4c30ed", "totals": {"debit_amount": "2365.00", "wage_amount": "2270.00", "reimbursement_amount": "95.00"}}]
  post-v1-companies-company_id-contractor_payment_groups-preview:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"check_date": "2020-01-01", "creation_token": "1d532d13-8f61-4a57-ad3c-b5fac1c6e05e", "contractor_payments": [{"payment_method": "Direct Deposit", "wage": 5000, "hours": 40, "bonus": 500, "reimbursement": 20}]}
      responses:
        "200":
          application/json: {"uuid": "nil", "company_uuid": "c54046f7-1be4-4c54-8194-f4842c30c86d", "check_date": "2024-05-07T00:00:00Z", "debit_date": "2024-05-01T00:00:00Z", "status": "Unfunded", "creation_token": "nil", "totals": {"amount": "2295.0", "debit_amount": "2295.0", "wage_amount": "2220.0", "reimbursement_amount": "75.0"}, "contractor_payments": [{"uuid": "nil", "contractor_uuid": "2e6d0970-31bf-47ce-bdb4-713e4207ecf4", "bonus": "0.0", "hours": "40.0", "payment_method": "Direct Deposit", "reimbursement": "75.0", "status": "Unfunded", "hourly_rate": "18.0", "may_cancel": false, "wage": "0.0", "wage_type": "Hourly", "wage_total": "720.0"}, {"uuid": "nil", "contractor_uuid": "a975fda0-fcf5-469a-a5fd-06e43d1cd99d", "bonus": "0.0", "hours": "0.0", "payment_method": "Check", "reimbursement": "0.0", "status": "Unfunded", "hourly_rate": "0.0", "may_cancel": false, "wage": "1500.0", "wage_type": "Fixed", "wage_total": "1500.0"}]}
    Basic:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"check_date": "2020-01-01", "creation_token": "1d532d13-8f61-4a57-ad3c-b5fac1c6e05e", "contractor_payments": []}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"check_date": "2020-01-01", "creation_token": "1d532d13-8f61-4a57-ad3c-b5fac1c6e05e", "contractor_payments": [{"payment_method": "Direct Deposit", "wage": 5000, "hours": 40, "bonus": 500, "reimbursement": 20}, {"payment_method": "Direct Deposit", "wage": 5000, "hours": 40, "bonus": 500, "reimbursement": 20}]}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"check_date": "2020-01-01", "creation_token": "1d532d13-8f61-4a57-ad3c-b5fac1c6e05e", "contractor_payments": [{"payment_method": "Direct Deposit", "wage": 5000, "hours": 40, "bonus": 500, "reimbursement": 20}, {"payment_method": "Direct Deposit", "wage": 5000, "hours": 40, "bonus": 500, "reimbursement": 20}]}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-contractor_payment_groups-contractor_payment_group_id:
    Example:
      parameters:
        path:
          contractor_payment_group_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "f693e034-d833-46e3-88d4-2c820c383c57", "company_uuid": "c54046f7-1be4-4c54-8194-f4842c30c86d", "check_date": "2024-05-07T00:00:00Z", "debit_date": "2024-05-01T00:00:00Z", "status": "Unfunded", "creation_token": "45ef81bb-ae24-4ad1-b2c6-6e563a4c30ed", "totals": {"amount": "2295.0", "debit_amount": "2295.0", "wage_amount": "2220.0", "reimbursement_amount": "75.0"}, "contractor_payments": [{"uuid": "630dc982-f498-4ebc-a6dc-4d76711027ce", "contractor_uuid": "2e6d0970-31bf-47ce-bdb4-713e4207ecf4", "bonus": "0.0", "hours": "40.0", "payment_method": "Direct Deposit", "reimbursement": "75.0", "status": "Unfunded", "hourly_rate": "18.0", "may_cancel": false, "wage": "0.0", "wage_type": "Hourly", "wage_total": "720.0"}, {"uuid": "12f51eba-d653-4357-8c05-1f1f8d0fd5e3", "contractor_uuid": "a975fda0-fcf5-469a-a5fd-06e43d1cd99d", "bonus": "0.0", "hours": "0.0", "payment_method": "Check", "reimbursement": "0.0", "status": "Unfunded", "hourly_rate": "0.0", "may_cancel": false, "wage": "1500.0", "wage_type": "Fixed", "wage_total": "1500.0"}]}
  delete-v1-contractor_payment_groups-contractor_payment_group_id:
    Basic:
      parameters:
        path:
          contractor_payment_group_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          contractor_payment_group_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          contractor_payment_group_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  put-v1-contractor_payment_groups-contractor_payment_group_id-fund:
    Example:
      parameters:
        path:
          contractor_payment_group_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "f693e034-d833-46e3-88d4-2c820c383c57", "company_uuid": "c54046f7-1be4-4c54-8194-f4842c30c86d", "check_date": "2024-05-07T00:00:00Z", "debit_date": "2024-05-01T00:00:00Z", "status": "Unfunded", "creation_token": "45ef81bb-ae24-4ad1-b2c6-6e563a4c30ed", "totals": {"amount": "2295.0", "debit_amount": "2295.0", "wage_amount": "2220.0", "reimbursement_amount": "75.0"}, "contractor_payments": [{"uuid": "630dc982-f498-4ebc-a6dc-4d76711027ce", "contractor_uuid": "2e6d0970-31bf-47ce-bdb4-713e4207ecf4", "bonus": "0.0", "hours": "40.0", "payment_method": "Direct Deposit", "reimbursement": "75.0", "status": "Unfunded", "hourly_rate": "18.0", "may_cancel": false, "wage": "0.0", "wage_type": "Hourly", "wage_total": "720.0"}, {"uuid": "12f51eba-d653-4357-8c05-1f1f8d0fd5e3", "contractor_uuid": "a975fda0-fcf5-469a-a5fd-06e43d1cd99d", "bonus": "0.0", "hours": "0.0", "payment_method": "Check", "reimbursement": "0.0", "status": "Unfunded", "hourly_rate": "0.0", "may_cancel": false, "wage": "1500.0", "wage_type": "Fixed", "wage_total": "1500.0"}]}
    Basic:
      parameters:
        path:
          contractor_payment_group_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          contractor_payment_group_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          contractor_payment_group_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-company-form:
    Example:
      parameters:
        path:
          form_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "48cdd5ec-a4dd-4840-a424-ad79f38d8408", "name": "company_direct_deposit", "title": "Direct Deposit Authorization", "description": "We need you to sign paperwork to authorize us to debit and credit your bank account and file and pay your taxes.", "draft": false, "year": null, "quarter": null, "requires_signing": true, "document_content_type": "application/pdf"}
  get-v1-company-form-pdf:
    Example:
      parameters:
        path:
          form_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "48cdd5ec-a4dd-4840-a424-ad79f38d8408", "document_url": "https://app.gusto-demo.com/assets/forms/7757842065202782/original/company_direct_deposit20211007-48226-gsqo8k.pdf?1633667020", "document_content_type": "application/pdf"}
  put-v1-company-form-sign:
    Example:
      parameters:
        path:
          form_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"signature_text": "Jane Smith", "agree": true, "signed_by_ip_address": "192.168.0.1"}
      responses:
        "200":
          application/json: {"uuid": "48cdd5ec-a4dd-4840-a424-ad79f38d8408", "name": "company_direct_deposit", "title": "Direct Deposit Authorization", "description": "We need you to sign paperwork to authorize us to debit and credit your bank account and file and pay your taxes.", "draft": false, "year": null, "quarter": null, "requires_signing": true, "document_content_type": "application/pdf"}
    Basic:
      parameters:
        path:
          form_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"signature_text": "<value>", "agree": false, "signed_by_ip_address": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          form_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"signature_text": "<value>", "agree": true, "signed_by_ip_address": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          form_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"signature_text": "<value>", "agree": true, "signed_by_ip_address": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-generated_documents-document_type-request_uuid:
    Example:
      parameters:
        path:
          document_type: "printable_payroll_checks"
          request_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"request_uuid": "p83d0ca8-7d41-42a9-834y-7d218ef6cb20", "status": "succeeded", "document_urls": ["https://document.url.com"]}
  post-companies-company_uuid-reports:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"columns": ["net_pay"], "groupings": ["payroll"], "file_type": "csv", "with_totals": false, "start_date": "2024-01-01", "end_date": "2024-04-01", "dismissed_start_date": "2024-01-01", "dismissed_end_date": "2024-04-01"}
      responses:
        "200":
          application/json: {"request_uuid": "p83d0ca8-7d41-42a9-834y-7d218ef6cb20", "company_uuid": "z83d0ca8-7d41-42a9-834y-7d218ef6cb20", "custom_name": "CustomReport", "file_type": "csv"}
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"columns": ["total_time_off_hours", "bank_account_account_number", "employee_additional_taxes"], "groupings": [], "file_type": "json", "with_totals": false, "start_date": "2024-01-01", "end_date": "2024-04-01", "dismissed_start_date": "2024-01-01", "dismissed_end_date": "2024-04-01"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"columns": ["home_address_street", "pay_period_start", "total_time_off_hours"], "groupings": ["employee"], "file_type": "csv", "with_totals": false, "start_date": "2024-01-01", "end_date": "2024-04-01", "dismissed_start_date": "2024-01-01", "dismissed_end_date": "2024-04-01"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"columns": [], "groupings": [], "file_type": "csv", "with_totals": false, "start_date": "2024-01-01", "end_date": "2024-04-01", "dismissed_start_date": "2024-01-01", "dismissed_end_date": "2024-04-01"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-reports-report_uuid:
    Example:
      parameters:
        path:
          report_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"request_uuid": "p83d0ca8-7d41-42a9-834y-7d218ef6cb20", "status": "succeeded", "report_urls": ["https://report.url.com"]}
  get-companies-company_uuid-report-templates-report_type:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
          report_type: "<value>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"columns": ["regular_rate", "regular_hours", "regular_earnings"], "groupings": ["payroll", "employee"], "company_uuid": "p83d0ca8-7d41-42a9-834y-7d218ef6cb20", "report_type": "payroll_journal"}
  post-v1-companies-company_id-company_benefits:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"active": true, "description": "yuck vice between gee ugh ha"}
      responses:
        "201":
          application/json: {"version": "98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872", "company_uuid": "881ce3f2-e3e1-49c9-8ad4-0bcf515f5618", "uuid": "d2cec746-caee-464a-bcaf-00d93f7049c9", "benefit_type": 1, "active": true, "description": "Kaiser Permanente", "deletable": true, "supports_percentage_amounts": true, "responsible_for_employer_taxes": false, "responsible_for_employee_w2": false}
    Basic:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"active": true, "description": "bulky electronics through for ick superb nudge embalm simple ouch"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"active": true, "description": "yahoo until planula conceal pfft partially till distant zowie nasalise"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"active": true, "description": "down ha who political inside bony procurement funny entwine institute"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-company_benefits-company_benefit_id:
    Example:
      parameters:
        path:
          company_benefit_id: "<id>"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"version": "98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872", "uuid": "d2cec746-caee-464a-bcaf-00d93f7049c9", "active": true, "description": "Kaiser Permanente", "deletable": true, "supports_percentage_amounts": true, "responsible_for_employer_taxes": false, "responsible_for_employee_w2": false, "employee_benefits": [{"employee_uuid": "ae44a0b2-3c89-41e1-91c8-5f8224a779ca", "company_benefit_uuid": "d2cec746-caee-464a-bcaf-00d93f7049c9", "active": true, "deduct_as_percentage": false, "employee_deduction": "3", "company_contribution": "0", "uuid": "9988f241-9aee-4383-bfca-eac79cf58135", "contribution": {"type": "amount", "value": {}}}]}
  put-v1-company_benefits-company_benefit_id:
    Example:
      parameters:
        path:
          company_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872", "active": false}
      responses:
        "200":
          application/json: {"version": "98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872", "company_uuid": "881ce3f2-e3e1-49c9-8ad4-0bcf515f5618", "uuid": "d2cec746-caee-464a-bcaf-00d93f7049c9", "benefit_type": 1, "active": true, "description": "Kaiser Permanente", "deletable": true, "supports_percentage_amounts": true, "responsible_for_employer_taxes": false, "responsible_for_employee_w2": false}
    Basic:
      parameters:
        path:
          company_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          company_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  delete-v1-company_benefits-company_benefit_id:
    Example:
      parameters:
        path:
          company_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": {"base": [{"type": "error type", "message": "This is an error message", "full_message": "This is a more descriptive error message"}]}}
  get-v1-benefits:
    Supported Benefits:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"benefit_type": 1, "name": "Medical Insurance", "description": "Deductions and contributions for Medical Insurance", "pretax": true, "posttax": false, "imputed": false, "healthcare": true, "retirement": false, "yearly_limit": false, "category": "Health"}, {"benefit_type": 2, "name": "Dental Insurance", "description": "Deductions and contributions for Dental Insurance", "pretax": true, "posttax": false, "imputed": false, "healthcare": true, "retirement": false, "yearly_limit": false, "category": "Health"}, {"benefit_type": 3, "name": "Vision Insurance", "description": "Deductions and contributions for Vision Insurance", "pretax": true, "posttax": false, "imputed": false, "healthcare": true, "retirement": false, "yearly_limit": false, "category": "Health"}, {"benefit_type": 6, "name": "Health Savings Account", "description": "Health Savings Accounts (HSA) allow employees to be reimbursed for qualified medical expenses. Contributions are pre-tax and lower the total amount of tax paid by employees and the employer. Employers may also make tax-free contributions to employees' HSA. Remaining balances are carried over in next year.", "pretax": true, "posttax": false, "imputed": false, "healthcare": false, "retirement": false, "yearly_limit": true, "category": "Health"}, {"benefit_type": 7, "name": "Health FSA", "description": "Flexible Spending Accounts (FSA) allow employees to be reimbursed for qualified medical expenses. Contributions are pre-tax and lower the total amount of tax paid by employees and the employer. Employers may also make tax-free contributions to employees' FSA. Remaining balances are not carried over in next year.", "pretax": true, "posttax": false, "imputed": false, "healthcare": false, "retirement": false, "yearly_limit": true, "category": "Health"}, {"benefit_type": 11, "name": "Dependent Care FSA", "description": "Dependent Care FSA reimburses employees for expenses to care for dependents while the employee is at work (e.g. Daycares). Contributions are pre-tax and lower the total amount of tax paid by employees and the employer. Employers may also make tax-free contributions to employee FSA. Remaining balances are not carried over to the next year. Single parents or Married couples filing a joint return can elect up to $5000 per year. Married couples filing separate returns are limited to $2500 elections each.", "pretax": true, "posttax": false, "imputed": false, "healthcare": false, "retirement": false, "yearly_limit": true, "category": "Health"}, {"benefit_type": 8, "name": "SIMPLE IRA", "description": "The SIMPLE IRA is a tax-deferred retirement savings plan for employees. It is often used by small businesses as an alternative to 401(k) due to its relatively low operating cost. Employers are required to contribute a specific percentage to an employee's SIMPLE IRA.", "pretax": true, "posttax": false, "imputed": false, "healthcare": false, "retirement": true, "yearly_limit": true, "category": "Savings and Retirement"}, {"benefit_type": 105, "name": "Roth 401(k)", "description": "Roth 401(k) is an after-tax savings plan for employees. The standard maximum is $18,000, or $24,000 for employees over 50 years old.", "pretax": false, "posttax": true, "imputed": false, "healthcare": false, "retirement": true, "yearly_limit": true, "category": "Savings and Retirement"}, {"benefit_type": 110, "name": "Roth 403(b)", "description": "Roth 403(b) is an after-tax savings plan for certain clerics, employees of public schools, and employees of other types of tax-exempt organizations. Contributions made by employees are taxable for federal and state withholding. Often, employers contribute additional pre-tax dollars to the employee’s Roth account to encourage saving for retirement.", "pretax": false, "posttax": true, "imputed": false, "healthcare": false, "retirement": true, "yearly_limit": true, "category": "Savings and Retirement"}, {"benefit_type": 5, "name": "401(k)", "description": "401(k) is tax-deferred retirement savings plan for employees. The standard maximum is $18,000, or $24,000 for employees over 50 years old.", "pretax": true, "posttax": false, "imputed": false, "healthcare": false, "retirement": true, "yearly_limit": true, "category": "Savings and Retirement"}, {"benefit_type": 9, "name": "403(b)", "description": "403(b) is tax-deferred retirement savings plan for certain clerics, employees of public schools, and employees of other types of tax-exempt organizations.", "pretax": true, "posttax": false, "imputed": false, "healthcare": false, "retirement": true, "yearly_limit": true, "category": "Savings and Retirement"}, {"benefit_type": 108, "name": "SEP-IRA", "description": "A SEP-IRA is a pre-tax retirement savings plan where only the employer contributes. It is often used by small businesses as an alternative to 401(k) due to its relatively low operating cost. Employers are required to contribute the same percentage to all enrolled employees, with a maximum contribution of 25% of the employee’s compensation.", "pretax": true, "posttax": false, "imputed": false, "healthcare": false, "retirement": true, "yearly_limit": true, "category": "Savings and Retirement"}, {"benefit_type": 109, "name": "SARSEP", "description": "A SARSEP is a pre-tax retirement savings plan used by small businesses as an alternative to 401(k) due to its relatively low operating cost. While new SARSEP plans are not available, there are still some companies that are grandfathered into the plan. Employers are required to contribute the same percentage to all enrolled employees, with a maximum contribution of 25% of the employee’s compensation.", "pretax": true, "posttax": false, "imputed": false, "healthcare": false, "retirement": true, "yearly_limit": true, "category": "Savings and Retirement"}, {"benefit_type": 107, "name": "Group-Term Life Insurance", "description": "Group-Term Life Insurance for coverage in excess of $50,000 per employee is a taxable fringe benefit. See IRS Publication 15-B to determine the dollar value of the excess coverage.", "pretax": false, "posttax": true, "imputed": true, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Health"}, {"benefit_type": 10, "name": "Commuter Benefits (pre-tax)", "description": "Tax-free commuter benefits for transit, vanpooling, bicycling, and work-related parking costs. The annual maximum contribution for this pre-tax benefit is in the IRS publication 15-B.", "pretax": true, "posttax": false, "imputed": false, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Transportation"}, {"benefit_type": 106, "name": "Personal Use of Company Car", "description": "When an employee uses a company-owned car for personal matters, it is considered taxable benefit provided in-kind.", "pretax": false, "posttax": true, "imputed": true, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Transportation"}, {"benefit_type": 111, "name": "529 College Savings", "description": "529 College Savings is an after-tax savings plan for employees designed to encourage saving for future college costs. This benefit should be reported as a taxable benefit and will therefore be taxed.", "pretax": false, "posttax": true, "imputed": true, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Other"}, {"benefit_type": 112, "name": "Student Loan Repayment", "description": "Student Loan Repayment is an after-tax savings plan for employees to pay towards their outstanding student loans. An employee can choose to set aside after-tax dollars towards this benefit. These benefits should be reported as a taxable benefit and will therefore be taxed.", "pretax": false, "posttax": true, "imputed": true, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Other"}, {"benefit_type": 998, "name": "Short Term Disability (post-tax)", "description": "Third Party Disability or Third Party Leave are policies offered by employers that pay an employee for a specific life event (maternity leave, injury). All payments made to employees come from a third-party, such as an insurer. For more information on the taxation of these plans, please refer to publication 15-A for more details.", "pretax": false, "posttax": true, "imputed": false, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Health"}, {"benefit_type": 999, "name": "Long Term Disability (post-tax)", "description": "Third Party Disability or Third Party Leave are policies offered by employers that pay an employee for a specific life event (maternity leave, injury). All payments made to employees come from a third-party, such as an insurer. For more information on the taxation of these plans, please refer to publication 15-A for more details.", "pretax": false, "posttax": true, "imputed": false, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Health"}, {"benefit_type": 996, "name": "Short Term Disability (pre-tax)", "description": "Third Party Disability or Third Party Leave are policies offered by employers that pay an employee for a specific life event (maternity leave, injury). All payments made to employees come from a third-party, such as an insurer. For more information on the taxation of these plans, please refer to publication 15-A for more details.", "pretax": true, "posttax": false, "imputed": false, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Health"}, {"benefit_type": 997, "name": "Long Term Disability (pre-tax)", "description": "Third Party Disability or Third Party Leave are policies offered by employers that pay an employee for a specific life event (maternity leave, injury). All payments made to employees come from a third-party, such as an insurer. For more information on the taxation of these plans, please refer to publication 15-A for more details.", "pretax": true, "posttax": false, "imputed": false, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Health"}, {"benefit_type": 991, "name": "Voluntary Short Term Disability (post-tax)", "description": "Third Party Disability or Third Party Leave are policies offered by employers that pay an employee for a specific life event (maternity leave, injury). All payments made to employees come from a third-party, such as an insurer. For more information on the taxation of these plans, please refer to publication 15-A for more details.", "pretax": false, "posttax": true, "imputed": false, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Health"}, {"benefit_type": 992, "name": "Voluntary Long Term Disability (post-tax)", "description": "Third Party Disability or Third Party Leave are policies offered by employers that pay an employee for a specific life event (maternity leave, injury). All payments made to employees come from a third-party, such as an insurer. For more information on the taxation of these plans, please refer to publication 15-A for more details.", "pretax": false, "posttax": true, "imputed": false, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Health"}, {"benefit_type": 993, "name": "Voluntary Life (post-tax)", "description": "Third Party Disability or Third Party Leave are policies offered by employers that pay an employee for a specific life event (maternity leave, injury). All payments made to employees come from a third-party, such as an insurer. For more information on the taxation of these plans, please refer to publication 15-A for more details.", "pretax": false, "posttax": true, "imputed": false, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Health"}, {"benefit_type": 113, "name": "Commuter Parking", "description": "Tax-free commuter benefits allow employees to reduce their monthly commuting expenses for transit, carpooling, bicycling, and work-related parking costs. Please note that there is an annual maximum for this pre-tax benefit. The maximum dollar amount is found in IRS Publication 15-B.", "pretax": true, "posttax": false, "imputed": false, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Transportation"}, {"benefit_type": 114, "name": "Commuter Transit", "description": "Tax-free commuter benefits allow employees to reduce their monthly commuting expenses for transit, carpooling, bicycling, and work-related parking costs. Please note that there is an annual maximum for this pre-tax benefit. The maximum dollar amount is found in IRS Publication 15-B.", "pretax": true, "posttax": false, "imputed": false, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Transportation"}, {"benefit_type": 100, "name": "Other (taxable)", "description": "Other taxable benefit", "pretax": false, "posttax": true, "imputed": true, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Other"}, {"benefit_type": 201, "name": "Cell Phone (taxable)", "description": "Employer-sponsored benefits like this are called fringe benefits, and they don’t get special tax treatment—they’ll be reported as taxable wages on your employees’ paystubs.", "pretax": false, "posttax": true, "imputed": true, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Transportation"}, {"benefit_type": 202, "name": "Gym & Fitness (taxable)", "description": "Employer-sponsored benefits like this are called fringe benefits, and they don’t get special tax treatment—they’ll be reported as taxable wages on your employees’ paystubs.", "pretax": false, "posttax": true, "imputed": true, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Transportation"}, {"benefit_type": 203, "name": "Housing (taxable)", "description": "Employer-sponsored benefits like this are called fringe benefits, and they don’t get special tax treatment—they’ll be reported as taxable wages on your employees’ paystubs.", "pretax": false, "posttax": true, "imputed": true, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Transportation"}, {"benefit_type": 204, "name": "Wellness (taxable)", "description": "Employer-sponsored benefits like this are called fringe benefits, and they don’t get special tax treatment—they’ll be reported as taxable wages on your employees’ paystubs.", "pretax": false, "posttax": true, "imputed": true, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Transportation"}]
  get-v1-benefits-benefit_id:
    Example:
      parameters:
        path:
          benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"benefit_type": 1, "name": "Medical Insurance", "description": "Deductions and contributions for Medical Insurance", "pretax": true, "posttax": false, "imputed": false, "healthcare": true, "retirement": false, "yearly_limit": false}
  get-v1-benefits-company_benefit_id-summary:
    Example:
      parameters:
        path:
          company_benefit_id: "<id>"
        query:
          start_date: "2022-01-01"
          end_date: "2022-12-31"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"start_date": "2022-01-01", "end_date": "2022-12-31", "description": "Simple IRA", "company_benefit_deduction": "60.0", "company_benefit_contribution": "30.0"}
  get-v1-company_benefits-company_benefit_id-employee_benefits:
    Example:
      parameters:
        path:
          company_benefit_id: "<id>"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"version": "09j3d29jqdpj92109j9j2d90dq", "active": true, "employee_deduction": "100.00", "deduct_as_percentage": false, "employee_deduction_annual_maximum": "200.00", "elective": false, "company_contribution_annual_maximum": "200.00", "limit_option": null, "catch_up": false, "coverage_amount": null, "deduction_reduces_taxable_income": null, "coverage_salary_multiplier": "0.00", "company_contribution": "100.00", "contribute_as_percentage": false, "employee_uuid": "8f9f3f68-8fd3-499d-ade7-4a052e56494e", "company_benefit_uuid": "54e37c27-43e6-4ae5-a5b2-e29895a133be", "uuid": "e91ca856-a915-4339-9b18-29f9cd66b031"}]
  put-v1-company_benefits-company_benefit_id-employee_benefits:
    Example:
      parameters:
        path:
          company_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"employee_benefits": [{"version": "09j3d29jqdpj92109j9j2d90dq", "active": true, "employee_deduction": "250.00", "deduct_as_percentage": false, "elective": false, "catch_up": false, "deduction_reduces_taxable_income": "unset", "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false, "employee_uuid": "8f9f3f68-8fd3-499d-ade7-4a052e56494e"}]}
      responses:
        "200":
          application/json: [{"version": "09j3d29jqdpj92109j9j2d90dq", "active": true, "employee_deduction": "100.00", "deduct_as_percentage": false, "employee_deduction_annual_maximum": "200.00", "elective": false, "company_contribution_annual_maximum": "200.00", "limit_option": null, "catch_up": false, "coverage_amount": null, "deduction_reduces_taxable_income": null, "coverage_salary_multiplier": "0.00", "company_contribution": "100.00", "contribute_as_percentage": false, "employee_uuid": "8f9f3f68-8fd3-499d-ade7-4a052e56494e", "company_benefit_uuid": "54e37c27-43e6-4ae5-a5b2-e29895a133be", "uuid": "e91ca856-a915-4339-9b18-29f9cd66b031"}]
    Basic:
      parameters:
        path:
          company_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"employee_benefits": []}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          company_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"employee_benefits": [{"active": true, "employee_deduction": "0.00", "deduct_as_percentage": false, "elective": false, "catch_up": false, "deduction_reduces_taxable_income": "unset", "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false, "employee_uuid": "<id>"}, {"active": true, "employee_deduction": "0.00", "deduct_as_percentage": false, "elective": false, "catch_up": false, "deduction_reduces_taxable_income": "unset", "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false, "employee_uuid": "<id>"}, {"active": true, "employee_deduction": "0.00", "deduct_as_percentage": false, "elective": false, "catch_up": false, "deduction_reduces_taxable_income": "unset", "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false, "employee_uuid": "<id>"}]}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"employee_benefits": []}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-benefits-benefits_id-requirements:
    Example:
      parameters:
        path:
          benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"employee_deduction": {"required": true, "editable": true, "choices": ["<value>"]}, "contribution": {"required": true, "editable": true, "default_value": {"value": "2", "type": "percentage"}, "choices": ["percentage"]}, "deduct_as_percentage": {"required": true, "editable": true, "choices": ["<value>", "<value>", "<value>"]}, "catch_up": {"required": true, "editable": true, "choices": ["<value>"]}, "limit_option": {"required": false, "editable": false, "choices": ["<value>"]}, "company_contribution_annual_maximum": {"required": false, "editable": false, "choices": ["<value>", "<value>"]}, "coverage_salary_multiplier": {"required": false, "editable": false, "choices": ["<value>", "<value>"]}, "coverage_amount": {"required": false, "editable": false, "choices": ["<value>", "<value>", "<value>"]}}
  post-v1-employees-employee_id-employee_benefits:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"company_benefit_uuid": "f68abb42-431e-4392-bc3f-2795627e00f3", "active": true, "employee_deduction": "100.00", "deduct_as_percentage": false, "contribution": {"type": "amount", "value": "100.00"}, "elective": false, "catch_up": false, "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false}
      responses:
        "201":
          application/json: {"version": "09j3d29jqdpj92109j9j2d90dq", "active": true, "employee_deduction": "100.00", "deduct_as_percentage": false, "employee_deduction_annual_maximum": "200.00", "contribution": {"type": "amount", "value": "100.00"}, "elective": false, "company_contribution_annual_maximum": "200.00", "limit_option": null, "catch_up": false, "coverage_amount": null, "deduction_reduces_taxable_income": null, "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false, "employee_uuid": "908123091820398", "company_benefit_uuid": "54e37c27-43e6-4ae5-a5b2-e29895a133be", "uuid": "e91ca856-a915-4339-9b18-29f9cd66b031"}
    Tiered example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"company_benefit_uuid": "<id>", "active": true, "employee_deduction": "0.00", "deduct_as_percentage": false, "elective": false, "catch_up": false, "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false}
      responses:
        "201":
          application/json: {"version": "string", "active": true, "employee_deduction": "0.00", "deduct_as_percentage": false, "employee_deduction_annual_maximum": "string", "contribution": {"type": "tiered", "value": {"tiers": [{"rate": "5.0", "threshold": "2.0", "threshold_delta": "2.0"}, {"rate": "3.0", "threshold": "5.0", "threshold_delta": "3.0"}]}}, "elective": false, "company_contribution_annual_maximum": "string", "limit_option": "string", "catch_up": false, "coverage_amount": "string", "deduction_reduces_taxable_income": "unset", "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false, "employee_uuid": "8f9f3f68-8fd3-499d-ade7-4a052e56494e", "company_benefit_uuid": "54e37c27-43e6-4ae5-a5b2-e29895a133be", "uuid": "e91ca856-a915-4339-9b18-29f9cd66b031"}
    Basic:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"company_benefit_uuid": "<id>", "active": true, "employee_deduction": "0.00", "deduct_as_percentage": false, "elective": false, "catch_up": false, "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"company_benefit_uuid": "<id>", "active": true, "employee_deduction": "0.00", "deduct_as_percentage": false, "elective": false, "catch_up": false, "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"company_benefit_uuid": "<id>", "active": true, "employee_deduction": "0.00", "deduct_as_percentage": false, "elective": false, "catch_up": false, "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-employees-employee_id-employee_benefits:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"version": "09j3d29jqdpj92109j9j2d90dq", "active": true, "employee_deduction": "100.00", "deduct_as_percentage": false, "employee_deduction_annual_maximum": "200.00", "elective": false, "company_contribution_annual_maximum": "200.00", "limit_option": null, "catch_up": false, "coverage_amount": null, "deduction_reduces_taxable_income": null, "coverage_salary_multiplier": "0.00", "company_contribution": "100.00", "contribute_as_percentage": false, "employee_uuid": "8f9f3f68-8fd3-499d-ade7-4a052e56494e", "company_benefit_uuid": "54e37c27-43e6-4ae5-a5b2-e29895a133be", "uuid": "e91ca856-a915-4339-9b18-29f9cd66b031"}]
  get-v1-employee_benefits-employee_benefit_id:
    Example:
      parameters:
        path:
          employee_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"version": "09j3d29jqdpj92109j9j2d90dq", "active": true, "employee_deduction": "100.00", "deduct_as_percentage": false, "employee_deduction_annual_maximum": "200.00", "contribution": {"type": "amount", "value": "100.00"}, "elective": false, "company_contribution_annual_maximum": "200.00", "limit_option": null, "catch_up": false, "coverage_amount": null, "deduction_reduces_taxable_income": null, "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false, "employee_uuid": "908123091820398", "company_benefit_uuid": "54e37c27-43e6-4ae5-a5b2-e29895a133be", "uuid": "e91ca856-a915-4339-9b18-29f9cd66b031"}
    Tiered example:
      parameters:
        path:
          employee_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"version": "string", "active": true, "employee_deduction": "0.00", "deduct_as_percentage": false, "employee_deduction_annual_maximum": "string", "contribution": {"type": "tiered", "value": {"tiers": [{"rate": "5.0", "threshold": "2.0", "threshold_delta": "2.0"}, {"rate": "3.0", "threshold": "5.0", "threshold_delta": "3.0"}]}}, "elective": false, "company_contribution_annual_maximum": "string", "limit_option": "string", "catch_up": false, "coverage_amount": "string", "deduction_reduces_taxable_income": "unset", "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false, "employee_uuid": "8f9f3f68-8fd3-499d-ade7-4a052e56494e", "company_benefit_uuid": "54e37c27-43e6-4ae5-a5b2-e29895a133be", "uuid": "e91ca856-a915-4339-9b18-29f9cd66b031"}
  put-v1-employee_benefits-employee_benefit_id:
    Example:
      parameters:
        path:
          employee_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "09j3d29jqdpj92109j9j2d90dq", "employee_deduction": "250.00", "elective": false, "catch_up": false, "deduction_reduces_taxable_income": "unset", "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false}
      responses:
        "200":
          application/json: {"version": "09j3d29jqdpj92109j9j2d90dq", "active": true, "employee_deduction": "100.00", "deduct_as_percentage": false, "employee_deduction_annual_maximum": "200.00", "contribution": {"type": "amount", "value": "100.00"}, "elective": false, "company_contribution_annual_maximum": "200.00", "limit_option": null, "catch_up": false, "coverage_amount": null, "deduction_reduces_taxable_income": null, "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false, "employee_uuid": "908123091820398", "company_benefit_uuid": "54e37c27-43e6-4ae5-a5b2-e29895a133be", "uuid": "e91ca856-a915-4339-9b18-29f9cd66b031"}
    Tiered example:
      parameters:
        path:
          employee_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "employee_deduction": "0.00", "elective": false, "catch_up": false, "deduction_reduces_taxable_income": "unset", "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false}
      responses:
        "200":
          application/json: {"version": "string", "active": true, "employee_deduction": "0.00", "deduct_as_percentage": false, "employee_deduction_annual_maximum": "string", "contribution": {"type": "tiered", "value": {"tiers": [{"rate": "5.0", "threshold": "2.0", "threshold_delta": "2.0"}, {"rate": "3.0", "threshold": "5.0", "threshold_delta": "3.0"}]}}, "elective": false, "company_contribution_annual_maximum": "string", "limit_option": "string", "catch_up": false, "coverage_amount": "string", "deduction_reduces_taxable_income": "unset", "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false, "employee_uuid": "8f9f3f68-8fd3-499d-ade7-4a052e56494e", "company_benefit_uuid": "54e37c27-43e6-4ae5-a5b2-e29895a133be", "uuid": "e91ca856-a915-4339-9b18-29f9cd66b031"}
    Basic:
      parameters:
        path:
          employee_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "employee_deduction": "0.00", "elective": false, "catch_up": false, "deduction_reduces_taxable_income": "unset", "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          employee_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "employee_deduction": "0.00", "elective": false, "catch_up": false, "deduction_reduces_taxable_income": "unset", "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "employee_deduction": "0.00", "elective": false, "catch_up": false, "deduction_reduces_taxable_income": "unset", "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  delete-v1-employee_benefits-employee_benefit_id:
    speakeasy-default-delete-v1-employee-benefits-employee-benefit-id:
      parameters:
        path:
          employee_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
  post-employee-ytd-benefit-amounts-from-different-company:
    Basic:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"tax_year": 2422.08, "ytd_employee_deduction_amount": "0.00", "ytd_company_contribution_amount": "0.00"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"tax_year": 3246.52, "ytd_employee_deduction_amount": "0.00", "ytd_company_contribution_amount": "0.00"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"tax_year": 9918.67, "ytd_employee_deduction_amount": "0.00", "ytd_company_contribution_amount": "0.00"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-employee-ytd-benefit-amounts-from-different-company:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        query:
          tax_year: 2024
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "c5fdae57-5483-4529-9aae-f0edceed92d3", "benefit_type": 1, "ytd_employee_deduction_amount": "5000.00", "ytd_company_contribution_amount": "2500.00"}, {"uuid": "1bfdb946-b2be-4909-ac46-9e7f73872d0a", "benefit_type": 5, "ytd_employee_deduction_amount": "2132.00", "ytd_company_contribution_amount": "3345.00"}]
  post-v1-employees-employee_id-garnishments:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"active": true, "amount": "150.00", "description": "Back taxes", "court_ordered": true, "times": null, "recurring": true, "annual_maximum": null, "pay_period_maximum": null, "deduct_as_percentage": false}
      responses:
        "201":
          application/json: {"uuid": "7a621cf0-21cd-49cf-8540-3315211a509a", "active": true, "times": null, "recurring": false, "annual_maximum": null, "pay_period_maximum": null, "deduct_as_percentage": false}
    Child-Support-Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"active": true, "amount": "40", "court_ordered": true, "garnishment_type": "child_support", "times": null, "recurring": true, "annual_maximum": null, "pay_period_maximum": "500.00", "deduct_as_percentage": true, "child_support": {"state": "FL", "payment_period": "Monthly", "case_number": "CS1234"}}
      responses:
        "201":
          application/json: {"uuid": "080a8e77-4c2b-4ecc-9376-91775e024985", "active": true, "times": null, "recurring": false, "annual_maximum": null, "pay_period_maximum": null, "deduct_as_percentage": false}
    Basic:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"active": true, "amount": "<value>", "court_ordered": true, "times": null, "recurring": false, "annual_maximum": null, "pay_period_maximum": null, "deduct_as_percentage": false}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"active": true, "amount": "<value>", "court_ordered": true, "times": null, "recurring": false, "annual_maximum": null, "pay_period_maximum": null, "deduct_as_percentage": false}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"active": true, "amount": "<value>", "court_ordered": false, "times": null, "recurring": false, "annual_maximum": null, "pay_period_maximum": null, "deduct_as_percentage": false}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-employees-employee_id-garnishments:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "c8a232aa-0b11-4b8a-b005-71e9e705d0e6", "active": true, "times": null, "recurring": false, "annual_maximum": null, "pay_period_maximum": null, "deduct_as_percentage": false}, {"uuid": "21e27667-18d6-4d46-812e-0aee1b9ddf12", "active": true, "times": null, "recurring": false, "annual_maximum": null, "pay_period_maximum": null, "deduct_as_percentage": false}]
  get-v1-garnishments-garnishment_id:
    Example:
      parameters:
        path:
          garnishment_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "de68de7c-9761-4d84-8e7a-884b2b32915b", "active": true, "times": null, "recurring": false, "annual_maximum": null, "pay_period_maximum": null, "deduct_as_percentage": false}
    Child-Support-Example:
      parameters:
        path:
          garnishment_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "ecc7a1c1-6877-40b7-8b24-606c316ca52a", "active": true, "times": null, "recurring": false, "annual_maximum": null, "pay_period_maximum": null, "deduct_as_percentage": false}
  put-v1-garnishments-garnishment_id:
    Example:
      parameters:
        path:
          garnishment_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"active": false, "times": null, "recurring": false, "annual_maximum": null, "pay_period_maximum": null, "deduct_as_percentage": false, "version": "52b7c567242cb7452e89ba2bc02cb476"}
      responses:
        "200":
          application/json: {"uuid": "d95fa7f0-e743-42ce-b47c-b60cc78135dd", "active": true, "times": null, "recurring": false, "annual_maximum": null, "pay_period_maximum": null, "deduct_as_percentage": false}
    Child-Support-Example:
      parameters:
        path:
          garnishment_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"active": true, "times": null, "recurring": false, "annual_maximum": null, "pay_period_maximum": null, "deduct_as_percentage": false, "version": "<value>"}
      responses:
        "200":
          application/json: {"uuid": "b85898c1-25a1-4907-a1c5-562af6646dad", "active": true, "times": null, "recurring": false, "annual_maximum": null, "pay_period_maximum": null, "deduct_as_percentage": false}
    Basic:
      parameters:
        path:
          garnishment_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"active": true, "times": null, "recurring": false, "annual_maximum": null, "pay_period_maximum": null, "deduct_as_percentage": false, "version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          garnishment_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"active": true, "times": null, "recurring": false, "annual_maximum": null, "pay_period_maximum": null, "deduct_as_percentage": false, "version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          garnishment_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"active": true, "times": null, "recurring": false, "annual_maximum": null, "pay_period_maximum": null, "deduct_as_percentage": false, "version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-garnishments-child_support:
    Example:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
  get-v1-employees-employee_id-i9_authorization:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "7fe28e4d-1e30-4ebb-8d22-aae768170b82", "version": "<value>", "authorization_status": "permanent_resident", "employer_signed": false, "employee_signed": false}
  put-v1-employees-employee_id-i9_authorization:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"authorization_status": "citizen", "version": "52b7c567242cb7452e89ba2bc02cb476"}
      responses:
        "200":
          application/json: {"uuid": "d95fa7f0-e743-42ce-b47c-b60cc78135dd", "version": "<value>", "authorization_status": "permanent_resident", "employer_signed": false, "employee_signed": true}
    Basic:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"authorization_status": "noncitizen"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"authorization_status": "alien"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"authorization_status": "citizen"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-employees-employee_id-i9_authorization-document_options:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"section": "A", "description": "Foreign passport", "document_type": "foreign_passport_w_i94", "document_title": ["Foreign passport"], "common_choice": true}, {"section": "B", "description": "Driver’s license or state-issued ID card", "document_type": "driver_license", "document_title": ["Driver's license", "State ID card"], "common_choice": true}, {"section": "C", "description": "Social Security card", "document_type": "ssn_card", "document_title": ["Social Security card"], "common_choice": true}]
  get-v1-employees-employee_id-i9_authorization-documents:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "7f2337f9-9b78-44b9-aeed-be4777b833a8", "document_type": "driver_license", "document_title": "Driver's license", "expiration_date": "2027-01-01", "issuing_authority": "USA"}, {"uuid": "9p2337f9-9b78-44b9-aeed-be4777b833a8", "document_type": "ssn_card", "document_title": "Social Security card", "issuing_authority": "USA"}]
  put-v1-employees-employee_id-i9_authorization-documents:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"documents": [{"document_type": "us_passport", "document_title": "US Passport", "document_number": "F12345678", "expiration_date": "2026-01-01", "issuing_authority": "USA"}]}
      responses:
        "200":
          application/json: [{"uuid": "7f2337f9-9b78-44b9-aeed-be4777b833a8", "document_type": "driver_license", "document_title": "Driver's license", "expiration_date": "2027-01-01", "issuing_authority": "USA"}, {"uuid": "9p2337f9-9b78-44b9-aeed-be4777b833a8", "document_type": "ssn_card", "document_title": "Social Security card", "issuing_authority": "USA"}]
    Basic:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"documents": [{"document_type": "<value>", "document_title": "<value>", "issuing_authority": "<value>"}]}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"documents": [{"document_type": "<value>", "document_title": "<value>", "issuing_authority": "<value>"}]}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"documents": [{"document_type": "<value>", "document_title": "<value>", "issuing_authority": "<value>"}, {"document_type": "<value>", "document_title": "<value>", "issuing_authority": "<value>"}, {"document_type": "<value>", "document_title": "<value>", "issuing_authority": "<value>"}]}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  delete-v1-employees-employee_id-i9_authorization-documents-document_id:
    speakeasy-default-delete-v1-employees-employee-id-i9-authorization-documents-document-id:
      parameters:
        path:
          employee_id: "<id>"
          document_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
  put-v1-employees-employee_id-i9_authorization-employer_sign:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"signature_text": "<value>", "signer_title": "<value>", "signed_by_ip_address": "<value>", "agree": false}
      responses:
        "200":
          application/json: {"uuid": "ab18cec1-6568-4d93-b2ad-8deafd3f650c", "version": "<value>", "authorization_status": "alien", "employer_signed": true, "employee_signed": true}
    Basic:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"signature_text": "<value>", "signer_title": "<value>", "signed_by_ip_address": "<value>", "agree": true}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"signature_text": "<value>", "signer_title": "<value>", "signed_by_ip_address": "<value>", "agree": true}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"signature_text": "<value>", "signer_title": "<value>", "signed_by_ip_address": "<value>", "agree": true}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-companies-company_uuid-tax_requirements-state:
    Example Tax Requirements for GA:
      parameters:
        path:
          company_uuid: "<id>"
          state: "Massachusetts"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"company_uuid": "6c14eac3-0da2-474d-bda1-786b3602d381", "state": "GA", "requirement_sets": [{"state": "GA", "key": "registrations", "label": "Registrations", "effective_from": null, "requirements": [{"key": "71653ec0-00b5-4c66-a58b-22ecf21704c5", "applicable_if": [], "label": "Withholding Number", "description": "If you have run payroll in the past in GA, find your withholding number on notices received from the Georgia Department of Revenue, or call the agency at (877) 423-6711. If you don’t have a number yet, you should <a target='_blank' data-bypass href='https://gtc.dor.ga.gov/_/#1'>register the business online</a>. The last two characters of your ID must be upper case letters.", "value": "1233214-AB", "metadata": {"type": "text"}}, {"key": "6c0911ab-5860-412e-bdef-6437cd881df5", "applicable_if": [], "label": "DOL Account Number", "description": "If you have run payroll in the past in GA, find your DOL account number on notices received from the Georgia Department of Labor, or call the agency at (404) 232-3300. If you don’t have an account number yet, please <a target='_blank' data-bypass href='https://support.gusto.com/hc/en-us/articles/210139038#registerdol'>follow the instructions here</a> to register your business with the Georgia Dept. of Labor.", "value": "474747-88", "metadata": {"type": "text"}}]}, {"state": "GA", "key": "taxrates", "label": "Tax Rates", "effective_from": "2022-01-01", "requirements": [{"key": "e0ac2284-8d30-4100-ae23-f85f9574868b", "applicable_if": [], "label": "Total Tax Rate", "description": "Haven't received your assigned rate yet? <a target='_blank' data-bypass href='https://support.gusto.com/article/106622236100000/State-unemployment-insurance-(SUI)-tax'>Find the new employer rate</a> and enter it here.", "value": "0.05", "metadata": {"type": "tax_rate", "validation": {"type": "min_max", "min": "0.0004", "max": "0.081"}}}]}, {"state": "GA", "key": "depositschedules", "label": "Deposit Schedules", "effective_from": "2022-01-01", "requirements": [{"key": "6ddfcbeb-94d3-4003-bfc2-8c6e1ca9f70c", "applicable_if": [], "label": "Deposit Schedule", "description": "Georgia rejects payments made on the wrong schedule. GA employers receive their schedule on a registration verification letter after registering with the Georgia Dept. of Revenue. If you are unsure, call the agency at (877) 423-6711. If you did not register your business yet, please <a target='_blank' data-bypass href='https://gtc.dor.ga.gov/_/#2'>register the business with the Georgia Dept. of Revenue</a>.", "value": "Semi-weekly", "metadata": {"type": "select", "options": [{"label": "Semiweekly", "value": "Semi-weekly"}, {"label": "Monthly", "value": "Monthly"}, {"label": "Quarterly", "value": "Quarterly"}]}}]}]}
  put-v1-companies-company_uuid-tax_requirements-state:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
          state: "Texas"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"requirement_sets": [{"key": "registrations", "effective_from": null, "state": "GA", "requirements": [{"key": "71653ec0-00b5-4c66-a58b-22ecf21704c5", "value": "1233214-AB"}, {"key": "6c0911ab-5860-412e-bdef-6437cd881df5", "value": "474747-22"}]}, {"key": "taxrates", "effective_from": "2022-01-01", "state": "GA", "requirements": [{"key": "e0ac2284-8d30-4100-ae23-f85f9574868b", "value": "0.05"}]}, {"key": "depositschedules", "effective_from": "2022-01-01", "state": "GA", "requirements": [{"key": "6ddfcbeb-94d3-4003-bfc2-8c6e1ca9f70c", "value": "Semi-weekly"}]}]}
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
          state: "New Jersey"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
          state: "Louisiana"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
          state: "Wyoming"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-v1-companies-company_uuid-tax_requirements:
    Company with requirements in CA and GA:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"state": "CA", "setup_complete": true}, {"state": "GA", "setup_complete": false}]
  get-companies-company_uuid-holiday_pay_policy:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"version": "1b37938b017c7fd7116bada007072290", "company_uuid": "b7845189-f12b-4378-918a-d2b9de3dc4ea", "federal_holidays": [{"new_years_day": {"selected": false, "name": "New Year's Day", "date": "January 1"}, "mlk_day": {"selected": true, "name": "Martin Luther King, Jr. Day", "date": "Third Monday in January"}, "presidents_day": {"selected": false, "name": "Presidents' Day", "date": "Third Monday in February"}, "memorial_day": {"selected": true, "name": "Memorial Day", "date": "Last Monday in May"}, "juneteenth": {"selected": false, "name": "Juneteenth", "date": "June 19"}, "independence_day": {"selected": true, "name": "Independence Day", "date": "July 4"}, "labor_day": {"selected": false, "name": "Labor Day", "date": "First Monday in September"}, "columbus_day": {"selected": false, "name": "Columbus Day (Indigenous Peoples' Day)", "date": "Second Monday in October"}, "veterans_day": {"selected": true, "name": "Veterans Day", "date": "November 11"}, "thanksgiving": {"selected": true, "name": "Thanksgiving", "date": "Fourth Thursday in November"}}], "employees": [{"uuid": "1ca3cd25-3eda-48c6-ac88-f0e7fb91a15a"}]}
  post-companies-company_uuid-holiday_pay_policy:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"federal_holidays": {"mlk_day": {"selected": true}, "memorial_day": {"selected": true}, "independence_day": {"selected": true}, "veterans_day": {"selected": true}, "thanksgiving": {"selected": true}, "christmas_day": {"selected": true}}}
      responses:
        "200":
          application/json: {"version": "1b37938b017c7fd7116bada007072290", "company_uuid": "b7845189-f12b-4378-918a-d2b9de3dc4ea", "federal_holidays": [{"new_years_day": {"selected": false, "name": "New Year's Day", "date": "January 1"}, "mlk_day": {"selected": true, "name": "Martin Luther King, Jr. Day", "date": "Third Monday in January"}, "presidents_day": {"selected": false, "name": "Presidents' Day", "date": "Third Monday in February"}, "memorial_day": {"selected": true, "name": "Memorial Day", "date": "Last Monday in May"}, "juneteenth": {"selected": false, "name": "Juneteenth", "date": "June 19"}, "independence_day": {"selected": true, "name": "Independence Day", "date": "July 4"}, "labor_day": {"selected": false, "name": "Labor Day", "date": "First Monday in September"}, "columbus_day": {"selected": false, "name": "Columbus Day (Indigenous Peoples' Day)", "date": "Second Monday in October"}, "veterans_day": {"selected": true, "name": "Veterans Day", "date": "November 11"}, "thanksgiving": {"selected": true, "name": "Thanksgiving", "date": "Fourth Thursday in November"}}], "employees": [{"uuid": "1ca3cd25-3eda-48c6-ac88-f0e7fb91a15a"}]}
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  put-companies-company_uuid-holiday_pay_policy:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "1b37938b017c7fd7116bada007072290", "federal_holidays": {"mlk_day": {"selected": true}, "memorial_day": {"selected": true}, "independence_day": {"selected": true}, "veterans_day": {"selected": true}, "thanksgiving": {"selected": true}, "christmas_day": {"selected": true}}}
      responses:
        "200":
          application/json: {"version": "1b37938b017c7fd7116bada007072290", "company_uuid": "b7845189-f12b-4378-918a-d2b9de3dc4ea", "federal_holidays": [{"new_years_day": {"selected": false, "name": "New Year's Day", "date": "January 1"}, "mlk_day": {"selected": true, "name": "Martin Luther King, Jr. Day", "date": "Third Monday in January"}, "presidents_day": {"selected": false, "name": "Presidents' Day", "date": "Third Monday in February"}, "memorial_day": {"selected": true, "name": "Memorial Day", "date": "Last Monday in May"}, "juneteenth": {"selected": false, "name": "Juneteenth", "date": "June 19"}, "independence_day": {"selected": true, "name": "Independence Day", "date": "July 4"}, "labor_day": {"selected": false, "name": "Labor Day", "date": "First Monday in September"}, "columbus_day": {"selected": false, "name": "Columbus Day (Indigenous Peoples' Day)", "date": "Second Monday in October"}, "veterans_day": {"selected": true, "name": "Veterans Day", "date": "November 11"}, "thanksgiving": {"selected": true, "name": "Thanksgiving", "date": "Fourth Thursday in November"}}], "employees": [{"uuid": "1ca3cd25-3eda-48c6-ac88-f0e7fb91a15a"}]}
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  delete-companies-company_uuid-holiday_pay_policy:
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  put-companies-company_uuid-holiday_pay_policy-add:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "1b37938b017c7fd7116bada007072290", "employees": [{"uuid": "1ca3cd25-3eda-48c6-ac88-f0e7fb91a15a"}, {"uuid": "fe977550-6621-4cfc-b4af-60b6af58c8ef"}]}
      responses:
        "200":
          application/json: {"version": "1b37938b017c7fd7116bada007072290", "company_uuid": "b7845189-f12b-4378-918a-d2b9de3dc4ea", "federal_holidays": [{"new_years_day": {"selected": false, "name": "New Year's Day", "date": "January 1"}, "mlk_day": {"selected": true, "name": "Martin Luther King, Jr. Day", "date": "Third Monday in January"}, "presidents_day": {"selected": false, "name": "Presidents' Day", "date": "Third Monday in February"}, "memorial_day": {"selected": true, "name": "Memorial Day", "date": "Last Monday in May"}, "juneteenth": {"selected": false, "name": "Juneteenth", "date": "June 19"}, "independence_day": {"selected": true, "name": "Independence Day", "date": "July 4"}, "labor_day": {"selected": false, "name": "Labor Day", "date": "First Monday in September"}, "columbus_day": {"selected": false, "name": "Columbus Day (Indigenous Peoples' Day)", "date": "Second Monday in October"}, "veterans_day": {"selected": true, "name": "Veterans Day", "date": "November 11"}, "thanksgiving": {"selected": true, "name": "Thanksgiving", "date": "Fourth Thursday in November"}}], "employees": [{"uuid": "1ca3cd25-3eda-48c6-ac88-f0e7fb91a15a"}]}
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  put-companies-company_uuid-holiday_pay_policy-remove:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "1b37938b017c7fd7116bada007072290", "employees": [{"uuid": "1ca3cd25-3eda-48c6-ac88-f0e7fb91a15a"}, {"uuid": "fe977550-6621-4cfc-b4af-60b6af58c8ef"}]}
      responses:
        "200":
          application/json: {"version": "1b37938b017c7fd7116bada007072290", "company_uuid": "b7845189-f12b-4378-918a-d2b9de3dc4ea", "federal_holidays": [{"new_years_day": {"selected": false, "name": "New Year's Day", "date": "January 1"}, "mlk_day": {"selected": true, "name": "Martin Luther King, Jr. Day", "date": "Third Monday in January"}, "presidents_day": {"selected": false, "name": "Presidents' Day", "date": "Third Monday in February"}, "memorial_day": {"selected": true, "name": "Memorial Day", "date": "Last Monday in May"}, "juneteenth": {"selected": false, "name": "Juneteenth", "date": "June 19"}, "independence_day": {"selected": true, "name": "Independence Day", "date": "July 4"}, "labor_day": {"selected": false, "name": "Labor Day", "date": "First Monday in September"}, "columbus_day": {"selected": false, "name": "Columbus Day (Indigenous Peoples' Day)", "date": "Second Monday in October"}, "veterans_day": {"selected": true, "name": "Veterans Day", "date": "November 11"}, "thanksgiving": {"selected": true, "name": "Thanksgiving", "date": "Fourth Thursday in November"}}], "employees": [{"uuid": "1ca3cd25-3eda-48c6-ac88-f0e7fb91a15a"}]}
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-companies-company_uuid-paid_holidays:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"year": "2023"}
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-notifications-notification_uuid:
    Example:
      parameters:
        path:
          notification_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "7b1d0df1-6403-4a06-8768-c1dd7d24d27a", "company_uuid": "88f7cca1-dcad-4d20-84db-7fb80303d69f", "title": "Action required: Additional information needed to process payroll", "message": "If we do not receive this information as soon as possible, your payroll may not be processed on time.", "category": "information_request", "actionable": true, "published_at": "2022-01-01T00:00:00.000Z", "due_at": "2022-02-01T00:00:00.000Z", "resources": [{"entity_type": "Employee", "entity_uuid": "21b6f9ce-0ac4-4745-8d8a-127f8c0f00f2"}]}
    Basic:
      parameters:
        path:
          notification_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          notification_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          notification_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-events:
    Example:
      parameters:
        query:
          sort_order: "asc"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "f7397a24-57ad-4fae-b011-d258e8232900", "event_type": "employee.bank_account.created", "resource_type": "Company", "resource_uuid": "92a20431-9489-4bde-ad27-6feb20b969d5", "entity_type": "BankAccount", "entity_uuid": "92a20431-9489-4bde-ad27-6feb20b969d5", "timestamp": 1686784995}]
  get-recovery-cases:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "e83d273e-4ae9-4b61-9c71-4030c2f73093", "company_uuid": "c5e3e3e9-732f-4762-849e-20b5cec9036f", "status": "open", "latest_error_code": "R01", "original_debit_date": "2023-10-11T00:00:00Z", "check_date": "2023-10-13T00:00:00Z", "payroll_uuid": "210f2034-fb4a-4059-b109-6c3b5efe499d", "contractor_payment_uuids": ["<value>", "<value>", "<value>"], "amount_outstanding": "10499.43", "event_total_amount": "5912.07"}]
  redebit-recovery-case:
    Basic:
      parameters:
        path:
          recovery_case_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          recovery_case_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          recovery_case_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-ach-transactions:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "123e4567-e89b-12d3-a456-426655440000", "company_uuid": "456e7890-e12b-34c5-d678-901234567890", "payment_event_type": "Payroll", "payment_event_uuid": "789e0123-e45f-67ab-c890-123456789012", "recipient_type": "Employee", "recipient_uuid": "012e3456-f78d-90ab-12cd-345678901234", "error_code": "<value>", "transaction_type": "Credit employee pay", "payment_status": "submitted", "payment_direction": "credit", "payment_event_check_date": "2023-10-02T00:00:00Z", "payment_date": "2023-10-17T00:00:00Z", "amount": "123.00", "description": "PAY 380654"}]
  get-wire_in_requests-wire_in_request_uuid:
    example:
      parameters:
        path:
          wire_in_request_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "c5fdae57-5483-4529-9aae-f0edceed92d4", "status": "awaiting_funds", "origination_bank": "JP Morgan Chase", "origination_bank_address": "1 Chase Plaza, New York, NY 10081", "recipient_name": "Gusto, Inc", "recipient_address": "525 20th Street, San Francisco, CA 94107", "recipient_account_number": "21911761", "recipient_routing_number": "123454321", "additional_notes": "Additional Notes", "bank_name": "JP Morgan Chase", "date_sent": "2024-06-10T00:00:00Z", "unique_tracking_code": "1trvxwxp57zf", "payment_type": "Payroll", "payment_uuid": "payroll", "amount_sent": "1014500.00", "requested_amount": "1014500.00", "wire_in_deadline": "2024-06-21T18:00:00Z"}
  put-wire_in_requests-wire_in_request_uuid:
    Example:
      parameters:
        path:
          wire_in_request_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"date_sent": "2024-06-10T00:00:00Z", "bank_name": "Chase", "amount_sent": "314500", "additional_notes": "Wire for 2024-06-15 payroll."}
    example:
      parameters:
        path:
          wire_in_request_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"date_sent": "<value>", "bank_name": "<value>", "amount_sent": "<value>"}
      responses:
        "200":
          application/json: {"uuid": "c5fdae57-5483-4529-9aae-f0edceed92d4", "status": "awaiting_funds", "origination_bank": "JP Morgan Chase", "origination_bank_address": "1 Chase Plaza, New York, NY 10081", "recipient_name": "Gusto, Inc", "recipient_address": "525 20th Street, San Francisco, CA 94107", "recipient_account_number": "21911761", "recipient_routing_number": "123454321", "additional_notes": "Additional Notes", "bank_name": "JP Morgan Chase", "date_sent": "2024-06-10T00:00:00Z", "unique_tracking_code": "1trvxwxp57zf", "payment_type": "Payroll", "payment_uuid": "payroll", "amount_sent": "1014500.00", "requested_amount": "1014500.00", "wire_in_deadline": "2024-06-21T18:00:00Z"}
    Basic:
      parameters:
        path:
          wire_in_request_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"date_sent": "<value>", "bank_name": "<value>", "amount_sent": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll."}]}
    Resource:
      parameters:
        path:
          wire_in_request_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"date_sent": "<value>", "bank_name": "<value>", "amount_sent": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          wire_in_request_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"date_sent": "<value>", "bank_name": "<value>", "amount_sent": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "hours", "category": "invalid_attribute_value", "message": "Ella Fitzgerald is paid fixed wage and hours cannot be set on a contractor payment"}]}, {"error_key": "contractor_payments", "category": "nested_errors", "errors": [{"error_key": "wage", "category": "invalid_attribute_value", "message": "Isaiah Berlin is paid hourly and wage cannot be set on a contractor payment"}]}]}
  get-companies-company_uuid-wire_in_request_uuid:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "c5fdae57-5483-4529-9aae-f0edceed92d4", "status": "rfi", "origination_bank": "JP Morgan Chase", "origination_bank_address": "1 Chase Plaza, New York, NY 10081", "recipient_name": "Gusto, Inc", "recipient_address": "525 20th Street, San Francisco, CA 94107", "recipient_account_number": "21911761", "recipient_routing_number": "5773243", "additional_notes": "Additional Notes", "bank_name": "Chase", "date_sent": "2024-06-10T00:00:00Z", "unique_tracking_code": "1trvxwxp57zf", "payment_type": "Payroll,", "payment_uuid": "payroll", "amount_sent": "1054693.52", "requested_amount": "1054693.52", "wire_in_deadline": "2024-06-21T18:00:00Z"}]
examplesVersion: 1.0.0
generatedTests: {}
